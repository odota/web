"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UNABLE_TO_OPEN_DISPLAY = exports.UNABLE_TO_ACCESS_SCREEN_RECORDING_API = exports.UNABLE_TO_ACCESS_AUTOMATION_API = exports.NATIVE_BINARY_HAS_FAILED = exports.UNABLE_TO_RUN_BROWSERS = exports.BROWSER_PATH_NOT_SET = exports.BASIC_ERROR_MESSAGE = void 0;
const util_1 = require("util");
const dedent_1 = __importDefault(require("dedent"));
const PROCESS_OUTPUT = ({ output }) => dedent_1.default `
    Process output:
    ${output}
`;
exports.BASIC_ERROR_MESSAGE = data => dedent_1.default `
    An error was thrown.
    Error data:
    ${util_1.inspect(data)}
`;
exports.BROWSER_PATH_NOT_SET = () => dedent_1.default `
    Unable to run the browser. The browser path or command template is not specified.
`;
exports.UNABLE_TO_RUN_BROWSERS = ({ path }) => dedent_1.default `
    Unable to run the browser. The file at ${path} does not exist or is not executable.
`;
exports.NATIVE_BINARY_HAS_FAILED = ({ binary, exitCode, output }) => dedent_1.default `
    The ${binary} process failed with the ${exitCode} exit code.
    ${output ? PROCESS_OUTPUT({ output }) : ''}
`;
exports.UNABLE_TO_ACCESS_AUTOMATION_API = ({ binary }) => dedent_1.default `
    The ${binary} process cannot access the Automation API.
`;
exports.UNABLE_TO_ACCESS_SCREEN_RECORDING_API = ({ binary }) => dedent_1.default `
    The ${binary} process cannot access the Screen Recording API.
`;
exports.UNABLE_TO_OPEN_DISPLAY = ({ binary }) => dedent_1.default `
    The ${binary} process cannot open the display.
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RlbXBsYXRlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSwrQkFBK0I7QUFDL0Isb0RBQTRCO0FBRzVCLE1BQU0sY0FBYyxHQUFHLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsZ0JBQU0sQ0FBQzs7TUFFeEMsTUFBTTtDQUNYLENBQUM7QUFFVyxRQUFBLG1CQUFtQixHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsZ0JBQU0sQ0FBQzs7O01BRzNDLGNBQU8sQ0FBQyxJQUFJLENBQUU7Q0FDcEIsQ0FBQztBQUVXLFFBQUEsb0JBQW9CLEdBQUksR0FBRyxFQUFFLENBQUMsZ0JBQU0sQ0FBQzs7Q0FFakQsQ0FBQztBQUVXLFFBQUEsc0JBQXNCLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxnQkFBTSxDQUFDOzZDQUNkLElBQUk7Q0FDaEQsQ0FBQztBQUVXLFFBQUEsd0JBQXdCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDLGdCQUFNLENBQUM7VUFDdkUsTUFBTSw0QkFBNEIsUUFBUTtNQUM3QyxNQUFNLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUc7Q0FDL0MsQ0FBQztBQUVXLFFBQUEsK0JBQStCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQyxnQkFBTSxDQUFDO1VBQzVELE1BQU07Q0FDZixDQUFDO0FBRVcsUUFBQSxxQ0FBcUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDLGdCQUFNLENBQUM7VUFDbEUsTUFBTTtDQUNmLENBQUM7QUFFVyxRQUFBLHNCQUFzQixHQUFHLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsZ0JBQU0sQ0FBQztVQUNuRCxNQUFNO0NBQ2YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluc3BlY3QgfSBmcm9tICd1dGlsJztcbmltcG9ydCBkZWRlbnQgZnJvbSAnZGVkZW50JztcblxuXG5jb25zdCBQUk9DRVNTX09VVFBVVCA9ICh7IG91dHB1dCB9KSA9PiBkZWRlbnQgYFxuICAgIFByb2Nlc3Mgb3V0cHV0OlxuICAgICR7b3V0cHV0fVxuYDtcblxuZXhwb3J0IGNvbnN0IEJBU0lDX0VSUk9SX01FU1NBR0UgPSBkYXRhID0+IGRlZGVudCBgXG4gICAgQW4gZXJyb3Igd2FzIHRocm93bi5cbiAgICBFcnJvciBkYXRhOlxuICAgICR7IGluc3BlY3QoZGF0YSkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEJST1dTRVJfUEFUSF9OT1RfU0VUICA9ICgpID0+IGRlZGVudCBgXG4gICAgVW5hYmxlIHRvIHJ1biB0aGUgYnJvd3Nlci4gVGhlIGJyb3dzZXIgcGF0aCBvciBjb21tYW5kIHRlbXBsYXRlIGlzIG5vdCBzcGVjaWZpZWQuXG5gO1xuXG5leHBvcnQgY29uc3QgVU5BQkxFX1RPX1JVTl9CUk9XU0VSUyA9ICh7IHBhdGggfSkgPT4gZGVkZW50IGBcbiAgICBVbmFibGUgdG8gcnVuIHRoZSBicm93c2VyLiBUaGUgZmlsZSBhdCAke3BhdGh9IGRvZXMgbm90IGV4aXN0IG9yIGlzIG5vdCBleGVjdXRhYmxlLlxuYDtcblxuZXhwb3J0IGNvbnN0IE5BVElWRV9CSU5BUllfSEFTX0ZBSUxFRCA9ICh7IGJpbmFyeSwgZXhpdENvZGUsIG91dHB1dCB9KSA9PiBkZWRlbnQgYFxuICAgIFRoZSAke2JpbmFyeX0gcHJvY2VzcyBmYWlsZWQgd2l0aCB0aGUgJHtleGl0Q29kZX0gZXhpdCBjb2RlLlxuICAgICR7IG91dHB1dCA/IFBST0NFU1NfT1VUUFVUKHsgb3V0cHV0IH0pIDogJycgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFVOQUJMRV9UT19BQ0NFU1NfQVVUT01BVElPTl9BUEkgPSAoeyBiaW5hcnkgfSkgPT4gZGVkZW50IGBcbiAgICBUaGUgJHtiaW5hcnl9IHByb2Nlc3MgY2Fubm90IGFjY2VzcyB0aGUgQXV0b21hdGlvbiBBUEkuXG5gO1xuXG5leHBvcnQgY29uc3QgVU5BQkxFX1RPX0FDQ0VTU19TQ1JFRU5fUkVDT1JESU5HX0FQSSA9ICh7IGJpbmFyeSB9KSA9PiBkZWRlbnQgYFxuICAgIFRoZSAke2JpbmFyeX0gcHJvY2VzcyBjYW5ub3QgYWNjZXNzIHRoZSBTY3JlZW4gUmVjb3JkaW5nIEFQSS5cbmA7XG5cbmV4cG9ydCBjb25zdCBVTkFCTEVfVE9fT1BFTl9ESVNQTEFZID0gKHsgYmluYXJ5IH0pID0+IGRlZGVudCBgXG4gICAgVGhlICR7YmluYXJ5fSBwcm9jZXNzIGNhbm5vdCBvcGVuIHRoZSBkaXNwbGF5LlxuYDtcbiJdfQ==