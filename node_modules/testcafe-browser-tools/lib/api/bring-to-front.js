"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const os_family_1 = __importDefault(require("os-family"));
const find_window_1 = __importDefault(require("./find-window"));
const exec_1 = require("../utils/exec");
const binaries_1 = __importDefault(require("../binaries"));
/**
 * Brings the browser window on top of all other windows.
 * @function
 * @async
 * @name bringWindowToFront
 * @param {string | object} windowDescriptor - The title of the web page opened in the window or a descriptor returned by findWindow.
 */
async function default_1(windowDescriptor) {
    var windowDescription = typeof windowDescriptor === 'string' ? await find_window_1.default(windowDescriptor) : windowDescriptor;
    var bringWindowToFrontArguments = void 0;
    if (os_family_1.default.win)
        bringWindowToFrontArguments = [windowDescription.hwnd];
    else if (os_family_1.default.linux)
        bringWindowToFrontArguments = [windowDescription.windowId];
    else if (os_family_1.default.mac)
        bringWindowToFrontArguments = [windowDescription.processId, windowDescription.windowId];
    else
        return;
    await exec_1.execFile(binaries_1.default.bringToFront, bringWindowToFrontArguments);
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJpbmctdG8tZnJvbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBpL2JyaW5nLXRvLWZyb250LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMERBQTJCO0FBQzNCLGdFQUF1QztBQUN2Qyx3Q0FBeUM7QUFDekMsMkRBQW1DO0FBRW5DOzs7Ozs7R0FNRztBQUNZLEtBQUssb0JBQVcsZ0JBQWdCO0lBQzNDLElBQUksaUJBQWlCLEdBQUcsT0FBTyxnQkFBZ0IsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0scUJBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQztJQUNySCxJQUFJLDJCQUEyQixHQUFHLEtBQUssQ0FBQyxDQUFDO0lBRXpDLElBQUksbUJBQUUsQ0FBQyxHQUFHO1FBQ04sMkJBQTJCLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN0RCxJQUFJLG1CQUFFLENBQUMsS0FBSztRQUNiLDJCQUEyQixHQUFHLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDMUQsSUFBSSxtQkFBRSxDQUFDLEdBQUc7UUFDWCwyQkFBMkIsR0FBRyxDQUFDLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7UUFFeEYsT0FBTztJQUVYLE1BQU0sZUFBUSxDQUFDLGtCQUFRLENBQUMsWUFBWSxFQUFFLDJCQUEyQixDQUFDLENBQUM7QUFDdkUsQ0FBQztBQWRELDRCQWNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9TIGZyb20gJ29zLWZhbWlseSc7XG5pbXBvcnQgZmluZFdpbmRvdyBmcm9tICcuL2ZpbmQtd2luZG93JztcbmltcG9ydCB7IGV4ZWNGaWxlIH0gZnJvbSAnLi4vdXRpbHMvZXhlYyc7XG5pbXBvcnQgQklOQVJJRVMgZnJvbSAnLi4vYmluYXJpZXMnO1xuXG4vKipcbiAqIEJyaW5ncyB0aGUgYnJvd3NlciB3aW5kb3cgb24gdG9wIG9mIGFsbCBvdGhlciB3aW5kb3dzLlxuICogQGZ1bmN0aW9uXG4gKiBAYXN5bmNcbiAqIEBuYW1lIGJyaW5nV2luZG93VG9Gcm9udFxuICogQHBhcmFtIHtzdHJpbmcgfCBvYmplY3R9IHdpbmRvd0Rlc2NyaXB0b3IgLSBUaGUgdGl0bGUgb2YgdGhlIHdlYiBwYWdlIG9wZW5lZCBpbiB0aGUgd2luZG93IG9yIGEgZGVzY3JpcHRvciByZXR1cm5lZCBieSBmaW5kV2luZG93LlxuICovXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiAod2luZG93RGVzY3JpcHRvcikge1xuICAgIHZhciB3aW5kb3dEZXNjcmlwdGlvbiA9IHR5cGVvZiB3aW5kb3dEZXNjcmlwdG9yID09PSAnc3RyaW5nJyA/IGF3YWl0IGZpbmRXaW5kb3cod2luZG93RGVzY3JpcHRvcikgOiB3aW5kb3dEZXNjcmlwdG9yO1xuICAgIHZhciBicmluZ1dpbmRvd1RvRnJvbnRBcmd1bWVudHMgPSB2b2lkIDA7XG5cbiAgICBpZiAoT1Mud2luKVxuICAgICAgICBicmluZ1dpbmRvd1RvRnJvbnRBcmd1bWVudHMgPSBbd2luZG93RGVzY3JpcHRpb24uaHduZF07XG4gICAgZWxzZSBpZiAoT1MubGludXgpXG4gICAgICAgIGJyaW5nV2luZG93VG9Gcm9udEFyZ3VtZW50cyA9IFt3aW5kb3dEZXNjcmlwdGlvbi53aW5kb3dJZF07XG4gICAgZWxzZSBpZiAoT1MubWFjKVxuICAgICAgICBicmluZ1dpbmRvd1RvRnJvbnRBcmd1bWVudHMgPSBbd2luZG93RGVzY3JpcHRpb24ucHJvY2Vzc0lkLCB3aW5kb3dEZXNjcmlwdGlvbi53aW5kb3dJZF07XG4gICAgZWxzZVxuICAgICAgICByZXR1cm47XG5cbiAgICBhd2FpdCBleGVjRmlsZShCSU5BUklFUy5icmluZ1RvRnJvbnQsIGJyaW5nV2luZG93VG9Gcm9udEFyZ3VtZW50cyk7XG59XG4iXX0=