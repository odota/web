"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const os_family_1 = __importDefault(require("os-family"));
const find_window_1 = __importDefault(require("./find-window"));
const exec_1 = require("../utils/exec");
const binaries_1 = __importDefault(require("../binaries"));
/**
 * Closes the browser window where the specified web page is opened.
 * @function
 * @async
 * @name close
 * @param {string | object} windowDescriptor - The title of the web page opened in the window or a descriptor returned by findWindow.
 */
async function default_1(windowDescriptor) {
    var windowDescription = typeof windowDescriptor === 'string' ? await find_window_1.default(windowDescriptor) : windowDescriptor;
    if (!windowDescription)
        return;
    var closeWindowArguments = void 0;
    if (os_family_1.default.win)
        closeWindowArguments = [windowDescription.hwnd];
    else if (os_family_1.default.mac)
        closeWindowArguments = [windowDescription.processId, windowDescription.windowId];
    else if (os_family_1.default.linux)
        closeWindowArguments = [windowDescription.windowId];
    else
        return;
    await exec_1.execFile(binaries_1.default.close, closeWindowArguments);
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBpL2Nsb3NlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMERBQTJCO0FBQzNCLGdFQUF1QztBQUN2Qyx3Q0FBeUM7QUFDekMsMkRBQW1DO0FBRW5DOzs7Ozs7R0FNRztBQUNZLEtBQUssb0JBQVcsZ0JBQWdCO0lBQzNDLElBQUksaUJBQWlCLEdBQUcsT0FBTyxnQkFBZ0IsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0scUJBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQztJQUVySCxJQUFJLENBQUMsaUJBQWlCO1FBQ2xCLE9BQU87SUFFWCxJQUFJLG9CQUFvQixHQUFHLEtBQUssQ0FBQyxDQUFDO0lBRWxDLElBQUksbUJBQUUsQ0FBQyxHQUFHO1FBQ04sb0JBQW9CLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMvQyxJQUFJLG1CQUFFLENBQUMsR0FBRztRQUNYLG9CQUFvQixHQUFHLENBQUMsaUJBQWlCLENBQUMsU0FBUyxFQUFFLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ2hGLElBQUksbUJBQUUsQ0FBQyxLQUFLO1FBQ2Isb0JBQW9CLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7UUFFcEQsT0FBTztJQUVYLE1BQU0sZUFBUSxDQUFDLGtCQUFRLENBQUMsS0FBSyxFQUFFLG9CQUFvQixDQUFDLENBQUM7QUFDekQsQ0FBQztBQWxCRCw0QkFrQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT1MgZnJvbSAnb3MtZmFtaWx5JztcbmltcG9ydCBmaW5kV2luZG93IGZyb20gJy4vZmluZC13aW5kb3cnO1xuaW1wb3J0IHsgZXhlY0ZpbGUgfSBmcm9tICcuLi91dGlscy9leGVjJztcbmltcG9ydCBCSU5BUklFUyBmcm9tICcuLi9iaW5hcmllcyc7XG5cbi8qKlxuICogQ2xvc2VzIHRoZSBicm93c2VyIHdpbmRvdyB3aGVyZSB0aGUgc3BlY2lmaWVkIHdlYiBwYWdlIGlzIG9wZW5lZC5cbiAqIEBmdW5jdGlvblxuICogQGFzeW5jXG4gKiBAbmFtZSBjbG9zZVxuICogQHBhcmFtIHtzdHJpbmcgfCBvYmplY3R9IHdpbmRvd0Rlc2NyaXB0b3IgLSBUaGUgdGl0bGUgb2YgdGhlIHdlYiBwYWdlIG9wZW5lZCBpbiB0aGUgd2luZG93IG9yIGEgZGVzY3JpcHRvciByZXR1cm5lZCBieSBmaW5kV2luZG93LlxuICovXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiAod2luZG93RGVzY3JpcHRvcikge1xuICAgIHZhciB3aW5kb3dEZXNjcmlwdGlvbiA9IHR5cGVvZiB3aW5kb3dEZXNjcmlwdG9yID09PSAnc3RyaW5nJyA/IGF3YWl0IGZpbmRXaW5kb3cod2luZG93RGVzY3JpcHRvcikgOiB3aW5kb3dEZXNjcmlwdG9yO1xuXG4gICAgaWYgKCF3aW5kb3dEZXNjcmlwdGlvbilcbiAgICAgICAgcmV0dXJuO1xuXG4gICAgdmFyIGNsb3NlV2luZG93QXJndW1lbnRzID0gdm9pZCAwO1xuXG4gICAgaWYgKE9TLndpbilcbiAgICAgICAgY2xvc2VXaW5kb3dBcmd1bWVudHMgPSBbd2luZG93RGVzY3JpcHRpb24uaHduZF07XG4gICAgZWxzZSBpZiAoT1MubWFjKVxuICAgICAgICBjbG9zZVdpbmRvd0FyZ3VtZW50cyA9IFt3aW5kb3dEZXNjcmlwdGlvbi5wcm9jZXNzSWQsIHdpbmRvd0Rlc2NyaXB0aW9uLndpbmRvd0lkXTtcbiAgICBlbHNlIGlmIChPUy5saW51eClcbiAgICAgICAgY2xvc2VXaW5kb3dBcmd1bWVudHMgPSBbd2luZG93RGVzY3JpcHRpb24ud2luZG93SWRdO1xuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuO1xuXG4gICAgYXdhaXQgZXhlY0ZpbGUoQklOQVJJRVMuY2xvc2UsIGNsb3NlV2luZG93QXJndW1lbnRzKTtcbn1cbiJdfQ==