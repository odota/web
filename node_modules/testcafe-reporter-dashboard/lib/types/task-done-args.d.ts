import * as t from 'io-ts';
export declare const TaskResultSchema: t.ReadonlyC<t.ExactC<t.TypeC<{
    failedCount: t.NumberC;
    passedCount: t.NumberC;
    skippedCount: t.NumberC;
}>>>;
export declare type TaskResult = t.TypeOf<typeof TaskResultSchema>;
export declare const TaskDoneArgsSchema: t.ReadonlyC<t.ExactC<t.TypeC<{
    endTime: import("io-ts-types").DateFromISOStringC;
    passed: t.NumberC;
    warnings: t.ArrayC<t.StringC>;
    warningsUploadId: t.UnionC<[t.StringC, t.UndefinedC]>;
    result: t.ReadonlyC<t.ExactC<t.TypeC<{
        failedCount: t.NumberC;
        passedCount: t.NumberC;
        skippedCount: t.NumberC;
    }>>>;
    buildId: t.UnionC<[t.BrandC<t.StringC, import("./common").MaxLengthString<100>>, t.UndefinedC]>;
}>>>;
export declare type TaskDoneArgs = t.TypeOf<typeof TaskDoneArgsSchema>;
