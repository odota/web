{"version":3,"file":"ponyfill.es6.mjs","sources":["../src/stub/symbol.js","../src/stub/number-isinteger.js","../src/utils.js","../src/stub/number-isnan.js","../spec/reference-implementation/lib/helpers.js","../src/stub/helpers.js","../src/stub/assert.js","../spec/reference-implementation/lib/utils.js","../spec/reference-implementation/lib/queue-with-sizes.js","../spec/reference-implementation/lib/writable-stream.js","../spec/reference-implementation/lib/readable-stream.js","../spec/reference-implementation/lib/byte-length-queuing-strategy.js","../spec/reference-implementation/lib/count-queuing-strategy.js","../spec/reference-implementation/lib/transform-stream.js"],"sourcesContent":["const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n  Symbol :\n  description => `Symbol(${description})`;\n\nexport default SymbolPolyfill;\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#Polyfill\nconst NumberIsInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' &&\n    isFinite(value) &&\n    Math.floor(value) === value;\n};\n\nexport default NumberIsInteger;\n","export function noop() {\n  // do nothing\n}\n\nfunction getGlobals() {\n  /* global self, window, global */\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n","'use strict';\r\nconst assert = require('better-assert');\r\n\r\nconst isFakeDetached = Symbol('is \"detached\" for our purposes');\r\n\r\nfunction IsPropertyKey(argument) {\r\n  return typeof argument === 'string' || typeof argument === 'symbol';\r\n}\r\n\r\nexports.typeIsObject = x => (typeof x === 'object' && x !== null) || typeof x === 'function';\r\n\r\nexports.createDataProperty = (o, p, v) => {\r\n  assert(exports.typeIsObject(o));\r\n  Object.defineProperty(o, p, { value: v, writable: true, enumerable: true, configurable: true });\r\n};\r\n\r\nexports.createArrayFromList = elements => {\r\n  // We use arrays to represent lists, so this is basically a no-op.\r\n  // Do a slice though just in case we happen to depend on the unique-ness.\r\n  return elements.slice();\r\n};\r\n\r\nexports.ArrayBufferCopy = (dest, destOffset, src, srcOffset, n) => {\r\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\r\n};\r\n\r\nexports.IsFiniteNonNegativeNumber = v => {\r\n  if (exports.IsNonNegativeNumber(v) === false) {\r\n    return false;\r\n  }\r\n\r\n  if (v === Infinity) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexports.IsNonNegativeNumber = v => {\r\n  if (typeof v !== 'number') {\r\n    return false;\r\n  }\r\n\r\n  if (Number.isNaN(v)) {\r\n    return false;\r\n  }\r\n\r\n  if (v < 0) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction Call(F, V, args) {\r\n  if (typeof F !== 'function') {\r\n    throw new TypeError('Argument is not a function');\r\n  }\r\n\r\n  return Function.prototype.apply.call(F, V, args);\r\n}\r\n\r\nexports.Call = Call;\r\n\r\nexports.CreateAlgorithmFromUnderlyingMethod = (underlyingObject, methodName, algoArgCount, extraArgs) => {\r\n  assert(underlyingObject !== undefined);\r\n  assert(IsPropertyKey(methodName));\r\n  assert(algoArgCount === 0 || algoArgCount === 1);\r\n  assert(Array.isArray(extraArgs));\r\n  const method = underlyingObject[methodName];\r\n  if (method !== undefined) {\r\n    if (typeof method !== 'function') {\r\n      throw new TypeError(`${method} is not a method`);\r\n    }\r\n    switch (algoArgCount) {\r\n      case 0: {\r\n        return () => {\r\n          return PromiseCall(method, underlyingObject, extraArgs);\r\n        };\r\n      }\r\n\r\n      case 1: {\r\n        return arg => {\r\n          const fullArgs = [arg].concat(extraArgs);\r\n          return PromiseCall(method, underlyingObject, fullArgs);\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return () => Promise.resolve();\r\n};\r\n\r\nexports.InvokeOrNoop = (O, P, args) => {\r\n  assert(O !== undefined);\r\n  assert(IsPropertyKey(P));\r\n  assert(Array.isArray(args));\r\n\r\n  const method = O[P];\r\n  if (method === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  return Call(method, O, args);\r\n};\r\n\r\nfunction PromiseCall(F, V, args) {\r\n  assert(typeof F === 'function');\r\n  assert(V !== undefined);\r\n  assert(Array.isArray(args));\r\n  try {\r\n    return Promise.resolve(Call(F, V, args));\r\n  } catch (value) {\r\n    return Promise.reject(value);\r\n  }\r\n}\r\n\r\nexports.PromiseCall = PromiseCall;\r\n\r\n// Not implemented correctly\r\nexports.TransferArrayBuffer = O => {\r\n  assert(!exports.IsDetachedBuffer(O));\r\n  const transferredIshVersion = O.slice();\r\n\r\n  // This is specifically to fool tests that test \"is transferred\" by taking a non-zero-length\r\n  // ArrayBuffer and checking if its byteLength starts returning 0.\r\n  Object.defineProperty(O, 'byteLength', {\r\n    get() {\r\n      return 0;\r\n    }\r\n  });\r\n  O[isFakeDetached] = true;\r\n\r\n  return transferredIshVersion;\r\n};\r\n\r\n// Not implemented correctly\r\nexports.IsDetachedBuffer = O => {\r\n  return isFakeDetached in O;\r\n};\r\n\r\nexports.ValidateAndNormalizeHighWaterMark = highWaterMark => {\r\n  highWaterMark = Number(highWaterMark);\r\n  if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\r\n    throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\r\n  }\r\n\r\n  return highWaterMark;\r\n};\r\n\r\nexports.MakeSizeAlgorithmFromSizeFunction = size => {\r\n  if (size === undefined) {\r\n    return () => 1;\r\n  }\r\n  if (typeof size !== 'function') {\r\n    throw new TypeError('size property of a queuing strategy must be a function');\r\n  }\r\n  return chunk => size(chunk);\r\n};\r\n\r\nexports.PerformPromiseThen = (promise, onFulfilled, onRejected) => {\r\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\r\n  // approximation.\r\n  return Promise.prototype.then.call(promise, onFulfilled, onRejected);\r\n};\r\n\r\nexports.WaitForAll = (promises, successSteps, failureSteps) => {\r\n  let rejected = false;\r\n  const rejectionHandler = arg => {\r\n    if (rejected === false) {\r\n      rejected = true;\r\n      failureSteps(arg);\r\n    }\r\n  };\r\n  let index = 0;\r\n  let fulfilledCount = 0;\r\n  const total = promises.length;\r\n  const result = new Array(total);\r\n  for (const promise of promises) {\r\n    const promiseIndex = index;\r\n    const fulfillmentHandler = arg => {\r\n      result[promiseIndex] = arg;\r\n      ++fulfilledCount;\r\n      if (fulfilledCount === total) {\r\n        successSteps(result);\r\n      }\r\n    };\r\n    exports.PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\r\n    ++index;\r\n  }\r\n};\r\n\r\nexports.WaitForAllPromise = (promises, successSteps, failureSteps = undefined) => {\r\n  let resolvePromise;\r\n  let rejectPromise;\r\n  const promise = new Promise((resolve, reject) => {\r\n    resolvePromise = resolve;\r\n    rejectPromise = reject;\r\n  });\r\n  if (failureSteps === undefined) {\r\n    failureSteps = arg => {\r\n      throw arg;\r\n    };\r\n  }\r\n  const successStepsWrapper = results => {\r\n    try {\r\n      const stepsResult = successSteps(results);\r\n      resolvePromise(stepsResult);\r\n    } catch (e) {\r\n      rejectPromise(e);\r\n    }\r\n  };\r\n  const failureStepsWrapper = reason => {\r\n    try {\r\n      const stepsResult = failureSteps(reason);\r\n      resolvePromise(stepsResult);\r\n    } catch (e) {\r\n      rejectPromise(e);\r\n    }\r\n  };\r\n  exports.WaitForAll(promises, successStepsWrapper, failureStepsWrapper);\r\n  return promise;\r\n};\r\n","export {\n  typeIsObject,\n  createDataProperty,\n  createArrayFromList,\n  ArrayBufferCopy,\n  IsFiniteNonNegativeNumber,\n  IsNonNegativeNumber,\n  Call,\n  CreateAlgorithmFromUnderlyingMethod,\n  InvokeOrNoop,\n  PromiseCall,\n  ValidateAndNormalizeHighWaterMark,\n  MakeSizeAlgorithmFromSizeFunction,\n  PerformPromiseThen,\n  WaitForAll,\n  WaitForAllPromise\n} from '../../spec/reference-implementation/lib/helpers';\n\n// Not implemented correctly\nexport function TransferArrayBuffer(O) {\n  return O;\n}\n\n// Not implemented correctly\nexport function IsDetachedBuffer(O) { // eslint-disable-line no-unused-vars\n  return false;\n}\n","import { noop } from '../utils';\n\nexport default function assert() {\n  // do nothing\n}\n\nassert.AssertionError = noop;\n","'use strict';\nconst assert = require('assert');\n\nexports.rethrowAssertionErrorRejection = e => {\n  // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n  // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n  // expect any errors, but assertion errors are always problematic.\n  if (e && e instanceof assert.AssertionError) {\n    setTimeout(() => {\n      throw e;\n    }, 0);\n  }\n};\n","'use strict';\nconst assert = require('better-assert');\nconst { IsFiniteNonNegativeNumber } = require('./helpers.js');\n\nexports.DequeueValue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift();\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n};\n\nexports.EnqueueValueWithSize = (container, value, size) => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  size = Number(size);\n  if (!IsFiniteNonNegativeNumber(size)) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n};\n\nexports.PeekQueueValue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue[0];\n  return pair.value;\n};\n\nexports.ResetQueue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = [];\n  container._queueTotalSize = 0;\n};\n","'use strict';\nconst assert = require('better-assert');\n\n// Calls to verbose() are purely for debugging the reference implementation and tests. They are not part of the standard\n// and do not appear in the standard text.\nconst verbose = require('debug')('streams:writable-stream:verbose');\n\nconst { CreateAlgorithmFromUnderlyingMethod, InvokeOrNoop, ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction, typeIsObject } = require('./helpers.js');\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\nconst { DequeueValue, EnqueueValueWithSize, PeekQueueValue, ResetQueue } = require('./queue-with-sizes.js');\n\nconst AbortSteps = Symbol('[[AbortSteps]]');\nconst ErrorSteps = Symbol('[[ErrorSteps]]');\n\nclass WritableStream {\n  constructor(underlyingSink = {}, strategy = {}) {\n    InitializeWritableStream(this);\n\n    const size = strategy.size;\n    let highWaterMark = strategy.highWaterMark;\n\n    const type = underlyingSink.type;\n\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\n    if (highWaterMark === undefined) {\n      highWaterMark = 1;\n    }\n    highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  get locked() {\n    if (IsWritableStream(this) === false) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  abort(reason) {\n    if (IsWritableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  getWriter() {\n    if (IsWritableStream(this) === false) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nmodule.exports = {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter(stream) {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1,\n                              sizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n\n  const stream = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream(stream) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = [];\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsWritableStreamLocked(stream) {\n  assert(IsWritableStream(stream) === true);\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream, reason) {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return Promise.resolve(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = new Promise((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest._promise = promise;\n\n  if (wasAlreadyErroring === false) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream) {\n  assert(IsWritableStreamLocked(stream) === true);\n  assert(stream._state === 'writable');\n\n  const promise = new Promise((resolve, reject) => {\n    const writeRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream, error) {\n  verbose('WritableStreamDealWithRejection(stream, %o)', error);\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream, reason) {\n  verbose('WritableStreamStartErroring(stream, %o)', reason);\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream) {\n  verbose('WritableStreamFinishErroring()');\n  assert(stream._state === 'erroring');\n  assert(WritableStreamHasOperationMarkedInFlight(stream) === false);\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  for (const writeRequest of stream._writeRequests) {\n    writeRequest._reject(storedError);\n  }\n  stream._writeRequests = [];\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring === true) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  promise.then(\n      () => {\n        abortRequest._resolve();\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      },\n      reason => {\n        abortRequest._reject(reason);\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream, error) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream, error) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream) {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream) {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    verbose('WritableStreamHasOperationMarkedInFlight() is false');\n    return false;\n  }\n\n  verbose('WritableStreamHasOperationMarkedInFlight() is true');\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n  verbose('WritableStreamRejectCloseAndClosedPromiseIfNeeded()');\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n    writer._closedPromise.catch(() => {});\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream, backpressure) {\n  assert(stream._state === 'writable');\n  assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure === true) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(backpressure === false);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\nclass WritableStreamDefaultWriter {\n  constructor(stream) {\n    if (IsWritableStream(stream) === false) {\n      throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n    }\n    if (IsWritableStreamLocked(stream) === true) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      this._readyPromise.catch(() => {});\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      this._readyPromise.catch(() => {});\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n      this._closedPromise.catch(() => {});\n    }\n  }\n\n  get closed() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  get desiredSize() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  get ready() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  abort(reason) {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return Promise.reject(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  close() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return Promise.reject(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n      return Promise.reject(new TypeError('cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  releaseLock() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  write(chunk) {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer, reason) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return Promise.reject(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\n  const promise = new Promise((resolve, reject) => {\n    const closeRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  if (stream._backpressure === true && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n    return Promise.resolve();\n  }\n\n  if (state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n  writer._closedPromise.catch(() => {});\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n  verbose('WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, %o)', error);\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n  writer._readyPromise.catch(() => {});\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer) {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    'Writer was released and can no longer be used to monitor the stream\\'s closedness');\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined;\n}\n\nfunction WritableStreamDefaultWriterWrite(writer, chunk) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return Promise.reject(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n    return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nclass WritableStreamDefaultController {\n  constructor() {\n    throw new TypeError('WritableStreamDefaultController cannot be constructed explicitly');\n  }\n\n  error(e) {\n    if (IsWritableStreamDefaultController(this) === false) {\n      throw new TypeError(\n        'WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  [AbortSteps](reason) {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                              abortAlgorithm, highWaterMark, sizeAlgorithm) {\n  assert(IsWritableStream(stream) === true);\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined;\n  controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = Promise.resolve(startResult);\n  startPromise.then(\n      () => {\n        assert(stream._state === 'writable' || stream._state === 'erroring');\n        controller._started = true;\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n      },\n      r => {\n        assert(stream._state === 'writable' || stream._state === 'erroring');\n        controller._started = true;\n        WritableStreamDealWithRejection(stream, r);\n      }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n  assert(underlyingSink !== undefined);\n\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingSink, 'start', [controller]);\n  }\n\n  const writeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'write', 1, [controller]);\n  const closeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'close', 0, []);\n  const abortAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'abort', 1, []);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller) {\n  controller._writeAlgorithm = undefined;\n  controller._closeAlgorithm = undefined;\n  controller._abortAlgorithm = undefined;\n  controller._strategySizeAlgorithm = undefined;\n}\n\nfunction WritableStreamDefaultControllerClose(controller) {\n  EnqueueValueWithSize(controller, 'close', 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller) {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n  const writeRecord = { chunk };\n\n  try {\n    EnqueueValueWithSize(controller, writeRecord, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n  verbose('WritableStreamDefaultControllerAdvanceQueueIfNeeded()');\n  const stream = controller._controlledWritableStream;\n\n  if (controller._started === false) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return;\n  }\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const writeRecord = PeekQueueValue(controller);\n  if (writeRecord === 'close') {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  sinkClosePromise.then(\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  sinkWritePromise.then(\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller) {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller, error) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name) {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name) {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer) {\n  writer._closedPromise = new Promise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n  writer._closedPromise = Promise.reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer) {\n  writer._closedPromise = Promise.resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterClosedPromiseReject(writer, reason) {\n  assert(writer._closedPromise_resolve !== undefined);\n  assert(writer._closedPromise_reject !== undefined);\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer, reason) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  writer._closedPromise = Promise.reject(reason);\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResolve(writer) {\n  assert(writer._closedPromise_resolve !== undefined);\n  assert(writer._closedPromise_reject !== undefined);\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer) {\n  verbose('defaultWriterReadyPromiseInitialize()');\n  writer._readyPromise = new Promise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n  verbose('defaultWriterReadyPromiseInitializeAsRejected(writer, %o)', reason);\n  writer._readyPromise = Promise.reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer) {\n  verbose('defaultWriterReadyPromiseInitializeAsResolved()');\n  writer._readyPromise = Promise.resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n\nfunction defaultWriterReadyPromiseReject(writer, reason) {\n  verbose('defaultWriterReadyPromiseReject(writer, %o)', reason);\n  assert(writer._readyPromise_resolve !== undefined);\n  assert(writer._readyPromise_reject !== undefined);\n\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer) {\n  verbose('defaultWriterReadyPromiseReset()');\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  writer._readyPromise = new Promise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer, reason) {\n  verbose('defaultWriterReadyPromiseResetToRejected(writer, %o)', reason);\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  writer._readyPromise = Promise.reject(reason);\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseResolve(writer) {\n  verbose('defaultWriterReadyPromiseResolve()');\n  assert(writer._readyPromise_resolve !== undefined);\n  assert(writer._readyPromise_reject !== undefined);\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n","'use strict';\n/* global AbortSignal:false */\n\nconst assert = require('better-assert');\nconst { ArrayBufferCopy, CreateAlgorithmFromUnderlyingMethod, IsFiniteNonNegativeNumber, InvokeOrNoop,\n        IsDetachedBuffer, TransferArrayBuffer, ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction, createArrayFromList, typeIsObject, WaitForAllPromise } =\n      require('./helpers.js');\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\nconst { DequeueValue, EnqueueValueWithSize, ResetQueue } = require('./queue-with-sizes.js');\nconst { AcquireWritableStreamDefaultWriter, IsWritableStream, IsWritableStreamLocked,\n        WritableStreamAbort, WritableStreamDefaultWriterCloseWithErrorPropagation,\n        WritableStreamDefaultWriterRelease, WritableStreamDefaultWriterWrite, WritableStreamCloseQueuedOrInFlight } =\n      require('./writable-stream.js');\n\nconst CancelSteps = Symbol('[[CancelSteps]]');\nconst PullSteps = Symbol('[[PullSteps]]');\n\nclass ReadableStream {\n  constructor(underlyingSource = {}, strategy = {}) {\n    InitializeReadableStream(this);\n\n    const size = strategy.size;\n    let highWaterMark = strategy.highWaterMark;\n\n    const type = underlyingSource.type;\n    const typeString = String(type);\n    if (typeString === 'bytes') {\n      if (size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n\n      if (highWaterMark === undefined) {\n        highWaterMark = 0;\n      }\n      highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n      SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n    } else if (type === undefined) {\n      const sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\n\n      if (highWaterMark === undefined) {\n        highWaterMark = 1;\n      }\n      highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n    } else {\n      throw new RangeError('Invalid type is specified');\n    }\n  }\n\n  get locked() {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  cancel(reason) {\n    if (IsReadableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  getReader({ mode } = {}) {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    if (mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    mode = String(mode);\n\n    if (mode === 'byob') {\n      return AcquireReadableStreamBYOBReader(this);\n    }\n\n    throw new RangeError('Invalid mode is specified');\n  }\n\n  pipeThrough({ writable, readable }, { preventClose, preventAbort, preventCancel, signal } = {}) {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n\n    if (IsWritableStream(writable) === false) {\n      throw new TypeError('writable argument to pipeThrough must be a WritableStream');\n    }\n\n    if (IsReadableStream(readable) === false) {\n      throw new TypeError('readable argument to pipeThrough must be a ReadableStream');\n    }\n\n    preventClose = Boolean(preventClose);\n    preventAbort = Boolean(preventAbort);\n    preventCancel = Boolean(preventCancel);\n\n    if (signal !== undefined && !isAbortSignal(signal)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough\\'s signal option must be an AbortSignal');\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(writable) === true) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(this, writable, preventClose, preventAbort, preventCancel, signal);\n\n    promise.catch(() => {});\n\n    return readable;\n  }\n\n  pipeTo(dest, { preventClose, preventAbort, preventCancel, signal } = {}) {\n    if (IsReadableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('pipeTo'));\n    }\n    if (IsWritableStream(dest) === false) {\n      return Promise.reject(\n          new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n    }\n\n    preventClose = Boolean(preventClose);\n    preventAbort = Boolean(preventAbort);\n    preventCancel = Boolean(preventCancel);\n\n    if (signal !== undefined && !isAbortSignal(signal)) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s signal option must be an AbortSignal'));\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n    }\n    if (IsWritableStreamLocked(dest) === true) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n    }\n\n    return ReadableStreamPipeTo(this, dest, preventClose, preventAbort, preventCancel, signal);\n  }\n\n  tee() {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return createArrayFromList(branches);\n  }\n}\n\nmodule.exports = {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  ReadableStream,\n  IsReadableStreamDisturbed,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure,\n  ReadableStreamDefaultControllerCanCloseOrEnqueue\n};\n\n// Abstract operations for the ReadableStream.\n\nfunction AcquireReadableStreamBYOBReader(stream) {\n  return new ReadableStreamBYOBReader(stream);\n}\n\nfunction AcquireReadableStreamDefaultReader(stream) {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1,\n                              sizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n\n  const stream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller = Object.create(ReadableStreamDefaultController.prototype);\n\n  SetUpReadableStreamDefaultController(\n      stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 0,\n                                  autoAllocateChunkSize = undefined) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(Number.isInteger(autoAllocateChunkSize) === true);\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  const stream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller = Object.create(ReadableByteStreamController.prototype);\n\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark,\n                                    autoAllocateChunkSize);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nfunction IsReadableStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamDisturbed(stream) {\n  assert(IsReadableStream(stream) === true);\n\n  return stream._disturbed;\n}\n\nfunction IsReadableStreamLocked(stream) {\n  assert(IsReadableStream(stream) === true);\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n  assert(IsReadableStream(source) === true);\n  assert(IsWritableStream(dest) === true);\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(IsReadableStreamLocked(source) === false);\n  assert(IsWritableStreamLocked(dest) === false);\n\n  const reader = AcquireReadableStreamDefaultReader(source);\n  const writer = AcquireWritableStreamDefaultWriter(dest);\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = Promise.resolve();\n\n  return new Promise((resolve, reject) => {\n    let abortAlgorithm;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = new DOMException('Aborted', 'AbortError');\n        const actions = [];\n        if (preventAbort === false) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return Promise.resolve();\n          });\n        }\n        if (preventCancel === false) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return Promise.resolve();\n          });\n        }\n        shutdownWithAction(() => WaitForAllPromise(actions.map(action => action()), results => results), true, error);\n      };\n\n      if (signal.aborted === true) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return new Promise((resolveLoop, rejectLoop) => {\n        function next(done) {\n          if (done) {\n            resolveLoop();\n          } else {\n            pipeStep().then(next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep() {\n      if (shuttingDown === true) {\n        return Promise.resolve(true);\n      }\n\n      return writer._readyPromise.then(() => {\n        return ReadableStreamDefaultReaderRead(reader).then(({ value, done }) => {\n          if (done === true) {\n            return true;\n          }\n\n          currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(() => {});\n          return false;\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (preventAbort === false) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (preventCancel === false) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (preventClose === false) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (preventCancel === false) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    pipeLoop().catch(err => {\n      currentWrite = Promise.resolve();\n      rethrowAssertionErrorRejection(err);\n    });\n\n    function waitForWritesToFinish() {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return currentWrite.then(() => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n    }\n\n    function isOrBecomesErrored(stream, promise, action) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        promise.catch(action).catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function isOrBecomesClosed(stream, promise, action) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        promise.then(action).catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function shutdownWithAction(action, originalIsError, originalError) {\n      if (shuttingDown === true) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n        waitForWritesToFinish().then(doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest() {\n        action().then(\n            () => finalize(originalIsError, originalError),\n            newError => finalize(true, newError)\n        )\n            .catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function shutdown(isError, error) {\n      if (shuttingDown === true) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n        waitForWritesToFinish().then(() => finalize(isError, error)).catch(rethrowAssertionErrorRejection);\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError, error) {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n    }\n  });\n}\n\nfunction ReadableStreamTee(stream, cloneForBranch2) {\n  assert(IsReadableStream(stream) === true);\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader(stream);\n\n  let closedOrErrored = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1;\n  let reason2;\n  let branch1;\n  let branch2;\n\n  let resolveCancelPromise;\n  const cancelPromise = new Promise(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm() {\n    return ReadableStreamDefaultReaderRead(reader).then(result => {\n      assert(typeIsObject(result));\n      const value = result.value;\n      const done = result.done;\n      assert(typeof done === 'boolean');\n\n      if (done === true && closedOrErrored === false) {\n        if (canceled1 === false) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n        }\n        if (canceled2 === false) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n        }\n        closedOrErrored = true;\n      }\n\n      if (closedOrErrored === true) {\n        return;\n      }\n\n      const value1 = value;\n      const value2 = value;\n\n      // There is no way to access the cloning code right now in the reference implementation.\n      // If we add one then we'll need an implementation for serializable objects.\n      // if (canceled2 === false && cloneForBranch2 === true) {\n      //   value2 = StructuredDeserialize(StructuredSerialize(value2));\n      // }\n\n      if (canceled1 === false) {\n        ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, value1);\n      }\n\n      if (canceled2 === false) {\n        ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, value2);\n      }\n    });\n  }\n\n  function cancel1Algorithm(reason) {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2 === true) {\n      const compositeReason = createArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason) {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1 === true) {\n      const compositeReason = createArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {}\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  reader._closedPromise.catch(r => {\n    if (closedOrErrored === true) {\n      return;\n    }\n\n    ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n    closedOrErrored = true;\n  });\n\n  return [branch1, branch2];\n}\n\n// ReadableStream API exposed for controllers.\n\nfunction ReadableStreamAddReadIntoRequest(stream, forAuthorCode) {\n  assert(IsReadableStreamBYOBReader(stream._reader) === true);\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  const promise = new Promise((resolve, reject) => {\n    const readIntoRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _forAuthorCode: forAuthorCode\n    };\n\n    stream._reader._readIntoRequests.push(readIntoRequest);\n  });\n\n  return promise;\n}\n\nfunction ReadableStreamAddReadRequest(stream, forAuthorCode) {\n  assert(IsReadableStreamDefaultReader(stream._reader) === true);\n  assert(stream._state === 'readable');\n\n  const promise = new Promise((resolve, reject) => {\n    const readRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _forAuthorCode: forAuthorCode\n    };\n\n    stream._reader._readRequests.push(readRequest);\n  });\n\n  return promise;\n}\n\nfunction ReadableStreamCancel(stream, reason) {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return Promise.resolve(undefined);\n  }\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return sourceCancelPromise.then(() => undefined);\n}\n\nfunction ReadableStreamClose(stream) {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return undefined;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === true) {\n    for (const { _resolve, _forAuthorCode } of reader._readRequests) {\n      _resolve(ReadableStreamCreateReadResult(undefined, true, _forAuthorCode));\n    }\n    reader._readRequests = [];\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  return undefined;\n}\n\nfunction ReadableStreamCreateReadResult(value, done, forAuthorCode) {\n  let prototype = null;\n  if (forAuthorCode === true) {\n    prototype = Object.prototype;\n  }\n  assert(typeof done === 'boolean');\n  const obj = Object.create(prototype);\n  Object.defineProperty(obj, 'value', { value, enumerable: true, writable: true, configurable: true });\n  Object.defineProperty(obj, 'done', { value: done, enumerable: true, writable: true, configurable: true });\n  return obj;\n}\n\nfunction ReadableStreamError(stream, e) {\n  assert(IsReadableStream(stream) === true);\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return undefined;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === true) {\n    for (const readRequest of reader._readRequests) {\n      readRequest._reject(e);\n    }\n\n    reader._readRequests = [];\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n\n    for (const readIntoRequest of reader._readIntoRequests) {\n      readIntoRequest._reject(e);\n    }\n\n    reader._readIntoRequests = [];\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n  reader._closedPromise.catch(() => {});\n}\n\nfunction ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n  const reader = stream._reader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift();\n  readIntoRequest._resolve(ReadableStreamCreateReadResult(chunk, done, readIntoRequest._forAuthorCode));\n}\n\nfunction ReadableStreamFulfillReadRequest(stream, chunk, done) {\n  const reader = stream._reader;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift();\n  readRequest._resolve(ReadableStreamCreateReadResult(chunk, done, readRequest._forAuthorCode));\n}\n\nfunction ReadableStreamGetNumReadIntoRequests(stream) {\n  return stream._reader._readIntoRequests.length;\n}\n\nfunction ReadableStreamGetNumReadRequests(stream) {\n  return stream._reader._readRequests.length;\n}\n\nfunction ReadableStreamHasBYOBReader(stream) {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (IsReadableStreamBYOBReader(reader) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamHasDefaultReader(stream) {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === false) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nclass ReadableStreamDefaultReader {\n  constructor(stream) {\n    if (IsReadableStream(stream) === false) {\n      throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n    }\n    if (IsReadableStreamLocked(stream) === true) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = [];\n  }\n\n  get closed() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  cancel(reason) {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  read() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('read from'));\n    }\n\n    return ReadableStreamDefaultReaderRead(this, true);\n  }\n\n  releaseLock() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nclass ReadableStreamBYOBReader {\n  constructor(stream) {\n    if (!IsReadableStream(stream)) {\n      throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' +\n          'byte source');\n    }\n    if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n          'source');\n    }\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = [];\n  }\n\n  get closed() {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  cancel(reason) {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  read(view) {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('read from'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return Promise.reject(new TypeError('view must be an array buffer view'));\n    }\n\n    if (IsDetachedBuffer(view.buffer) === true) {\n      return Promise.reject(new TypeError('Cannot read into a view onto a detached ArrayBuffer'));\n    }\n\n    if (view.byteLength === 0) {\n      return Promise.reject(new TypeError('view must have non-zero byteLength'));\n    }\n\n    return ReadableStreamBYOBReaderRead(this, view, true);\n  }\n\n  releaseLock() {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\n// Abstract operations for the readers.\n\nfunction IsReadableStreamBYOBReader(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamDefaultReader(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamReaderGenericInitialize(reader, stream) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n    reader._closedPromise.catch(() => {});\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nfunction ReadableStreamReaderGenericCancel(reader, reason) {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nfunction ReadableStreamReaderGenericRelease(reader) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n        reader,\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n        reader,\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n  }\n  reader._closedPromise.catch(() => {});\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined;\n}\n\nfunction ReadableStreamBYOBReaderRead(reader, view, forAuthorCode = false) {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  // Controllers must implement this.\n  return ReadableByteStreamControllerPullInto(stream._readableStreamController, view, forAuthorCode);\n}\n\nfunction ReadableStreamDefaultReaderRead(reader, forAuthorCode = false) {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return Promise.resolve(ReadableStreamCreateReadResult(undefined, true, forAuthorCode));\n  }\n\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(stream._state === 'readable');\n\n  return stream._readableStreamController[PullSteps](forAuthorCode);\n}\n\n// Controllers\n\nclass ReadableStreamDefaultController {\n  constructor() {\n    throw new TypeError();\n  }\n\n  get desiredSize() {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  enqueue(chunk) {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  error(e) {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  [CancelSteps](reason) {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [PullSteps](forAuthorCode) {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested === true && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      return Promise.resolve(ReadableStreamCreateReadResult(chunk, false, forAuthorCode));\n    }\n\n    const pendingPromise = ReadableStreamAddReadRequest(stream, forAuthorCode);\n    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    return pendingPromise;\n  }\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (shouldPull === false) {\n    return undefined;\n  }\n\n  if (controller._pulling === true) {\n    controller._pullAgain = true;\n    return undefined;\n  }\n\n  assert(controller._pullAgain === false);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  pullPromise.then(\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n\n  return undefined;\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller) {\n  const stream = controller._controlledReadableStream;\n\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === false) {\n    return false;\n  }\n\n  if (controller._started === false) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller) {\n  controller._pullAlgorithm = undefined;\n  controller._cancelAlgorithm = undefined;\n  controller._strategySizeAlgorithm = undefined;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction ReadableStreamDefaultControllerClose(controller) {\n  const stream = controller._controlledReadableStream;\n\n  assert(ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === true);\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nfunction ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n  const stream = controller._controlledReadableStream;\n\n  assert(ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === true);\n\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\n  return undefined;\n}\n\nfunction ReadableStreamDefaultControllerError(controller, e) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nfunction ReadableStreamDefaultControllerGetDesiredSize(controller) {\n  const stream = controller._controlledReadableStream;\n  const state = stream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nfunction ReadableStreamDefaultControllerHasBackpressure(controller) {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller) === true) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n  const state = controller._controlledReadableStream._state;\n\n  if (controller._closeRequested === false && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction SetUpReadableStreamDefaultController(\n  stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined;\n  controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  Promise.resolve(startResult).then(\n    () => {\n      controller._started = true;\n\n      assert(controller._pulling === false);\n      assert(controller._pullAgain === false);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark,\n                                                                  sizeAlgorithm) {\n  assert(underlyingSource !== undefined);\n\n  const controller = Object.create(ReadableStreamDefaultController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingSource, 'start', [controller]);\n  }\n\n  const pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'pull', 0, [controller]);\n  const cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'cancel', 1, []);\n\n  SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm,\n                                       highWaterMark, sizeAlgorithm);\n}\n\nclass ReadableStreamBYOBRequest {\n  constructor() {\n    throw new TypeError('ReadableStreamBYOBRequest cannot be used directly');\n  }\n\n  get view() {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  respond(bytesWritten) {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('respond');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view.buffer) === true) {\n      throw new TypeError('The BYOB request\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  respondWithNewView(view) {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('respond');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (IsDetachedBuffer(view.buffer) === true) {\n      throw new TypeError('The supplied view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nclass ReadableByteStreamController {\n  constructor() {\n    throw new TypeError('ReadableByteStreamController constructor cannot be used directly');\n  }\n\n  get byobRequest() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n      const firstDescriptor = this._pendingPullIntos[0];\n      const view = new Uint8Array(firstDescriptor.buffer,\n                                  firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                  firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n      const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n      SetUpReadableStreamBYOBRequest(byobRequest, this, view);\n      this._byobRequest = byobRequest;\n    }\n\n    return this._byobRequest;\n  }\n\n  get desiredSize() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  enqueue(chunk) {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n    }\n\n    if (IsDetachedBuffer(chunk.buffer) === true) {\n      throw new TypeError('Cannot enqueue a view onto a detached ArrayBuffer');\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  error(e) {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  [CancelSteps](reason) {\n    if (this._pendingPullIntos.length > 0) {\n      const firstDescriptor = this._pendingPullIntos[0];\n      firstDescriptor.bytesFilled = 0;\n    }\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [PullSteps](forAuthorCode) {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream) === true);\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      const entry = this._queue.shift();\n      this._queueTotalSize -= entry.byteLength;\n\n      ReadableByteStreamControllerHandleQueueDrain(this);\n\n      let view;\n      try {\n        view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n      } catch (viewE) {\n        return Promise.reject(viewE);\n      }\n\n      return Promise.resolve(ReadableStreamCreateReadResult(view, false, forAuthorCode));\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        return Promise.reject(bufferE);\n      }\n\n      const pullIntoDescriptor = {\n        buffer,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        elementSize: 1,\n        ctor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    const promise = ReadableStreamAddReadRequest(stream, forAuthorCode);\n\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n\n    return promise;\n  }\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nfunction IsReadableByteStreamController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamBYOBRequest(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller) {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (shouldPull === false) {\n    return undefined;\n  }\n\n  if (controller._pulling === true) {\n    controller._pullAgain = true;\n    return undefined;\n  }\n\n  assert(controller._pullAgain === false);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  pullPromise.then(\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n\n  return undefined;\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = [];\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n  assert(stream._state !== 'errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.ctor(\n      pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue[0];\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (ready === false) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n  if (controller._byobRequest === undefined) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined;\n  controller._byobRequest._view = undefined;\n  controller._byobRequest = undefined;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n  assert(controller._closeRequested === false);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos[0];\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerPullInto(controller, view, forAuthorCode) {\n  const stream = controller._controlledReadableByteStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = view.constructor.BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor;\n\n  const buffer = TransferArrayBuffer(view.buffer);\n  const pullIntoDescriptor = {\n    buffer,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    return ReadableStreamAddReadIntoRequest(stream, forAuthorCode);\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    return Promise.resolve(ReadableStreamCreateReadResult(emptyView, true, forAuthorCode));\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      return Promise.resolve(ReadableStreamCreateReadResult(filledView, false, forAuthorCode));\n    }\n\n    if (controller._closeRequested === true) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      return Promise.reject(e);\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  const promise = ReadableStreamAddReadIntoRequest(stream, forAuthorCode);\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n\n  return promise;\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  assert(firstDescriptor.bytesFilled === 0);\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream) === true) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n  if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n    throw new RangeError('bytesWritten out of range');\n  }\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    // TODO: Figure out whether we should detach the buffer or not here.\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n  const firstDescriptor = controller._pendingPullIntos[0];\n\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(stream._state === 'readable');\n\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(controller) {\n  const descriptor = controller._pendingPullIntos.shift();\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested === true) {\n    return false;\n  }\n\n  if (controller._started === false) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller) {\n  controller._pullAlgorithm = undefined;\n  controller._cancelAlgorithm = undefined;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nfunction ReadableByteStreamControllerClose(controller) {\n  const stream = controller._controlledReadableByteStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos[0];\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nfunction ReadableByteStreamControllerEnqueue(controller, chunk) {\n  const stream = controller._controlledReadableByteStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (ReadableStreamHasDefaultReader(stream) === true) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream) === true) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(IsReadableStreamLocked(stream) === false);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerError(controller, e) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller) {\n  const stream = controller._controlledReadableByteStream;\n  const state = stream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction ReadableByteStreamControllerRespond(controller, bytesWritten) {\n  bytesWritten = Number(bytesWritten);\n  if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n    throw new RangeError('bytesWritten must be a finite');\n  }\n\n  assert(controller._pendingPullIntos.length > 0);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nfunction ReadableByteStreamControllerRespondWithNewView(controller, view) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos[0];\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.byteLength !== view.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n\n  firstDescriptor.buffer = view.buffer;\n\n  ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n}\n\nfunction SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm,\n                                           highWaterMark, autoAllocateChunkSize) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(Number.isInteger(autoAllocateChunkSize) === true);\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = [];\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  Promise.resolve(startResult).then(\n      () => {\n        controller._started = true;\n\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      },\n      r => {\n        ReadableByteStreamControllerError(controller, r);\n      }\n  )\n      .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n  assert(underlyingByteSource !== undefined);\n\n  const controller = Object.create(ReadableByteStreamController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingByteSource, 'start', [controller]);\n  }\n\n  const pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'pull', 0, [controller]);\n  const cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'cancel', 1, []);\n\n  let autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize !== undefined) {\n    autoAllocateChunkSize = Number(autoAllocateChunkSize);\n    if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n      throw new RangeError('autoAllocateChunkSize must be a positive integer');\n    }\n  }\n\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark,\n                                    autoAllocateChunkSize);\n}\n\nfunction SetUpReadableStreamBYOBRequest(request, controller, view) {\n  assert(IsReadableByteStreamController(controller) === true);\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view) === true);\n  assert(IsDetachedBuffer(view.buffer) === false);\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStream.\n\nfunction isAbortSignal(value) {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n\n  // Use the brand check to distinguish a real AbortSignal from a fake one.\n  const aborted = Object.getOwnPropertyDescriptor(AbortSignal.prototype, 'aborted').get;\n  try {\n    aborted.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n\n// Helper functions for the readers.\n\nfunction readerLockException(name) {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n\nfunction defaultReaderClosedPromiseInitialize(reader) {\n  reader._closedPromise = new Promise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nfunction defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n  reader._closedPromise = Promise.reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseInitializeAsResolved(reader) {\n  reader._closedPromise = Promise.resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseReject(reader, reason) {\n  assert(reader._closedPromise_resolve !== undefined);\n  assert(reader._closedPromise_reject !== undefined);\n\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseResetToRejected(reader, reason) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  reader._closedPromise = Promise.reject(reason);\n}\n\nfunction defaultReaderClosedPromiseResolve(reader) {\n  assert(reader._closedPromise_resolve !== undefined);\n  assert(reader._closedPromise_reject !== undefined);\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction byobReaderBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name) {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n","'use strict';\nconst { createDataProperty } = require('./helpers.js');\n\nmodule.exports = class ByteLengthQueuingStrategy {\n  constructor({ highWaterMark }) {\n    createDataProperty(this, 'highWaterMark', highWaterMark);\n  }\n\n  size(chunk) {\n    return chunk.byteLength;\n  }\n};\n","'use strict';\nconst { createDataProperty } = require('./helpers.js');\n\nmodule.exports = class CountQueuingStrategy {\n  constructor({ highWaterMark }) {\n    createDataProperty(this, 'highWaterMark', highWaterMark);\n  }\n\n  size() {\n    return 1;\n  }\n};\n","'use strict';\nconst assert = require('better-assert');\n\n// Calls to verbose() are purely for debugging the reference implementation and tests. They are not part of the standard\n// and do not appear in the standard text.\nconst verbose = require('debug')('streams:transform-stream:verbose');\nconst { InvokeOrNoop, CreateAlgorithmFromUnderlyingMethod, PromiseCall, typeIsObject,\n        ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction } = require('./helpers.js');\nconst { CreateReadableStream, ReadableStreamDefaultControllerClose, ReadableStreamDefaultControllerEnqueue,\n        ReadableStreamDefaultControllerError, ReadableStreamDefaultControllerGetDesiredSize,\n        ReadableStreamDefaultControllerHasBackpressure,\n        ReadableStreamDefaultControllerCanCloseOrEnqueue } = require('./readable-stream.js');\nconst { CreateWritableStream, WritableStreamDefaultControllerErrorIfNeeded } = require('./writable-stream.js');\n\n// Class TransformStream\n\nclass TransformStream {\n  constructor(transformer = {}, writableStrategy = {}, readableStrategy = {}) {\n    const writableSizeFunction = writableStrategy.size;\n    let writableHighWaterMark = writableStrategy.highWaterMark;\n    const readableSizeFunction = readableStrategy.size;\n    let readableHighWaterMark = readableStrategy.highWaterMark;\n\n    const writableType = transformer.writableType;\n\n    if (writableType !== undefined) {\n      throw new RangeError('Invalid writable type specified');\n    }\n\n    const writableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(writableSizeFunction);\n    if (writableHighWaterMark === undefined) {\n      writableHighWaterMark = 1;\n    }\n    writableHighWaterMark = ValidateAndNormalizeHighWaterMark(writableHighWaterMark);\n\n    const readableType = transformer.readableType;\n\n    if (readableType !== undefined) {\n      throw new RangeError('Invalid readable type specified');\n    }\n\n    const readableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(readableSizeFunction);\n    if (readableHighWaterMark === undefined) {\n      readableHighWaterMark = 0;\n    }\n    readableHighWaterMark = ValidateAndNormalizeHighWaterMark(readableHighWaterMark);\n\n    let startPromise_resolve;\n    const startPromise = new Promise(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                              readableSizeAlgorithm);\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    const startResult = InvokeOrNoop(transformer, 'start', [this._transformStreamController]);\n    startPromise_resolve(startResult);\n  }\n\n  get readable() {\n    if (IsTransformStream(this) === false) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  get writable() {\n    if (IsTransformStream(this) === false) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\n// Transform Stream Abstract Operations\n\nfunction CreateTransformStream(startAlgorithm, transformAlgorithm, flushAlgorithm, writableHighWaterMark = 1,\n                               writableSizeAlgorithm = () => 1, readableHighWaterMark = 0,\n                               readableSizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve;\n  const startPromise = new Promise(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm,\n                                   readableHighWaterMark, readableSizeAlgorithm) {\n  function startAlgorithm() {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk) {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason) {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm() {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm() {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason) {\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n    return Promise.resolve();\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined;\n  stream._backpressureChangePromise = undefined;\n  stream._backpressureChangePromise_resolve = undefined;\n  TransformStreamSetBackpressure(stream, true);\n\n  // Used by IsWritableStream() which is called by SetUpTransformStreamDefaultController().\n  stream._transformStreamController = undefined;\n}\n\nfunction IsTransformStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream, e) {\n  verbose('TransformStreamError()');\n\n  ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  if (stream._backpressure === true) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream, backpressure) {\n  verbose(`TransformStreamSetBackpressure() [backpressure = ${backpressure}]`);\n\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = new Promise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\nclass TransformStreamDefaultController {\n  constructor() {\n    throw new TypeError('TransformStreamDefaultController instances cannot be created directly');\n  }\n\n  get desiredSize() {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n  }\n\n  enqueue(chunk) {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  error(reason) {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  terminate() {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n  assert(IsTransformStream(stream) === true);\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n  assert(transformer !== undefined);\n\n  const controller = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm = chunk => {\n    try {\n      TransformStreamDefaultControllerEnqueue(controller, chunk);\n      return Promise.resolve();\n    } catch (transformResultE) {\n      return Promise.reject(transformResultE);\n    }\n  };\n  const transformMethod = transformer.transform;\n  if (transformMethod !== undefined) {\n    if (typeof transformMethod !== 'function') {\n      throw new TypeError('transform is not a method');\n    }\n    transformAlgorithm = chunk => PromiseCall(transformMethod, transformer, [chunk, controller]);\n  }\n\n  const flushAlgorithm = CreateAlgorithmFromUnderlyingMethod(transformer, 'flush', 0, [controller]);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller) {\n  controller._transformAlgorithm = undefined;\n  controller._flushAlgorithm = undefined;\n}\n\nfunction TransformStreamDefaultControllerEnqueue(controller, chunk) {\n  verbose('TransformStreamDefaultControllerEnqueue()');\n\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController;\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === false) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure === true);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller, e) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromise.catch(r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate(controller) {\n  verbose('TransformStreamDefaultControllerTerminate()');\n\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController;\n\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\n    ReadableStreamDefaultControllerClose(readableController);\n  }\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n  verbose('TransformStreamDefaultSinkWriteAlgorithm()');\n\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure === true) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return backpressureChangePromise\n        .then(() => {\n          const writable = stream._writable;\n          const state = writable._state;\n          if (state === 'erroring') {\n            throw writable._storedError;\n          }\n          assert(state === 'writable');\n          return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n        });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n  // errored.\n  TransformStreamError(stream, reason);\n  return Promise.resolve();\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm(stream) {\n  verbose('TransformStreamDefaultSinkCloseAlgorithm()');\n\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  const controller = stream._transformStreamController;\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  // Return a promise that is fulfilled with undefined on success.\n  return flushPromise.then(() => {\n    if (readable._state === 'errored') {\n      throw readable._storedError;\n    }\n    const readableController = readable._readableStreamController;\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\n      ReadableStreamDefaultControllerClose(readableController);\n    }\n  }).catch(r => {\n    TransformStreamError(stream, r);\n    throw readable._storedError;\n  });\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream) {\n  verbose('TransformStreamDefaultSourcePullAlgorithm()');\n\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure === true);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\nmodule.exports = { CreateTransformStream, TransformStream };\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name) {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n"],"names":["Symbol","Number.isNaN","assert","require$$0","require$$1","rethrowAssertionErrorRejection","require$$2","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","require$$3","CreateAlgorithmFromUnderlyingMethod","IsFiniteNonNegativeNumber","InvokeOrNoop","IsDetachedBuffer","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","IsNonNegativeNumber","MakeSizeAlgorithmFromSizeFunction","typeIsObject","AcquireWritableStreamDefaultWriter","IsWritableStream","IsWritableStreamLocked","WritableStreamAbort","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamCloseQueuedOrInFlight","streamBrandCheckException","Number.isInteger","createDataProperty","verbose","CreateReadableStream","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerHasBackpressure","ReadableStreamDefaultControllerCanCloseOrEnqueue","CreateWritableStream","WritableStreamDefaultControllerErrorIfNeeded","defaultControllerBrandCheckException"],"mappings":"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"}