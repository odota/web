{"version":3,"file":"polyfill.js","sources":["../src/stub/symbol.js","../src/stub/number-isinteger.js","../src/utils.js","../src/stub/number-isnan.js","../spec/reference-implementation/lib/helpers.js","../src/stub/helpers.js","../src/stub/assert.js","../spec/reference-implementation/lib/utils.js","../spec/reference-implementation/lib/queue-with-sizes.js","../spec/reference-implementation/lib/writable-stream.js","../spec/reference-implementation/lib/readable-stream.js","../spec/reference-implementation/lib/byte-length-queuing-strategy.js","../spec/reference-implementation/lib/count-queuing-strategy.js","../spec/reference-implementation/lib/transform-stream.js","../src/polyfill.js"],"sourcesContent":["const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n  Symbol :\n  description => `Symbol(${description})`;\n\nexport default SymbolPolyfill;\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#Polyfill\nconst NumberIsInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' &&\n    isFinite(value) &&\n    Math.floor(value) === value;\n};\n\nexport default NumberIsInteger;\n","export function noop() {\n  // do nothing\n}\n\nfunction getGlobals() {\n  /* global self, window, global */\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n","'use strict';\r\nconst assert = require('better-assert');\r\n\r\nconst isFakeDetached = Symbol('is \"detached\" for our purposes');\r\n\r\nfunction IsPropertyKey(argument) {\r\n  return typeof argument === 'string' || typeof argument === 'symbol';\r\n}\r\n\r\nexports.typeIsObject = x => (typeof x === 'object' && x !== null) || typeof x === 'function';\r\n\r\nexports.createDataProperty = (o, p, v) => {\r\n  assert(exports.typeIsObject(o));\r\n  Object.defineProperty(o, p, { value: v, writable: true, enumerable: true, configurable: true });\r\n};\r\n\r\nexports.createArrayFromList = elements => {\r\n  // We use arrays to represent lists, so this is basically a no-op.\r\n  // Do a slice though just in case we happen to depend on the unique-ness.\r\n  return elements.slice();\r\n};\r\n\r\nexports.ArrayBufferCopy = (dest, destOffset, src, srcOffset, n) => {\r\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\r\n};\r\n\r\nexports.IsFiniteNonNegativeNumber = v => {\r\n  if (exports.IsNonNegativeNumber(v) === false) {\r\n    return false;\r\n  }\r\n\r\n  if (v === Infinity) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexports.IsNonNegativeNumber = v => {\r\n  if (typeof v !== 'number') {\r\n    return false;\r\n  }\r\n\r\n  if (Number.isNaN(v)) {\r\n    return false;\r\n  }\r\n\r\n  if (v < 0) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction Call(F, V, args) {\r\n  if (typeof F !== 'function') {\r\n    throw new TypeError('Argument is not a function');\r\n  }\r\n\r\n  return Function.prototype.apply.call(F, V, args);\r\n}\r\n\r\nexports.Call = Call;\r\n\r\nexports.CreateAlgorithmFromUnderlyingMethod = (underlyingObject, methodName, algoArgCount, extraArgs) => {\r\n  assert(underlyingObject !== undefined);\r\n  assert(IsPropertyKey(methodName));\r\n  assert(algoArgCount === 0 || algoArgCount === 1);\r\n  assert(Array.isArray(extraArgs));\r\n  const method = underlyingObject[methodName];\r\n  if (method !== undefined) {\r\n    if (typeof method !== 'function') {\r\n      throw new TypeError(`${method} is not a method`);\r\n    }\r\n    switch (algoArgCount) {\r\n      case 0: {\r\n        return () => {\r\n          return PromiseCall(method, underlyingObject, extraArgs);\r\n        };\r\n      }\r\n\r\n      case 1: {\r\n        return arg => {\r\n          const fullArgs = [arg].concat(extraArgs);\r\n          return PromiseCall(method, underlyingObject, fullArgs);\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return () => Promise.resolve();\r\n};\r\n\r\nexports.InvokeOrNoop = (O, P, args) => {\r\n  assert(O !== undefined);\r\n  assert(IsPropertyKey(P));\r\n  assert(Array.isArray(args));\r\n\r\n  const method = O[P];\r\n  if (method === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  return Call(method, O, args);\r\n};\r\n\r\nfunction PromiseCall(F, V, args) {\r\n  assert(typeof F === 'function');\r\n  assert(V !== undefined);\r\n  assert(Array.isArray(args));\r\n  try {\r\n    return Promise.resolve(Call(F, V, args));\r\n  } catch (value) {\r\n    return Promise.reject(value);\r\n  }\r\n}\r\n\r\nexports.PromiseCall = PromiseCall;\r\n\r\n// Not implemented correctly\r\nexports.TransferArrayBuffer = O => {\r\n  assert(!exports.IsDetachedBuffer(O));\r\n  const transferredIshVersion = O.slice();\r\n\r\n  // This is specifically to fool tests that test \"is transferred\" by taking a non-zero-length\r\n  // ArrayBuffer and checking if its byteLength starts returning 0.\r\n  Object.defineProperty(O, 'byteLength', {\r\n    get() {\r\n      return 0;\r\n    }\r\n  });\r\n  O[isFakeDetached] = true;\r\n\r\n  return transferredIshVersion;\r\n};\r\n\r\n// Not implemented correctly\r\nexports.IsDetachedBuffer = O => {\r\n  return isFakeDetached in O;\r\n};\r\n\r\nexports.ValidateAndNormalizeHighWaterMark = highWaterMark => {\r\n  highWaterMark = Number(highWaterMark);\r\n  if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\r\n    throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\r\n  }\r\n\r\n  return highWaterMark;\r\n};\r\n\r\nexports.MakeSizeAlgorithmFromSizeFunction = size => {\r\n  if (size === undefined) {\r\n    return () => 1;\r\n  }\r\n  if (typeof size !== 'function') {\r\n    throw new TypeError('size property of a queuing strategy must be a function');\r\n  }\r\n  return chunk => size(chunk);\r\n};\r\n\r\nexports.PerformPromiseThen = (promise, onFulfilled, onRejected) => {\r\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\r\n  // approximation.\r\n  return Promise.prototype.then.call(promise, onFulfilled, onRejected);\r\n};\r\n\r\nexports.WaitForAll = (promises, successSteps, failureSteps) => {\r\n  let rejected = false;\r\n  const rejectionHandler = arg => {\r\n    if (rejected === false) {\r\n      rejected = true;\r\n      failureSteps(arg);\r\n    }\r\n  };\r\n  let index = 0;\r\n  let fulfilledCount = 0;\r\n  const total = promises.length;\r\n  const result = new Array(total);\r\n  for (const promise of promises) {\r\n    const promiseIndex = index;\r\n    const fulfillmentHandler = arg => {\r\n      result[promiseIndex] = arg;\r\n      ++fulfilledCount;\r\n      if (fulfilledCount === total) {\r\n        successSteps(result);\r\n      }\r\n    };\r\n    exports.PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\r\n    ++index;\r\n  }\r\n};\r\n\r\nexports.WaitForAllPromise = (promises, successSteps, failureSteps = undefined) => {\r\n  let resolvePromise;\r\n  let rejectPromise;\r\n  const promise = new Promise((resolve, reject) => {\r\n    resolvePromise = resolve;\r\n    rejectPromise = reject;\r\n  });\r\n  if (failureSteps === undefined) {\r\n    failureSteps = arg => {\r\n      throw arg;\r\n    };\r\n  }\r\n  const successStepsWrapper = results => {\r\n    try {\r\n      const stepsResult = successSteps(results);\r\n      resolvePromise(stepsResult);\r\n    } catch (e) {\r\n      rejectPromise(e);\r\n    }\r\n  };\r\n  const failureStepsWrapper = reason => {\r\n    try {\r\n      const stepsResult = failureSteps(reason);\r\n      resolvePromise(stepsResult);\r\n    } catch (e) {\r\n      rejectPromise(e);\r\n    }\r\n  };\r\n  exports.WaitForAll(promises, successStepsWrapper, failureStepsWrapper);\r\n  return promise;\r\n};\r\n","export {\n  typeIsObject,\n  createDataProperty,\n  createArrayFromList,\n  ArrayBufferCopy,\n  IsFiniteNonNegativeNumber,\n  IsNonNegativeNumber,\n  Call,\n  CreateAlgorithmFromUnderlyingMethod,\n  InvokeOrNoop,\n  PromiseCall,\n  ValidateAndNormalizeHighWaterMark,\n  MakeSizeAlgorithmFromSizeFunction,\n  PerformPromiseThen,\n  WaitForAll,\n  WaitForAllPromise\n} from '../../spec/reference-implementation/lib/helpers';\n\n// Not implemented correctly\nexport function TransferArrayBuffer(O) {\n  return O;\n}\n\n// Not implemented correctly\nexport function IsDetachedBuffer(O) { // eslint-disable-line no-unused-vars\n  return false;\n}\n","import { noop } from '../utils';\n\nexport default function assert() {\n  // do nothing\n}\n\nassert.AssertionError = noop;\n","'use strict';\nconst assert = require('assert');\n\nexports.rethrowAssertionErrorRejection = e => {\n  // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n  // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n  // expect any errors, but assertion errors are always problematic.\n  if (e && e instanceof assert.AssertionError) {\n    setTimeout(() => {\n      throw e;\n    }, 0);\n  }\n};\n","'use strict';\nconst assert = require('better-assert');\nconst { IsFiniteNonNegativeNumber } = require('./helpers.js');\n\nexports.DequeueValue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift();\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n};\n\nexports.EnqueueValueWithSize = (container, value, size) => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  size = Number(size);\n  if (!IsFiniteNonNegativeNumber(size)) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n};\n\nexports.PeekQueueValue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue[0];\n  return pair.value;\n};\n\nexports.ResetQueue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = [];\n  container._queueTotalSize = 0;\n};\n","'use strict';\nconst assert = require('better-assert');\n\n// Calls to verbose() are purely for debugging the reference implementation and tests. They are not part of the standard\n// and do not appear in the standard text.\nconst verbose = require('debug')('streams:writable-stream:verbose');\n\nconst { CreateAlgorithmFromUnderlyingMethod, InvokeOrNoop, ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction, typeIsObject } = require('./helpers.js');\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\nconst { DequeueValue, EnqueueValueWithSize, PeekQueueValue, ResetQueue } = require('./queue-with-sizes.js');\n\nconst AbortSteps = Symbol('[[AbortSteps]]');\nconst ErrorSteps = Symbol('[[ErrorSteps]]');\n\nclass WritableStream {\n  constructor(underlyingSink = {}, strategy = {}) {\n    InitializeWritableStream(this);\n\n    const size = strategy.size;\n    let highWaterMark = strategy.highWaterMark;\n\n    const type = underlyingSink.type;\n\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\n    if (highWaterMark === undefined) {\n      highWaterMark = 1;\n    }\n    highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  get locked() {\n    if (IsWritableStream(this) === false) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  abort(reason) {\n    if (IsWritableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  getWriter() {\n    if (IsWritableStream(this) === false) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nmodule.exports = {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter(stream) {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1,\n                              sizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n\n  const stream = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream(stream) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = [];\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsWritableStreamLocked(stream) {\n  assert(IsWritableStream(stream) === true);\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream, reason) {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return Promise.resolve(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = new Promise((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest._promise = promise;\n\n  if (wasAlreadyErroring === false) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream) {\n  assert(IsWritableStreamLocked(stream) === true);\n  assert(stream._state === 'writable');\n\n  const promise = new Promise((resolve, reject) => {\n    const writeRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream, error) {\n  verbose('WritableStreamDealWithRejection(stream, %o)', error);\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream, reason) {\n  verbose('WritableStreamStartErroring(stream, %o)', reason);\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream) {\n  verbose('WritableStreamFinishErroring()');\n  assert(stream._state === 'erroring');\n  assert(WritableStreamHasOperationMarkedInFlight(stream) === false);\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  for (const writeRequest of stream._writeRequests) {\n    writeRequest._reject(storedError);\n  }\n  stream._writeRequests = [];\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring === true) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  promise.then(\n      () => {\n        abortRequest._resolve();\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      },\n      reason => {\n        abortRequest._reject(reason);\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream, error) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream, error) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream) {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream) {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    verbose('WritableStreamHasOperationMarkedInFlight() is false');\n    return false;\n  }\n\n  verbose('WritableStreamHasOperationMarkedInFlight() is true');\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n  verbose('WritableStreamRejectCloseAndClosedPromiseIfNeeded()');\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n    writer._closedPromise.catch(() => {});\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream, backpressure) {\n  assert(stream._state === 'writable');\n  assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure === true) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(backpressure === false);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\nclass WritableStreamDefaultWriter {\n  constructor(stream) {\n    if (IsWritableStream(stream) === false) {\n      throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n    }\n    if (IsWritableStreamLocked(stream) === true) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      this._readyPromise.catch(() => {});\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      this._readyPromise.catch(() => {});\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n      this._closedPromise.catch(() => {});\n    }\n  }\n\n  get closed() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  get desiredSize() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  get ready() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  abort(reason) {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return Promise.reject(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  close() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return Promise.reject(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n      return Promise.reject(new TypeError('cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  releaseLock() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  write(chunk) {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer, reason) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return Promise.reject(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\n  const promise = new Promise((resolve, reject) => {\n    const closeRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  if (stream._backpressure === true && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n    return Promise.resolve();\n  }\n\n  if (state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n  writer._closedPromise.catch(() => {});\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n  verbose('WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, %o)', error);\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n  writer._readyPromise.catch(() => {});\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer) {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    'Writer was released and can no longer be used to monitor the stream\\'s closedness');\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined;\n}\n\nfunction WritableStreamDefaultWriterWrite(writer, chunk) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return Promise.reject(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n    return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nclass WritableStreamDefaultController {\n  constructor() {\n    throw new TypeError('WritableStreamDefaultController cannot be constructed explicitly');\n  }\n\n  error(e) {\n    if (IsWritableStreamDefaultController(this) === false) {\n      throw new TypeError(\n        'WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  [AbortSteps](reason) {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                              abortAlgorithm, highWaterMark, sizeAlgorithm) {\n  assert(IsWritableStream(stream) === true);\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined;\n  controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = Promise.resolve(startResult);\n  startPromise.then(\n      () => {\n        assert(stream._state === 'writable' || stream._state === 'erroring');\n        controller._started = true;\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n      },\n      r => {\n        assert(stream._state === 'writable' || stream._state === 'erroring');\n        controller._started = true;\n        WritableStreamDealWithRejection(stream, r);\n      }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n  assert(underlyingSink !== undefined);\n\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingSink, 'start', [controller]);\n  }\n\n  const writeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'write', 1, [controller]);\n  const closeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'close', 0, []);\n  const abortAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'abort', 1, []);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller) {\n  controller._writeAlgorithm = undefined;\n  controller._closeAlgorithm = undefined;\n  controller._abortAlgorithm = undefined;\n  controller._strategySizeAlgorithm = undefined;\n}\n\nfunction WritableStreamDefaultControllerClose(controller) {\n  EnqueueValueWithSize(controller, 'close', 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller) {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n  const writeRecord = { chunk };\n\n  try {\n    EnqueueValueWithSize(controller, writeRecord, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n  verbose('WritableStreamDefaultControllerAdvanceQueueIfNeeded()');\n  const stream = controller._controlledWritableStream;\n\n  if (controller._started === false) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return;\n  }\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const writeRecord = PeekQueueValue(controller);\n  if (writeRecord === 'close') {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  sinkClosePromise.then(\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  sinkWritePromise.then(\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller) {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller, error) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name) {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name) {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer) {\n  writer._closedPromise = new Promise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n  writer._closedPromise = Promise.reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer) {\n  writer._closedPromise = Promise.resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterClosedPromiseReject(writer, reason) {\n  assert(writer._closedPromise_resolve !== undefined);\n  assert(writer._closedPromise_reject !== undefined);\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer, reason) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  writer._closedPromise = Promise.reject(reason);\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResolve(writer) {\n  assert(writer._closedPromise_resolve !== undefined);\n  assert(writer._closedPromise_reject !== undefined);\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer) {\n  verbose('defaultWriterReadyPromiseInitialize()');\n  writer._readyPromise = new Promise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n  verbose('defaultWriterReadyPromiseInitializeAsRejected(writer, %o)', reason);\n  writer._readyPromise = Promise.reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer) {\n  verbose('defaultWriterReadyPromiseInitializeAsResolved()');\n  writer._readyPromise = Promise.resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n\nfunction defaultWriterReadyPromiseReject(writer, reason) {\n  verbose('defaultWriterReadyPromiseReject(writer, %o)', reason);\n  assert(writer._readyPromise_resolve !== undefined);\n  assert(writer._readyPromise_reject !== undefined);\n\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer) {\n  verbose('defaultWriterReadyPromiseReset()');\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  writer._readyPromise = new Promise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer, reason) {\n  verbose('defaultWriterReadyPromiseResetToRejected(writer, %o)', reason);\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  writer._readyPromise = Promise.reject(reason);\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseResolve(writer) {\n  verbose('defaultWriterReadyPromiseResolve()');\n  assert(writer._readyPromise_resolve !== undefined);\n  assert(writer._readyPromise_reject !== undefined);\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n","'use strict';\n/* global AbortSignal:false */\n\nconst assert = require('better-assert');\nconst { ArrayBufferCopy, CreateAlgorithmFromUnderlyingMethod, IsFiniteNonNegativeNumber, InvokeOrNoop,\n        IsDetachedBuffer, TransferArrayBuffer, ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction, createArrayFromList, typeIsObject, WaitForAllPromise } =\n      require('./helpers.js');\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\nconst { DequeueValue, EnqueueValueWithSize, ResetQueue } = require('./queue-with-sizes.js');\nconst { AcquireWritableStreamDefaultWriter, IsWritableStream, IsWritableStreamLocked,\n        WritableStreamAbort, WritableStreamDefaultWriterCloseWithErrorPropagation,\n        WritableStreamDefaultWriterRelease, WritableStreamDefaultWriterWrite, WritableStreamCloseQueuedOrInFlight } =\n      require('./writable-stream.js');\n\nconst CancelSteps = Symbol('[[CancelSteps]]');\nconst PullSteps = Symbol('[[PullSteps]]');\n\nclass ReadableStream {\n  constructor(underlyingSource = {}, strategy = {}) {\n    InitializeReadableStream(this);\n\n    const size = strategy.size;\n    let highWaterMark = strategy.highWaterMark;\n\n    const type = underlyingSource.type;\n    const typeString = String(type);\n    if (typeString === 'bytes') {\n      if (size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n\n      if (highWaterMark === undefined) {\n        highWaterMark = 0;\n      }\n      highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n      SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n    } else if (type === undefined) {\n      const sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\n\n      if (highWaterMark === undefined) {\n        highWaterMark = 1;\n      }\n      highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n    } else {\n      throw new RangeError('Invalid type is specified');\n    }\n  }\n\n  get locked() {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  cancel(reason) {\n    if (IsReadableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  getReader({ mode } = {}) {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    if (mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    mode = String(mode);\n\n    if (mode === 'byob') {\n      return AcquireReadableStreamBYOBReader(this);\n    }\n\n    throw new RangeError('Invalid mode is specified');\n  }\n\n  pipeThrough({ writable, readable }, { preventClose, preventAbort, preventCancel, signal } = {}) {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n\n    if (IsWritableStream(writable) === false) {\n      throw new TypeError('writable argument to pipeThrough must be a WritableStream');\n    }\n\n    if (IsReadableStream(readable) === false) {\n      throw new TypeError('readable argument to pipeThrough must be a ReadableStream');\n    }\n\n    preventClose = Boolean(preventClose);\n    preventAbort = Boolean(preventAbort);\n    preventCancel = Boolean(preventCancel);\n\n    if (signal !== undefined && !isAbortSignal(signal)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough\\'s signal option must be an AbortSignal');\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(writable) === true) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(this, writable, preventClose, preventAbort, preventCancel, signal);\n\n    promise.catch(() => {});\n\n    return readable;\n  }\n\n  pipeTo(dest, { preventClose, preventAbort, preventCancel, signal } = {}) {\n    if (IsReadableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('pipeTo'));\n    }\n    if (IsWritableStream(dest) === false) {\n      return Promise.reject(\n          new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n    }\n\n    preventClose = Boolean(preventClose);\n    preventAbort = Boolean(preventAbort);\n    preventCancel = Boolean(preventCancel);\n\n    if (signal !== undefined && !isAbortSignal(signal)) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s signal option must be an AbortSignal'));\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n    }\n    if (IsWritableStreamLocked(dest) === true) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n    }\n\n    return ReadableStreamPipeTo(this, dest, preventClose, preventAbort, preventCancel, signal);\n  }\n\n  tee() {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return createArrayFromList(branches);\n  }\n}\n\nmodule.exports = {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  ReadableStream,\n  IsReadableStreamDisturbed,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure,\n  ReadableStreamDefaultControllerCanCloseOrEnqueue\n};\n\n// Abstract operations for the ReadableStream.\n\nfunction AcquireReadableStreamBYOBReader(stream) {\n  return new ReadableStreamBYOBReader(stream);\n}\n\nfunction AcquireReadableStreamDefaultReader(stream) {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1,\n                              sizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n\n  const stream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller = Object.create(ReadableStreamDefaultController.prototype);\n\n  SetUpReadableStreamDefaultController(\n      stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 0,\n                                  autoAllocateChunkSize = undefined) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(Number.isInteger(autoAllocateChunkSize) === true);\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  const stream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller = Object.create(ReadableByteStreamController.prototype);\n\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark,\n                                    autoAllocateChunkSize);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nfunction IsReadableStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamDisturbed(stream) {\n  assert(IsReadableStream(stream) === true);\n\n  return stream._disturbed;\n}\n\nfunction IsReadableStreamLocked(stream) {\n  assert(IsReadableStream(stream) === true);\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n  assert(IsReadableStream(source) === true);\n  assert(IsWritableStream(dest) === true);\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(IsReadableStreamLocked(source) === false);\n  assert(IsWritableStreamLocked(dest) === false);\n\n  const reader = AcquireReadableStreamDefaultReader(source);\n  const writer = AcquireWritableStreamDefaultWriter(dest);\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = Promise.resolve();\n\n  return new Promise((resolve, reject) => {\n    let abortAlgorithm;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = new DOMException('Aborted', 'AbortError');\n        const actions = [];\n        if (preventAbort === false) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return Promise.resolve();\n          });\n        }\n        if (preventCancel === false) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return Promise.resolve();\n          });\n        }\n        shutdownWithAction(() => WaitForAllPromise(actions.map(action => action()), results => results), true, error);\n      };\n\n      if (signal.aborted === true) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return new Promise((resolveLoop, rejectLoop) => {\n        function next(done) {\n          if (done) {\n            resolveLoop();\n          } else {\n            pipeStep().then(next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep() {\n      if (shuttingDown === true) {\n        return Promise.resolve(true);\n      }\n\n      return writer._readyPromise.then(() => {\n        return ReadableStreamDefaultReaderRead(reader).then(({ value, done }) => {\n          if (done === true) {\n            return true;\n          }\n\n          currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(() => {});\n          return false;\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (preventAbort === false) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (preventCancel === false) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (preventClose === false) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (preventCancel === false) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    pipeLoop().catch(err => {\n      currentWrite = Promise.resolve();\n      rethrowAssertionErrorRejection(err);\n    });\n\n    function waitForWritesToFinish() {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return currentWrite.then(() => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n    }\n\n    function isOrBecomesErrored(stream, promise, action) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        promise.catch(action).catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function isOrBecomesClosed(stream, promise, action) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        promise.then(action).catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function shutdownWithAction(action, originalIsError, originalError) {\n      if (shuttingDown === true) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n        waitForWritesToFinish().then(doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest() {\n        action().then(\n            () => finalize(originalIsError, originalError),\n            newError => finalize(true, newError)\n        )\n            .catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function shutdown(isError, error) {\n      if (shuttingDown === true) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n        waitForWritesToFinish().then(() => finalize(isError, error)).catch(rethrowAssertionErrorRejection);\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError, error) {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n    }\n  });\n}\n\nfunction ReadableStreamTee(stream, cloneForBranch2) {\n  assert(IsReadableStream(stream) === true);\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader(stream);\n\n  let closedOrErrored = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1;\n  let reason2;\n  let branch1;\n  let branch2;\n\n  let resolveCancelPromise;\n  const cancelPromise = new Promise(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm() {\n    return ReadableStreamDefaultReaderRead(reader).then(result => {\n      assert(typeIsObject(result));\n      const value = result.value;\n      const done = result.done;\n      assert(typeof done === 'boolean');\n\n      if (done === true && closedOrErrored === false) {\n        if (canceled1 === false) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n        }\n        if (canceled2 === false) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n        }\n        closedOrErrored = true;\n      }\n\n      if (closedOrErrored === true) {\n        return;\n      }\n\n      const value1 = value;\n      const value2 = value;\n\n      // There is no way to access the cloning code right now in the reference implementation.\n      // If we add one then we'll need an implementation for serializable objects.\n      // if (canceled2 === false && cloneForBranch2 === true) {\n      //   value2 = StructuredDeserialize(StructuredSerialize(value2));\n      // }\n\n      if (canceled1 === false) {\n        ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, value1);\n      }\n\n      if (canceled2 === false) {\n        ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, value2);\n      }\n    });\n  }\n\n  function cancel1Algorithm(reason) {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2 === true) {\n      const compositeReason = createArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason) {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1 === true) {\n      const compositeReason = createArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {}\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  reader._closedPromise.catch(r => {\n    if (closedOrErrored === true) {\n      return;\n    }\n\n    ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n    closedOrErrored = true;\n  });\n\n  return [branch1, branch2];\n}\n\n// ReadableStream API exposed for controllers.\n\nfunction ReadableStreamAddReadIntoRequest(stream, forAuthorCode) {\n  assert(IsReadableStreamBYOBReader(stream._reader) === true);\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  const promise = new Promise((resolve, reject) => {\n    const readIntoRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _forAuthorCode: forAuthorCode\n    };\n\n    stream._reader._readIntoRequests.push(readIntoRequest);\n  });\n\n  return promise;\n}\n\nfunction ReadableStreamAddReadRequest(stream, forAuthorCode) {\n  assert(IsReadableStreamDefaultReader(stream._reader) === true);\n  assert(stream._state === 'readable');\n\n  const promise = new Promise((resolve, reject) => {\n    const readRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _forAuthorCode: forAuthorCode\n    };\n\n    stream._reader._readRequests.push(readRequest);\n  });\n\n  return promise;\n}\n\nfunction ReadableStreamCancel(stream, reason) {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return Promise.resolve(undefined);\n  }\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return sourceCancelPromise.then(() => undefined);\n}\n\nfunction ReadableStreamClose(stream) {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return undefined;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === true) {\n    for (const { _resolve, _forAuthorCode } of reader._readRequests) {\n      _resolve(ReadableStreamCreateReadResult(undefined, true, _forAuthorCode));\n    }\n    reader._readRequests = [];\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  return undefined;\n}\n\nfunction ReadableStreamCreateReadResult(value, done, forAuthorCode) {\n  let prototype = null;\n  if (forAuthorCode === true) {\n    prototype = Object.prototype;\n  }\n  assert(typeof done === 'boolean');\n  const obj = Object.create(prototype);\n  Object.defineProperty(obj, 'value', { value, enumerable: true, writable: true, configurable: true });\n  Object.defineProperty(obj, 'done', { value: done, enumerable: true, writable: true, configurable: true });\n  return obj;\n}\n\nfunction ReadableStreamError(stream, e) {\n  assert(IsReadableStream(stream) === true);\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return undefined;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === true) {\n    for (const readRequest of reader._readRequests) {\n      readRequest._reject(e);\n    }\n\n    reader._readRequests = [];\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n\n    for (const readIntoRequest of reader._readIntoRequests) {\n      readIntoRequest._reject(e);\n    }\n\n    reader._readIntoRequests = [];\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n  reader._closedPromise.catch(() => {});\n}\n\nfunction ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n  const reader = stream._reader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift();\n  readIntoRequest._resolve(ReadableStreamCreateReadResult(chunk, done, readIntoRequest._forAuthorCode));\n}\n\nfunction ReadableStreamFulfillReadRequest(stream, chunk, done) {\n  const reader = stream._reader;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift();\n  readRequest._resolve(ReadableStreamCreateReadResult(chunk, done, readRequest._forAuthorCode));\n}\n\nfunction ReadableStreamGetNumReadIntoRequests(stream) {\n  return stream._reader._readIntoRequests.length;\n}\n\nfunction ReadableStreamGetNumReadRequests(stream) {\n  return stream._reader._readRequests.length;\n}\n\nfunction ReadableStreamHasBYOBReader(stream) {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (IsReadableStreamBYOBReader(reader) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamHasDefaultReader(stream) {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === false) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nclass ReadableStreamDefaultReader {\n  constructor(stream) {\n    if (IsReadableStream(stream) === false) {\n      throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n    }\n    if (IsReadableStreamLocked(stream) === true) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = [];\n  }\n\n  get closed() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  cancel(reason) {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  read() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('read from'));\n    }\n\n    return ReadableStreamDefaultReaderRead(this, true);\n  }\n\n  releaseLock() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nclass ReadableStreamBYOBReader {\n  constructor(stream) {\n    if (!IsReadableStream(stream)) {\n      throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' +\n          'byte source');\n    }\n    if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n          'source');\n    }\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = [];\n  }\n\n  get closed() {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  cancel(reason) {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  read(view) {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('read from'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return Promise.reject(new TypeError('view must be an array buffer view'));\n    }\n\n    if (IsDetachedBuffer(view.buffer) === true) {\n      return Promise.reject(new TypeError('Cannot read into a view onto a detached ArrayBuffer'));\n    }\n\n    if (view.byteLength === 0) {\n      return Promise.reject(new TypeError('view must have non-zero byteLength'));\n    }\n\n    return ReadableStreamBYOBReaderRead(this, view, true);\n  }\n\n  releaseLock() {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\n// Abstract operations for the readers.\n\nfunction IsReadableStreamBYOBReader(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamDefaultReader(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamReaderGenericInitialize(reader, stream) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n    reader._closedPromise.catch(() => {});\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nfunction ReadableStreamReaderGenericCancel(reader, reason) {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nfunction ReadableStreamReaderGenericRelease(reader) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n        reader,\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n        reader,\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n  }\n  reader._closedPromise.catch(() => {});\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined;\n}\n\nfunction ReadableStreamBYOBReaderRead(reader, view, forAuthorCode = false) {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  // Controllers must implement this.\n  return ReadableByteStreamControllerPullInto(stream._readableStreamController, view, forAuthorCode);\n}\n\nfunction ReadableStreamDefaultReaderRead(reader, forAuthorCode = false) {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return Promise.resolve(ReadableStreamCreateReadResult(undefined, true, forAuthorCode));\n  }\n\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(stream._state === 'readable');\n\n  return stream._readableStreamController[PullSteps](forAuthorCode);\n}\n\n// Controllers\n\nclass ReadableStreamDefaultController {\n  constructor() {\n    throw new TypeError();\n  }\n\n  get desiredSize() {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  enqueue(chunk) {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  error(e) {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  [CancelSteps](reason) {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [PullSteps](forAuthorCode) {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested === true && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      return Promise.resolve(ReadableStreamCreateReadResult(chunk, false, forAuthorCode));\n    }\n\n    const pendingPromise = ReadableStreamAddReadRequest(stream, forAuthorCode);\n    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    return pendingPromise;\n  }\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (shouldPull === false) {\n    return undefined;\n  }\n\n  if (controller._pulling === true) {\n    controller._pullAgain = true;\n    return undefined;\n  }\n\n  assert(controller._pullAgain === false);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  pullPromise.then(\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n\n  return undefined;\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller) {\n  const stream = controller._controlledReadableStream;\n\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === false) {\n    return false;\n  }\n\n  if (controller._started === false) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller) {\n  controller._pullAlgorithm = undefined;\n  controller._cancelAlgorithm = undefined;\n  controller._strategySizeAlgorithm = undefined;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction ReadableStreamDefaultControllerClose(controller) {\n  const stream = controller._controlledReadableStream;\n\n  assert(ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === true);\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nfunction ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n  const stream = controller._controlledReadableStream;\n\n  assert(ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === true);\n\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\n  return undefined;\n}\n\nfunction ReadableStreamDefaultControllerError(controller, e) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nfunction ReadableStreamDefaultControllerGetDesiredSize(controller) {\n  const stream = controller._controlledReadableStream;\n  const state = stream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nfunction ReadableStreamDefaultControllerHasBackpressure(controller) {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller) === true) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n  const state = controller._controlledReadableStream._state;\n\n  if (controller._closeRequested === false && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction SetUpReadableStreamDefaultController(\n  stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined;\n  controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  Promise.resolve(startResult).then(\n    () => {\n      controller._started = true;\n\n      assert(controller._pulling === false);\n      assert(controller._pullAgain === false);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark,\n                                                                  sizeAlgorithm) {\n  assert(underlyingSource !== undefined);\n\n  const controller = Object.create(ReadableStreamDefaultController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingSource, 'start', [controller]);\n  }\n\n  const pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'pull', 0, [controller]);\n  const cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'cancel', 1, []);\n\n  SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm,\n                                       highWaterMark, sizeAlgorithm);\n}\n\nclass ReadableStreamBYOBRequest {\n  constructor() {\n    throw new TypeError('ReadableStreamBYOBRequest cannot be used directly');\n  }\n\n  get view() {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  respond(bytesWritten) {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('respond');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view.buffer) === true) {\n      throw new TypeError('The BYOB request\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  respondWithNewView(view) {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('respond');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (IsDetachedBuffer(view.buffer) === true) {\n      throw new TypeError('The supplied view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nclass ReadableByteStreamController {\n  constructor() {\n    throw new TypeError('ReadableByteStreamController constructor cannot be used directly');\n  }\n\n  get byobRequest() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n      const firstDescriptor = this._pendingPullIntos[0];\n      const view = new Uint8Array(firstDescriptor.buffer,\n                                  firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                  firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n      const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n      SetUpReadableStreamBYOBRequest(byobRequest, this, view);\n      this._byobRequest = byobRequest;\n    }\n\n    return this._byobRequest;\n  }\n\n  get desiredSize() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  enqueue(chunk) {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n    }\n\n    if (IsDetachedBuffer(chunk.buffer) === true) {\n      throw new TypeError('Cannot enqueue a view onto a detached ArrayBuffer');\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  error(e) {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  [CancelSteps](reason) {\n    if (this._pendingPullIntos.length > 0) {\n      const firstDescriptor = this._pendingPullIntos[0];\n      firstDescriptor.bytesFilled = 0;\n    }\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [PullSteps](forAuthorCode) {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream) === true);\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      const entry = this._queue.shift();\n      this._queueTotalSize -= entry.byteLength;\n\n      ReadableByteStreamControllerHandleQueueDrain(this);\n\n      let view;\n      try {\n        view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n      } catch (viewE) {\n        return Promise.reject(viewE);\n      }\n\n      return Promise.resolve(ReadableStreamCreateReadResult(view, false, forAuthorCode));\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        return Promise.reject(bufferE);\n      }\n\n      const pullIntoDescriptor = {\n        buffer,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        elementSize: 1,\n        ctor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    const promise = ReadableStreamAddReadRequest(stream, forAuthorCode);\n\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n\n    return promise;\n  }\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nfunction IsReadableByteStreamController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamBYOBRequest(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller) {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (shouldPull === false) {\n    return undefined;\n  }\n\n  if (controller._pulling === true) {\n    controller._pullAgain = true;\n    return undefined;\n  }\n\n  assert(controller._pullAgain === false);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  pullPromise.then(\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n\n  return undefined;\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = [];\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n  assert(stream._state !== 'errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.ctor(\n      pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue[0];\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (ready === false) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n  if (controller._byobRequest === undefined) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined;\n  controller._byobRequest._view = undefined;\n  controller._byobRequest = undefined;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n  assert(controller._closeRequested === false);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos[0];\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerPullInto(controller, view, forAuthorCode) {\n  const stream = controller._controlledReadableByteStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = view.constructor.BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor;\n\n  const buffer = TransferArrayBuffer(view.buffer);\n  const pullIntoDescriptor = {\n    buffer,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    return ReadableStreamAddReadIntoRequest(stream, forAuthorCode);\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    return Promise.resolve(ReadableStreamCreateReadResult(emptyView, true, forAuthorCode));\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      return Promise.resolve(ReadableStreamCreateReadResult(filledView, false, forAuthorCode));\n    }\n\n    if (controller._closeRequested === true) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      return Promise.reject(e);\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  const promise = ReadableStreamAddReadIntoRequest(stream, forAuthorCode);\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n\n  return promise;\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  assert(firstDescriptor.bytesFilled === 0);\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream) === true) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n  if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n    throw new RangeError('bytesWritten out of range');\n  }\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    // TODO: Figure out whether we should detach the buffer or not here.\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n  const firstDescriptor = controller._pendingPullIntos[0];\n\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(stream._state === 'readable');\n\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(controller) {\n  const descriptor = controller._pendingPullIntos.shift();\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested === true) {\n    return false;\n  }\n\n  if (controller._started === false) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller) {\n  controller._pullAlgorithm = undefined;\n  controller._cancelAlgorithm = undefined;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nfunction ReadableByteStreamControllerClose(controller) {\n  const stream = controller._controlledReadableByteStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos[0];\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nfunction ReadableByteStreamControllerEnqueue(controller, chunk) {\n  const stream = controller._controlledReadableByteStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (ReadableStreamHasDefaultReader(stream) === true) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream) === true) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(IsReadableStreamLocked(stream) === false);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerError(controller, e) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller) {\n  const stream = controller._controlledReadableByteStream;\n  const state = stream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction ReadableByteStreamControllerRespond(controller, bytesWritten) {\n  bytesWritten = Number(bytesWritten);\n  if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n    throw new RangeError('bytesWritten must be a finite');\n  }\n\n  assert(controller._pendingPullIntos.length > 0);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nfunction ReadableByteStreamControllerRespondWithNewView(controller, view) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos[0];\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.byteLength !== view.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n\n  firstDescriptor.buffer = view.buffer;\n\n  ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n}\n\nfunction SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm,\n                                           highWaterMark, autoAllocateChunkSize) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(Number.isInteger(autoAllocateChunkSize) === true);\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = [];\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  Promise.resolve(startResult).then(\n      () => {\n        controller._started = true;\n\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      },\n      r => {\n        ReadableByteStreamControllerError(controller, r);\n      }\n  )\n      .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n  assert(underlyingByteSource !== undefined);\n\n  const controller = Object.create(ReadableByteStreamController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingByteSource, 'start', [controller]);\n  }\n\n  const pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'pull', 0, [controller]);\n  const cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'cancel', 1, []);\n\n  let autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize !== undefined) {\n    autoAllocateChunkSize = Number(autoAllocateChunkSize);\n    if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n      throw new RangeError('autoAllocateChunkSize must be a positive integer');\n    }\n  }\n\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark,\n                                    autoAllocateChunkSize);\n}\n\nfunction SetUpReadableStreamBYOBRequest(request, controller, view) {\n  assert(IsReadableByteStreamController(controller) === true);\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view) === true);\n  assert(IsDetachedBuffer(view.buffer) === false);\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStream.\n\nfunction isAbortSignal(value) {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n\n  // Use the brand check to distinguish a real AbortSignal from a fake one.\n  const aborted = Object.getOwnPropertyDescriptor(AbortSignal.prototype, 'aborted').get;\n  try {\n    aborted.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n\n// Helper functions for the readers.\n\nfunction readerLockException(name) {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n\nfunction defaultReaderClosedPromiseInitialize(reader) {\n  reader._closedPromise = new Promise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nfunction defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n  reader._closedPromise = Promise.reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseInitializeAsResolved(reader) {\n  reader._closedPromise = Promise.resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseReject(reader, reason) {\n  assert(reader._closedPromise_resolve !== undefined);\n  assert(reader._closedPromise_reject !== undefined);\n\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseResetToRejected(reader, reason) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  reader._closedPromise = Promise.reject(reason);\n}\n\nfunction defaultReaderClosedPromiseResolve(reader) {\n  assert(reader._closedPromise_resolve !== undefined);\n  assert(reader._closedPromise_reject !== undefined);\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction byobReaderBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name) {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n","'use strict';\nconst { createDataProperty } = require('./helpers.js');\n\nmodule.exports = class ByteLengthQueuingStrategy {\n  constructor({ highWaterMark }) {\n    createDataProperty(this, 'highWaterMark', highWaterMark);\n  }\n\n  size(chunk) {\n    return chunk.byteLength;\n  }\n};\n","'use strict';\nconst { createDataProperty } = require('./helpers.js');\n\nmodule.exports = class CountQueuingStrategy {\n  constructor({ highWaterMark }) {\n    createDataProperty(this, 'highWaterMark', highWaterMark);\n  }\n\n  size() {\n    return 1;\n  }\n};\n","'use strict';\nconst assert = require('better-assert');\n\n// Calls to verbose() are purely for debugging the reference implementation and tests. They are not part of the standard\n// and do not appear in the standard text.\nconst verbose = require('debug')('streams:transform-stream:verbose');\nconst { InvokeOrNoop, CreateAlgorithmFromUnderlyingMethod, PromiseCall, typeIsObject,\n        ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction } = require('./helpers.js');\nconst { CreateReadableStream, ReadableStreamDefaultControllerClose, ReadableStreamDefaultControllerEnqueue,\n        ReadableStreamDefaultControllerError, ReadableStreamDefaultControllerGetDesiredSize,\n        ReadableStreamDefaultControllerHasBackpressure,\n        ReadableStreamDefaultControllerCanCloseOrEnqueue } = require('./readable-stream.js');\nconst { CreateWritableStream, WritableStreamDefaultControllerErrorIfNeeded } = require('./writable-stream.js');\n\n// Class TransformStream\n\nclass TransformStream {\n  constructor(transformer = {}, writableStrategy = {}, readableStrategy = {}) {\n    const writableSizeFunction = writableStrategy.size;\n    let writableHighWaterMark = writableStrategy.highWaterMark;\n    const readableSizeFunction = readableStrategy.size;\n    let readableHighWaterMark = readableStrategy.highWaterMark;\n\n    const writableType = transformer.writableType;\n\n    if (writableType !== undefined) {\n      throw new RangeError('Invalid writable type specified');\n    }\n\n    const writableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(writableSizeFunction);\n    if (writableHighWaterMark === undefined) {\n      writableHighWaterMark = 1;\n    }\n    writableHighWaterMark = ValidateAndNormalizeHighWaterMark(writableHighWaterMark);\n\n    const readableType = transformer.readableType;\n\n    if (readableType !== undefined) {\n      throw new RangeError('Invalid readable type specified');\n    }\n\n    const readableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(readableSizeFunction);\n    if (readableHighWaterMark === undefined) {\n      readableHighWaterMark = 0;\n    }\n    readableHighWaterMark = ValidateAndNormalizeHighWaterMark(readableHighWaterMark);\n\n    let startPromise_resolve;\n    const startPromise = new Promise(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                              readableSizeAlgorithm);\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    const startResult = InvokeOrNoop(transformer, 'start', [this._transformStreamController]);\n    startPromise_resolve(startResult);\n  }\n\n  get readable() {\n    if (IsTransformStream(this) === false) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  get writable() {\n    if (IsTransformStream(this) === false) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\n// Transform Stream Abstract Operations\n\nfunction CreateTransformStream(startAlgorithm, transformAlgorithm, flushAlgorithm, writableHighWaterMark = 1,\n                               writableSizeAlgorithm = () => 1, readableHighWaterMark = 0,\n                               readableSizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve;\n  const startPromise = new Promise(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm,\n                                   readableHighWaterMark, readableSizeAlgorithm) {\n  function startAlgorithm() {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk) {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason) {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm() {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm() {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason) {\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n    return Promise.resolve();\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined;\n  stream._backpressureChangePromise = undefined;\n  stream._backpressureChangePromise_resolve = undefined;\n  TransformStreamSetBackpressure(stream, true);\n\n  // Used by IsWritableStream() which is called by SetUpTransformStreamDefaultController().\n  stream._transformStreamController = undefined;\n}\n\nfunction IsTransformStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream, e) {\n  verbose('TransformStreamError()');\n\n  ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  if (stream._backpressure === true) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream, backpressure) {\n  verbose(`TransformStreamSetBackpressure() [backpressure = ${backpressure}]`);\n\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = new Promise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\nclass TransformStreamDefaultController {\n  constructor() {\n    throw new TypeError('TransformStreamDefaultController instances cannot be created directly');\n  }\n\n  get desiredSize() {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n  }\n\n  enqueue(chunk) {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  error(reason) {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  terminate() {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n  assert(IsTransformStream(stream) === true);\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n  assert(transformer !== undefined);\n\n  const controller = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm = chunk => {\n    try {\n      TransformStreamDefaultControllerEnqueue(controller, chunk);\n      return Promise.resolve();\n    } catch (transformResultE) {\n      return Promise.reject(transformResultE);\n    }\n  };\n  const transformMethod = transformer.transform;\n  if (transformMethod !== undefined) {\n    if (typeof transformMethod !== 'function') {\n      throw new TypeError('transform is not a method');\n    }\n    transformAlgorithm = chunk => PromiseCall(transformMethod, transformer, [chunk, controller]);\n  }\n\n  const flushAlgorithm = CreateAlgorithmFromUnderlyingMethod(transformer, 'flush', 0, [controller]);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller) {\n  controller._transformAlgorithm = undefined;\n  controller._flushAlgorithm = undefined;\n}\n\nfunction TransformStreamDefaultControllerEnqueue(controller, chunk) {\n  verbose('TransformStreamDefaultControllerEnqueue()');\n\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController;\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === false) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure === true);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller, e) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromise.catch(r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate(controller) {\n  verbose('TransformStreamDefaultControllerTerminate()');\n\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController;\n\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\n    ReadableStreamDefaultControllerClose(readableController);\n  }\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n  verbose('TransformStreamDefaultSinkWriteAlgorithm()');\n\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure === true) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return backpressureChangePromise\n        .then(() => {\n          const writable = stream._writable;\n          const state = writable._state;\n          if (state === 'erroring') {\n            throw writable._storedError;\n          }\n          assert(state === 'writable');\n          return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n        });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n  // errored.\n  TransformStreamError(stream, reason);\n  return Promise.resolve();\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm(stream) {\n  verbose('TransformStreamDefaultSinkCloseAlgorithm()');\n\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  const controller = stream._transformStreamController;\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  // Return a promise that is fulfilled with undefined on success.\n  return flushPromise.then(() => {\n    if (readable._state === 'errored') {\n      throw readable._storedError;\n    }\n    const readableController = readable._readableStreamController;\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\n      ReadableStreamDefaultControllerClose(readableController);\n    }\n  }).catch(r => {\n    TransformStreamError(stream, r);\n    throw readable._storedError;\n  });\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream) {\n  verbose('TransformStreamDefaultSourcePullAlgorithm()');\n\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure === true);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\nmodule.exports = { CreateTransformStream, TransformStream };\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name) {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n","import {\n  ByteLengthQueuingStrategy,\n  CountQueuingStrategy,\n  ReadableStream,\n  TransformStream,\n  WritableStream\n} from './ponyfill';\nimport { globals } from './utils';\n\n// Export\nexport * from './ponyfill';\n\nconst exports = {\n  ReadableStream,\n  WritableStream,\n  ByteLengthQueuingStrategy,\n  CountQueuingStrategy,\n  TransformStream\n};\n\n// Add classes to global scope\nif (typeof globals !== 'undefined') {\n  Object.assign(globals, exports);\n}\n"],"names":["SymbolPolyfill","Symbol","iterator","description","NumberIsInteger","Number","isInteger","value","isFinite","Math","floor","noop","getGlobals","self","window","global","undefined","globals","NumberIsNaN","isNaN","x","isFakeDetached","exports","o","p","v","Object","defineProperty","writable","enumerable","configurable","elements","slice","dest","destOffset","src","srcOffset","n","Uint8Array","set","IsNonNegativeNumber","Infinity","Number.isNaN","Call","F","V","args","TypeError","Function","prototype","apply","call","underlyingObject","methodName","algoArgCount","extraArgs","method","PromiseCall","arg","fullArgs","concat","Promise","resolve","O","P","reject","transferredIshVersion","get","highWaterMark","RangeError","size","chunk","promise","onFulfilled","onRejected","then","promises","successSteps","failureSteps","rejected","rejectionHandler","index","fulfilledCount","total","length","result","Array","promiseIndex","fulfillmentHandler","PerformPromiseThen","resolvePromise","rejectPromise","successStepsWrapper","results","stepsResult","e","failureStepsWrapper","reason","WaitForAll","TransferArrayBuffer","IsDetachedBuffer","assert","AssertionError","setTimeout","IsFiniteNonNegativeNumber","require$$0","container","pair","_queue","shift","_queueTotalSize","push","verbose","CreateAlgorithmFromUnderlyingMethod","require$$1","InvokeOrNoop","ValidateAndNormalizeHighWaterMark","MakeSizeAlgorithmFromSizeFunction","typeIsObject","rethrowAssertionErrorRejection","require$$2","DequeueValue","require$$3","EnqueueValueWithSize","PeekQueueValue","ResetQueue","AbortSteps","ErrorSteps","WritableStream","underlyingSink","strategy","InitializeWritableStream","type","sizeAlgorithm","SetUpWritableStreamDefaultControllerFromUnderlyingSink","abort","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","getWriter","AcquireWritableStreamDefaultWriter","CreateWritableStream","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamCloseQueuedOrInFlight","stream","WritableStreamDefaultWriter","startAlgorithm","writeAlgorithm","closeAlgorithm","abortAlgorithm","create","controller","WritableStreamDefaultController","SetUpWritableStreamDefaultController","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","hasOwnProperty","state","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamAddWriteRequest","writeRequest","WritableStreamDealWithRejection","error","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","_closedPromise","catch","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","_ownerWritableStream","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","_readyPromise","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","close","WritableStreamDefaultWriterClose","releaseLock","write","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerClose","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","chunkSize","WritableStreamDefaultControllerGetChunkSize","WritableStreamDefaultControllerWrite","IsWritableStreamDefaultController","_controlledWritableStream","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","_strategySizeAlgorithm","_strategyHWM","_writeAlgorithm","_closeAlgorithm","WritableStreamDefaultControllerGetBackpressure","startResult","startPromise","WritableStreamDefaultControllerAdvanceQueueIfNeeded","r","chunkSizeE","writeRecord","enqueueE","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","sinkClosePromise","sinkWritePromise","desiredSize","name","_closedPromise_resolve","_closedPromise_reject","_readyPromise_resolve","_readyPromise_reject","ArrayBufferCopy","createArrayFromList","WaitForAllPromise","CancelSteps","PullSteps","ReadableStream","underlyingSource","InitializeReadableStream","typeString","String","SetUpReadableByteStreamControllerFromUnderlyingSource","SetUpReadableStreamDefaultControllerFromUnderlyingSource","cancel","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","getReader","mode","AcquireReadableStreamDefaultReader","AcquireReadableStreamBYOBReader","pipeThrough","readable","preventClose","preventAbort","preventCancel","signal","Boolean","isAbortSignal","ReadableStreamPipeTo","pipeTo","tee","branches","ReadableStreamTee","CreateReadableByteStream","CreateReadableStream","IsReadableStreamDisturbed","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerHasBackpressure","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamBYOBReader","ReadableStreamDefaultReader","pullAlgorithm","cancelAlgorithm","ReadableStreamDefaultController","SetUpReadableStreamDefaultController","autoAllocateChunkSize","ReadableByteStreamController","SetUpReadableByteStreamController","_reader","_disturbed","source","reader","shuttingDown","currentWrite","DOMException","actions","shutdownWithAction","map","action","aborted","addEventListener","pipeLoop","resolveLoop","rejectLoop","next","done","pipeStep","ReadableStreamDefaultReaderRead","isOrBecomesErrored","shutdown","isOrBecomesClosed","destClosed","err","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","ReadableStreamReaderGenericRelease","removeEventListener","cloneForBranch2","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","branch2","resolveCancelPromise","cancelPromise","_readableStreamController","value1","value2","cancel1Algorithm","compositeReason","cancelResult","cancel2Algorithm","ReadableStreamAddReadIntoRequest","forAuthorCode","readIntoRequest","_forAuthorCode","_readIntoRequests","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamClose","sourceCancelPromise","IsReadableStreamDefaultReader","ReadableStreamCreateReadResult","defaultReaderClosedPromiseResolve","obj","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadIntoRequest","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","IsReadableStreamBYOBReader","ReadableStreamHasDefaultReader","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","read","IsReadableByteStreamController","byobReaderBrandCheckException","view","ArrayBuffer","isView","buffer","byteLength","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","ReadableByteStreamControllerPullInto","IsReadableStreamDefaultController","defaultControllerBrandCheckException","enqueue","_cancelAlgorithm","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","_closeRequested","ReadableStreamDefaultControllerCallPullIfNeeded","pendingPromise","shouldPull","ReadableStreamDefaultControllerShouldCallPull","_pulling","_pullAgain","pullPromise","_pullAlgorithm","ReadableStreamBYOBRequest","respond","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","_associatedReadableByteStreamController","_view","ReadableByteStreamControllerRespond","respondWithNewView","ReadableByteStreamControllerRespondWithNewView","byteStreamControllerBrandCheckException","_controlledReadableByteStream","ReadableByteStreamControllerClose","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","_pendingPullIntos","firstDescriptor","bytesFilled","ReadableByteStreamControllerClearAlgorithms","entry","ReadableByteStreamControllerHandleQueueDrain","byteOffset","viewE","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","elementSize","ctor","readerType","ReadableByteStreamControllerCallPullIfNeeded","_byobRequest","byobRequest","SetUpReadableStreamBYOBRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerClearPendingPullIntos","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","min","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","constructor","DataView","BYTES_PER_ELEMENT","emptyView","ReadableByteStreamControllerRespondInClosedState","ReadableByteStreamControllerRespondInReadableState","remainderSize","end","remainder","ReadableByteStreamControllerRespondInternal","descriptor","firstPendingPullInto","transferredBuffer","transferredView","underlyingByteSource","Number.isInteger","request","getOwnPropertyDescriptor","AbortSignal","createDataProperty","TransformStream","transformer","writableStrategy","readableStrategy","writableSizeFunction","writableHighWaterMark","readableSizeFunction","readableHighWaterMark","writableType","writableSizeAlgorithm","readableType","readableSizeAlgorithm","startPromise_resolve","InitializeTransformStream","SetUpTransformStreamDefaultControllerFromTransformer","_transformStreamController","IsTransformStream","_readable","_writable","CreateTransformStream","transformAlgorithm","flushAlgorithm","TransformStreamDefaultController","SetUpTransformStreamDefaultController","TransformStreamDefaultSinkWriteAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSourcePullAlgorithm","TransformStreamErrorWritableAndUnblockWrite","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamSetBackpressure","TransformStreamError","TransformStreamDefaultControllerClearAlgorithms","IsTransformStreamDefaultController","TransformStreamDefaultControllerEnqueue","TransformStreamDefaultControllerError","terminate","TransformStreamDefaultControllerTerminate","readableController","_controlledTransformStream","_transformAlgorithm","_flushAlgorithm","transformResultE","transformMethod","transform","TransformStreamDefaultControllerPerformTransform","transformPromise","backpressureChangePromise","flushPromise","ByteLengthQueuingStrategy","CountQueuingStrategy"],"mappings":"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"}