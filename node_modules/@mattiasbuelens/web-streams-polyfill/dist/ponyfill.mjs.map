{"version":3,"file":"ponyfill.mjs","sources":["../src/stub/symbol.js","../src/stub/number-isinteger.js","../src/utils.js","../src/stub/number-isnan.js","../spec/reference-implementation/lib/helpers.js","../src/stub/helpers.js","../src/stub/assert.js","../spec/reference-implementation/lib/utils.js","../spec/reference-implementation/lib/queue-with-sizes.js","../spec/reference-implementation/lib/writable-stream.js","../spec/reference-implementation/lib/readable-stream.js","../spec/reference-implementation/lib/byte-length-queuing-strategy.js","../spec/reference-implementation/lib/count-queuing-strategy.js","../spec/reference-implementation/lib/transform-stream.js"],"sourcesContent":["const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n  Symbol :\n  description => `Symbol(${description})`;\n\nexport default SymbolPolyfill;\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#Polyfill\nconst NumberIsInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' &&\n    isFinite(value) &&\n    Math.floor(value) === value;\n};\n\nexport default NumberIsInteger;\n","export function noop() {\n  // do nothing\n}\n\nfunction getGlobals() {\n  /* global self, window, global */\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n","'use strict';\r\nconst assert = require('better-assert');\r\n\r\nconst isFakeDetached = Symbol('is \"detached\" for our purposes');\r\n\r\nfunction IsPropertyKey(argument) {\r\n  return typeof argument === 'string' || typeof argument === 'symbol';\r\n}\r\n\r\nexports.typeIsObject = x => (typeof x === 'object' && x !== null) || typeof x === 'function';\r\n\r\nexports.createDataProperty = (o, p, v) => {\r\n  assert(exports.typeIsObject(o));\r\n  Object.defineProperty(o, p, { value: v, writable: true, enumerable: true, configurable: true });\r\n};\r\n\r\nexports.createArrayFromList = elements => {\r\n  // We use arrays to represent lists, so this is basically a no-op.\r\n  // Do a slice though just in case we happen to depend on the unique-ness.\r\n  return elements.slice();\r\n};\r\n\r\nexports.ArrayBufferCopy = (dest, destOffset, src, srcOffset, n) => {\r\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\r\n};\r\n\r\nexports.IsFiniteNonNegativeNumber = v => {\r\n  if (exports.IsNonNegativeNumber(v) === false) {\r\n    return false;\r\n  }\r\n\r\n  if (v === Infinity) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexports.IsNonNegativeNumber = v => {\r\n  if (typeof v !== 'number') {\r\n    return false;\r\n  }\r\n\r\n  if (Number.isNaN(v)) {\r\n    return false;\r\n  }\r\n\r\n  if (v < 0) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction Call(F, V, args) {\r\n  if (typeof F !== 'function') {\r\n    throw new TypeError('Argument is not a function');\r\n  }\r\n\r\n  return Function.prototype.apply.call(F, V, args);\r\n}\r\n\r\nexports.Call = Call;\r\n\r\nexports.CreateAlgorithmFromUnderlyingMethod = (underlyingObject, methodName, algoArgCount, extraArgs) => {\r\n  assert(underlyingObject !== undefined);\r\n  assert(IsPropertyKey(methodName));\r\n  assert(algoArgCount === 0 || algoArgCount === 1);\r\n  assert(Array.isArray(extraArgs));\r\n  const method = underlyingObject[methodName];\r\n  if (method !== undefined) {\r\n    if (typeof method !== 'function') {\r\n      throw new TypeError(`${method} is not a method`);\r\n    }\r\n    switch (algoArgCount) {\r\n      case 0: {\r\n        return () => {\r\n          return PromiseCall(method, underlyingObject, extraArgs);\r\n        };\r\n      }\r\n\r\n      case 1: {\r\n        return arg => {\r\n          const fullArgs = [arg].concat(extraArgs);\r\n          return PromiseCall(method, underlyingObject, fullArgs);\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return () => Promise.resolve();\r\n};\r\n\r\nexports.InvokeOrNoop = (O, P, args) => {\r\n  assert(O !== undefined);\r\n  assert(IsPropertyKey(P));\r\n  assert(Array.isArray(args));\r\n\r\n  const method = O[P];\r\n  if (method === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  return Call(method, O, args);\r\n};\r\n\r\nfunction PromiseCall(F, V, args) {\r\n  assert(typeof F === 'function');\r\n  assert(V !== undefined);\r\n  assert(Array.isArray(args));\r\n  try {\r\n    return Promise.resolve(Call(F, V, args));\r\n  } catch (value) {\r\n    return Promise.reject(value);\r\n  }\r\n}\r\n\r\nexports.PromiseCall = PromiseCall;\r\n\r\n// Not implemented correctly\r\nexports.TransferArrayBuffer = O => {\r\n  assert(!exports.IsDetachedBuffer(O));\r\n  const transferredIshVersion = O.slice();\r\n\r\n  // This is specifically to fool tests that test \"is transferred\" by taking a non-zero-length\r\n  // ArrayBuffer and checking if its byteLength starts returning 0.\r\n  Object.defineProperty(O, 'byteLength', {\r\n    get() {\r\n      return 0;\r\n    }\r\n  });\r\n  O[isFakeDetached] = true;\r\n\r\n  return transferredIshVersion;\r\n};\r\n\r\n// Not implemented correctly\r\nexports.IsDetachedBuffer = O => {\r\n  return isFakeDetached in O;\r\n};\r\n\r\nexports.ValidateAndNormalizeHighWaterMark = highWaterMark => {\r\n  highWaterMark = Number(highWaterMark);\r\n  if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\r\n    throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\r\n  }\r\n\r\n  return highWaterMark;\r\n};\r\n\r\nexports.MakeSizeAlgorithmFromSizeFunction = size => {\r\n  if (size === undefined) {\r\n    return () => 1;\r\n  }\r\n  if (typeof size !== 'function') {\r\n    throw new TypeError('size property of a queuing strategy must be a function');\r\n  }\r\n  return chunk => size(chunk);\r\n};\r\n\r\nexports.PerformPromiseThen = (promise, onFulfilled, onRejected) => {\r\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\r\n  // approximation.\r\n  return Promise.prototype.then.call(promise, onFulfilled, onRejected);\r\n};\r\n\r\nexports.WaitForAll = (promises, successSteps, failureSteps) => {\r\n  let rejected = false;\r\n  const rejectionHandler = arg => {\r\n    if (rejected === false) {\r\n      rejected = true;\r\n      failureSteps(arg);\r\n    }\r\n  };\r\n  let index = 0;\r\n  let fulfilledCount = 0;\r\n  const total = promises.length;\r\n  const result = new Array(total);\r\n  for (const promise of promises) {\r\n    const promiseIndex = index;\r\n    const fulfillmentHandler = arg => {\r\n      result[promiseIndex] = arg;\r\n      ++fulfilledCount;\r\n      if (fulfilledCount === total) {\r\n        successSteps(result);\r\n      }\r\n    };\r\n    exports.PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\r\n    ++index;\r\n  }\r\n};\r\n\r\nexports.WaitForAllPromise = (promises, successSteps, failureSteps = undefined) => {\r\n  let resolvePromise;\r\n  let rejectPromise;\r\n  const promise = new Promise((resolve, reject) => {\r\n    resolvePromise = resolve;\r\n    rejectPromise = reject;\r\n  });\r\n  if (failureSteps === undefined) {\r\n    failureSteps = arg => {\r\n      throw arg;\r\n    };\r\n  }\r\n  const successStepsWrapper = results => {\r\n    try {\r\n      const stepsResult = successSteps(results);\r\n      resolvePromise(stepsResult);\r\n    } catch (e) {\r\n      rejectPromise(e);\r\n    }\r\n  };\r\n  const failureStepsWrapper = reason => {\r\n    try {\r\n      const stepsResult = failureSteps(reason);\r\n      resolvePromise(stepsResult);\r\n    } catch (e) {\r\n      rejectPromise(e);\r\n    }\r\n  };\r\n  exports.WaitForAll(promises, successStepsWrapper, failureStepsWrapper);\r\n  return promise;\r\n};\r\n","export {\n  typeIsObject,\n  createDataProperty,\n  createArrayFromList,\n  ArrayBufferCopy,\n  IsFiniteNonNegativeNumber,\n  IsNonNegativeNumber,\n  Call,\n  CreateAlgorithmFromUnderlyingMethod,\n  InvokeOrNoop,\n  PromiseCall,\n  ValidateAndNormalizeHighWaterMark,\n  MakeSizeAlgorithmFromSizeFunction,\n  PerformPromiseThen,\n  WaitForAll,\n  WaitForAllPromise\n} from '../../spec/reference-implementation/lib/helpers';\n\n// Not implemented correctly\nexport function TransferArrayBuffer(O) {\n  return O;\n}\n\n// Not implemented correctly\nexport function IsDetachedBuffer(O) { // eslint-disable-line no-unused-vars\n  return false;\n}\n","import { noop } from '../utils';\n\nexport default function assert() {\n  // do nothing\n}\n\nassert.AssertionError = noop;\n","'use strict';\nconst assert = require('assert');\n\nexports.rethrowAssertionErrorRejection = e => {\n  // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n  // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n  // expect any errors, but assertion errors are always problematic.\n  if (e && e instanceof assert.AssertionError) {\n    setTimeout(() => {\n      throw e;\n    }, 0);\n  }\n};\n","'use strict';\nconst assert = require('better-assert');\nconst { IsFiniteNonNegativeNumber } = require('./helpers.js');\n\nexports.DequeueValue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift();\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n};\n\nexports.EnqueueValueWithSize = (container, value, size) => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  size = Number(size);\n  if (!IsFiniteNonNegativeNumber(size)) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n};\n\nexports.PeekQueueValue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue[0];\n  return pair.value;\n};\n\nexports.ResetQueue = container => {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = [];\n  container._queueTotalSize = 0;\n};\n","'use strict';\nconst assert = require('better-assert');\n\n// Calls to verbose() are purely for debugging the reference implementation and tests. They are not part of the standard\n// and do not appear in the standard text.\nconst verbose = require('debug')('streams:writable-stream:verbose');\n\nconst { CreateAlgorithmFromUnderlyingMethod, InvokeOrNoop, ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction, typeIsObject } = require('./helpers.js');\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\nconst { DequeueValue, EnqueueValueWithSize, PeekQueueValue, ResetQueue } = require('./queue-with-sizes.js');\n\nconst AbortSteps = Symbol('[[AbortSteps]]');\nconst ErrorSteps = Symbol('[[ErrorSteps]]');\n\nclass WritableStream {\n  constructor(underlyingSink = {}, strategy = {}) {\n    InitializeWritableStream(this);\n\n    const size = strategy.size;\n    let highWaterMark = strategy.highWaterMark;\n\n    const type = underlyingSink.type;\n\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\n    if (highWaterMark === undefined) {\n      highWaterMark = 1;\n    }\n    highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  get locked() {\n    if (IsWritableStream(this) === false) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  abort(reason) {\n    if (IsWritableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  getWriter() {\n    if (IsWritableStream(this) === false) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nmodule.exports = {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter(stream) {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1,\n                              sizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n\n  const stream = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream(stream) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = [];\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsWritableStreamLocked(stream) {\n  assert(IsWritableStream(stream) === true);\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream, reason) {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return Promise.resolve(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = new Promise((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest._promise = promise;\n\n  if (wasAlreadyErroring === false) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream) {\n  assert(IsWritableStreamLocked(stream) === true);\n  assert(stream._state === 'writable');\n\n  const promise = new Promise((resolve, reject) => {\n    const writeRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream, error) {\n  verbose('WritableStreamDealWithRejection(stream, %o)', error);\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream, reason) {\n  verbose('WritableStreamStartErroring(stream, %o)', reason);\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream) {\n  verbose('WritableStreamFinishErroring()');\n  assert(stream._state === 'erroring');\n  assert(WritableStreamHasOperationMarkedInFlight(stream) === false);\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  for (const writeRequest of stream._writeRequests) {\n    writeRequest._reject(storedError);\n  }\n  stream._writeRequests = [];\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring === true) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  promise.then(\n      () => {\n        abortRequest._resolve();\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      },\n      reason => {\n        abortRequest._reject(reason);\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream, error) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream, error) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream) {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream) {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    verbose('WritableStreamHasOperationMarkedInFlight() is false');\n    return false;\n  }\n\n  verbose('WritableStreamHasOperationMarkedInFlight() is true');\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n  verbose('WritableStreamRejectCloseAndClosedPromiseIfNeeded()');\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n    writer._closedPromise.catch(() => {});\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream, backpressure) {\n  assert(stream._state === 'writable');\n  assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure === true) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(backpressure === false);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\nclass WritableStreamDefaultWriter {\n  constructor(stream) {\n    if (IsWritableStream(stream) === false) {\n      throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n    }\n    if (IsWritableStreamLocked(stream) === true) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      this._readyPromise.catch(() => {});\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      this._readyPromise.catch(() => {});\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n      this._closedPromise.catch(() => {});\n    }\n  }\n\n  get closed() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  get desiredSize() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  get ready() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  abort(reason) {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return Promise.reject(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  close() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return Promise.reject(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n      return Promise.reject(new TypeError('cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  releaseLock() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  write(chunk) {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer, reason) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return Promise.reject(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\n  const promise = new Promise((resolve, reject) => {\n    const closeRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  if (stream._backpressure === true && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n    return Promise.resolve();\n  }\n\n  if (state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n  writer._closedPromise.catch(() => {});\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n  verbose('WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, %o)', error);\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n  writer._readyPromise.catch(() => {});\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer) {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    'Writer was released and can no longer be used to monitor the stream\\'s closedness');\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined;\n}\n\nfunction WritableStreamDefaultWriterWrite(writer, chunk) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return Promise.reject(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n    return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nclass WritableStreamDefaultController {\n  constructor() {\n    throw new TypeError('WritableStreamDefaultController cannot be constructed explicitly');\n  }\n\n  error(e) {\n    if (IsWritableStreamDefaultController(this) === false) {\n      throw new TypeError(\n        'WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  [AbortSteps](reason) {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                              abortAlgorithm, highWaterMark, sizeAlgorithm) {\n  assert(IsWritableStream(stream) === true);\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined;\n  controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = Promise.resolve(startResult);\n  startPromise.then(\n      () => {\n        assert(stream._state === 'writable' || stream._state === 'erroring');\n        controller._started = true;\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n      },\n      r => {\n        assert(stream._state === 'writable' || stream._state === 'erroring');\n        controller._started = true;\n        WritableStreamDealWithRejection(stream, r);\n      }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n  assert(underlyingSink !== undefined);\n\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingSink, 'start', [controller]);\n  }\n\n  const writeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'write', 1, [controller]);\n  const closeAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'close', 0, []);\n  const abortAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSink, 'abort', 1, []);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller) {\n  controller._writeAlgorithm = undefined;\n  controller._closeAlgorithm = undefined;\n  controller._abortAlgorithm = undefined;\n  controller._strategySizeAlgorithm = undefined;\n}\n\nfunction WritableStreamDefaultControllerClose(controller) {\n  EnqueueValueWithSize(controller, 'close', 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller) {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n  const writeRecord = { chunk };\n\n  try {\n    EnqueueValueWithSize(controller, writeRecord, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n  verbose('WritableStreamDefaultControllerAdvanceQueueIfNeeded()');\n  const stream = controller._controlledWritableStream;\n\n  if (controller._started === false) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return;\n  }\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const writeRecord = PeekQueueValue(controller);\n  if (writeRecord === 'close') {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  sinkClosePromise.then(\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  sinkWritePromise.then(\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller) {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller, error) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name) {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name) {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer) {\n  writer._closedPromise = new Promise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n  writer._closedPromise = Promise.reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer) {\n  writer._closedPromise = Promise.resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterClosedPromiseReject(writer, reason) {\n  assert(writer._closedPromise_resolve !== undefined);\n  assert(writer._closedPromise_reject !== undefined);\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer, reason) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  writer._closedPromise = Promise.reject(reason);\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResolve(writer) {\n  assert(writer._closedPromise_resolve !== undefined);\n  assert(writer._closedPromise_reject !== undefined);\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer) {\n  verbose('defaultWriterReadyPromiseInitialize()');\n  writer._readyPromise = new Promise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n  verbose('defaultWriterReadyPromiseInitializeAsRejected(writer, %o)', reason);\n  writer._readyPromise = Promise.reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer) {\n  verbose('defaultWriterReadyPromiseInitializeAsResolved()');\n  writer._readyPromise = Promise.resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n\nfunction defaultWriterReadyPromiseReject(writer, reason) {\n  verbose('defaultWriterReadyPromiseReject(writer, %o)', reason);\n  assert(writer._readyPromise_resolve !== undefined);\n  assert(writer._readyPromise_reject !== undefined);\n\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer) {\n  verbose('defaultWriterReadyPromiseReset()');\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  writer._readyPromise = new Promise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer, reason) {\n  verbose('defaultWriterReadyPromiseResetToRejected(writer, %o)', reason);\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  writer._readyPromise = Promise.reject(reason);\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseResolve(writer) {\n  verbose('defaultWriterReadyPromiseResolve()');\n  assert(writer._readyPromise_resolve !== undefined);\n  assert(writer._readyPromise_reject !== undefined);\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n","'use strict';\n/* global AbortSignal:false */\n\nconst assert = require('better-assert');\nconst { ArrayBufferCopy, CreateAlgorithmFromUnderlyingMethod, IsFiniteNonNegativeNumber, InvokeOrNoop,\n        IsDetachedBuffer, TransferArrayBuffer, ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction, createArrayFromList, typeIsObject, WaitForAllPromise } =\n      require('./helpers.js');\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\nconst { DequeueValue, EnqueueValueWithSize, ResetQueue } = require('./queue-with-sizes.js');\nconst { AcquireWritableStreamDefaultWriter, IsWritableStream, IsWritableStreamLocked,\n        WritableStreamAbort, WritableStreamDefaultWriterCloseWithErrorPropagation,\n        WritableStreamDefaultWriterRelease, WritableStreamDefaultWriterWrite, WritableStreamCloseQueuedOrInFlight } =\n      require('./writable-stream.js');\n\nconst CancelSteps = Symbol('[[CancelSteps]]');\nconst PullSteps = Symbol('[[PullSteps]]');\n\nclass ReadableStream {\n  constructor(underlyingSource = {}, strategy = {}) {\n    InitializeReadableStream(this);\n\n    const size = strategy.size;\n    let highWaterMark = strategy.highWaterMark;\n\n    const type = underlyingSource.type;\n    const typeString = String(type);\n    if (typeString === 'bytes') {\n      if (size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n\n      if (highWaterMark === undefined) {\n        highWaterMark = 0;\n      }\n      highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n      SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n    } else if (type === undefined) {\n      const sizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(size);\n\n      if (highWaterMark === undefined) {\n        highWaterMark = 1;\n      }\n      highWaterMark = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n    } else {\n      throw new RangeError('Invalid type is specified');\n    }\n  }\n\n  get locked() {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  cancel(reason) {\n    if (IsReadableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  getReader({ mode } = {}) {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    if (mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    mode = String(mode);\n\n    if (mode === 'byob') {\n      return AcquireReadableStreamBYOBReader(this);\n    }\n\n    throw new RangeError('Invalid mode is specified');\n  }\n\n  pipeThrough({ writable, readable }, { preventClose, preventAbort, preventCancel, signal } = {}) {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n\n    if (IsWritableStream(writable) === false) {\n      throw new TypeError('writable argument to pipeThrough must be a WritableStream');\n    }\n\n    if (IsReadableStream(readable) === false) {\n      throw new TypeError('readable argument to pipeThrough must be a ReadableStream');\n    }\n\n    preventClose = Boolean(preventClose);\n    preventAbort = Boolean(preventAbort);\n    preventCancel = Boolean(preventCancel);\n\n    if (signal !== undefined && !isAbortSignal(signal)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough\\'s signal option must be an AbortSignal');\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(writable) === true) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(this, writable, preventClose, preventAbort, preventCancel, signal);\n\n    promise.catch(() => {});\n\n    return readable;\n  }\n\n  pipeTo(dest, { preventClose, preventAbort, preventCancel, signal } = {}) {\n    if (IsReadableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('pipeTo'));\n    }\n    if (IsWritableStream(dest) === false) {\n      return Promise.reject(\n          new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n    }\n\n    preventClose = Boolean(preventClose);\n    preventAbort = Boolean(preventAbort);\n    preventCancel = Boolean(preventCancel);\n\n    if (signal !== undefined && !isAbortSignal(signal)) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s signal option must be an AbortSignal'));\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n    }\n    if (IsWritableStreamLocked(dest) === true) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n    }\n\n    return ReadableStreamPipeTo(this, dest, preventClose, preventAbort, preventCancel, signal);\n  }\n\n  tee() {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return createArrayFromList(branches);\n  }\n}\n\nmodule.exports = {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  ReadableStream,\n  IsReadableStreamDisturbed,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure,\n  ReadableStreamDefaultControllerCanCloseOrEnqueue\n};\n\n// Abstract operations for the ReadableStream.\n\nfunction AcquireReadableStreamBYOBReader(stream) {\n  return new ReadableStreamBYOBReader(stream);\n}\n\nfunction AcquireReadableStreamDefaultReader(stream) {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1,\n                              sizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n\n  const stream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller = Object.create(ReadableStreamDefaultController.prototype);\n\n  SetUpReadableStreamDefaultController(\n      stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 0,\n                                  autoAllocateChunkSize = undefined) {\n  assert(IsNonNegativeNumber(highWaterMark) === true);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(Number.isInteger(autoAllocateChunkSize) === true);\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  const stream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller = Object.create(ReadableByteStreamController.prototype);\n\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark,\n                                    autoAllocateChunkSize);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nfunction IsReadableStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamDisturbed(stream) {\n  assert(IsReadableStream(stream) === true);\n\n  return stream._disturbed;\n}\n\nfunction IsReadableStreamLocked(stream) {\n  assert(IsReadableStream(stream) === true);\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n  assert(IsReadableStream(source) === true);\n  assert(IsWritableStream(dest) === true);\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(IsReadableStreamLocked(source) === false);\n  assert(IsWritableStreamLocked(dest) === false);\n\n  const reader = AcquireReadableStreamDefaultReader(source);\n  const writer = AcquireWritableStreamDefaultWriter(dest);\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = Promise.resolve();\n\n  return new Promise((resolve, reject) => {\n    let abortAlgorithm;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = new DOMException('Aborted', 'AbortError');\n        const actions = [];\n        if (preventAbort === false) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return Promise.resolve();\n          });\n        }\n        if (preventCancel === false) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return Promise.resolve();\n          });\n        }\n        shutdownWithAction(() => WaitForAllPromise(actions.map(action => action()), results => results), true, error);\n      };\n\n      if (signal.aborted === true) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return new Promise((resolveLoop, rejectLoop) => {\n        function next(done) {\n          if (done) {\n            resolveLoop();\n          } else {\n            pipeStep().then(next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep() {\n      if (shuttingDown === true) {\n        return Promise.resolve(true);\n      }\n\n      return writer._readyPromise.then(() => {\n        return ReadableStreamDefaultReaderRead(reader).then(({ value, done }) => {\n          if (done === true) {\n            return true;\n          }\n\n          currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(() => {});\n          return false;\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (preventAbort === false) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (preventCancel === false) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (preventClose === false) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (preventCancel === false) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    pipeLoop().catch(err => {\n      currentWrite = Promise.resolve();\n      rethrowAssertionErrorRejection(err);\n    });\n\n    function waitForWritesToFinish() {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return currentWrite.then(() => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n    }\n\n    function isOrBecomesErrored(stream, promise, action) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        promise.catch(action).catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function isOrBecomesClosed(stream, promise, action) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        promise.then(action).catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function shutdownWithAction(action, originalIsError, originalError) {\n      if (shuttingDown === true) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n        waitForWritesToFinish().then(doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest() {\n        action().then(\n            () => finalize(originalIsError, originalError),\n            newError => finalize(true, newError)\n        )\n            .catch(rethrowAssertionErrorRejection);\n      }\n    }\n\n    function shutdown(isError, error) {\n      if (shuttingDown === true) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n        waitForWritesToFinish().then(() => finalize(isError, error)).catch(rethrowAssertionErrorRejection);\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError, error) {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n    }\n  });\n}\n\nfunction ReadableStreamTee(stream, cloneForBranch2) {\n  assert(IsReadableStream(stream) === true);\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader(stream);\n\n  let closedOrErrored = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1;\n  let reason2;\n  let branch1;\n  let branch2;\n\n  let resolveCancelPromise;\n  const cancelPromise = new Promise(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm() {\n    return ReadableStreamDefaultReaderRead(reader).then(result => {\n      assert(typeIsObject(result));\n      const value = result.value;\n      const done = result.done;\n      assert(typeof done === 'boolean');\n\n      if (done === true && closedOrErrored === false) {\n        if (canceled1 === false) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n        }\n        if (canceled2 === false) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n        }\n        closedOrErrored = true;\n      }\n\n      if (closedOrErrored === true) {\n        return;\n      }\n\n      const value1 = value;\n      const value2 = value;\n\n      // There is no way to access the cloning code right now in the reference implementation.\n      // If we add one then we'll need an implementation for serializable objects.\n      // if (canceled2 === false && cloneForBranch2 === true) {\n      //   value2 = StructuredDeserialize(StructuredSerialize(value2));\n      // }\n\n      if (canceled1 === false) {\n        ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, value1);\n      }\n\n      if (canceled2 === false) {\n        ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, value2);\n      }\n    });\n  }\n\n  function cancel1Algorithm(reason) {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2 === true) {\n      const compositeReason = createArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason) {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1 === true) {\n      const compositeReason = createArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {}\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  reader._closedPromise.catch(r => {\n    if (closedOrErrored === true) {\n      return;\n    }\n\n    ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n    closedOrErrored = true;\n  });\n\n  return [branch1, branch2];\n}\n\n// ReadableStream API exposed for controllers.\n\nfunction ReadableStreamAddReadIntoRequest(stream, forAuthorCode) {\n  assert(IsReadableStreamBYOBReader(stream._reader) === true);\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  const promise = new Promise((resolve, reject) => {\n    const readIntoRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _forAuthorCode: forAuthorCode\n    };\n\n    stream._reader._readIntoRequests.push(readIntoRequest);\n  });\n\n  return promise;\n}\n\nfunction ReadableStreamAddReadRequest(stream, forAuthorCode) {\n  assert(IsReadableStreamDefaultReader(stream._reader) === true);\n  assert(stream._state === 'readable');\n\n  const promise = new Promise((resolve, reject) => {\n    const readRequest = {\n      _resolve: resolve,\n      _reject: reject,\n      _forAuthorCode: forAuthorCode\n    };\n\n    stream._reader._readRequests.push(readRequest);\n  });\n\n  return promise;\n}\n\nfunction ReadableStreamCancel(stream, reason) {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return Promise.resolve(undefined);\n  }\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return sourceCancelPromise.then(() => undefined);\n}\n\nfunction ReadableStreamClose(stream) {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return undefined;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === true) {\n    for (const { _resolve, _forAuthorCode } of reader._readRequests) {\n      _resolve(ReadableStreamCreateReadResult(undefined, true, _forAuthorCode));\n    }\n    reader._readRequests = [];\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  return undefined;\n}\n\nfunction ReadableStreamCreateReadResult(value, done, forAuthorCode) {\n  let prototype = null;\n  if (forAuthorCode === true) {\n    prototype = Object.prototype;\n  }\n  assert(typeof done === 'boolean');\n  const obj = Object.create(prototype);\n  Object.defineProperty(obj, 'value', { value, enumerable: true, writable: true, configurable: true });\n  Object.defineProperty(obj, 'done', { value: done, enumerable: true, writable: true, configurable: true });\n  return obj;\n}\n\nfunction ReadableStreamError(stream, e) {\n  assert(IsReadableStream(stream) === true);\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return undefined;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === true) {\n    for (const readRequest of reader._readRequests) {\n      readRequest._reject(e);\n    }\n\n    reader._readRequests = [];\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n\n    for (const readIntoRequest of reader._readIntoRequests) {\n      readIntoRequest._reject(e);\n    }\n\n    reader._readIntoRequests = [];\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n  reader._closedPromise.catch(() => {});\n}\n\nfunction ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n  const reader = stream._reader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift();\n  readIntoRequest._resolve(ReadableStreamCreateReadResult(chunk, done, readIntoRequest._forAuthorCode));\n}\n\nfunction ReadableStreamFulfillReadRequest(stream, chunk, done) {\n  const reader = stream._reader;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift();\n  readRequest._resolve(ReadableStreamCreateReadResult(chunk, done, readRequest._forAuthorCode));\n}\n\nfunction ReadableStreamGetNumReadIntoRequests(stream) {\n  return stream._reader._readIntoRequests.length;\n}\n\nfunction ReadableStreamGetNumReadRequests(stream) {\n  return stream._reader._readRequests.length;\n}\n\nfunction ReadableStreamHasBYOBReader(stream) {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (IsReadableStreamBYOBReader(reader) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamHasDefaultReader(stream) {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === false) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nclass ReadableStreamDefaultReader {\n  constructor(stream) {\n    if (IsReadableStream(stream) === false) {\n      throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n    }\n    if (IsReadableStreamLocked(stream) === true) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = [];\n  }\n\n  get closed() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  cancel(reason) {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  read() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('read from'));\n    }\n\n    return ReadableStreamDefaultReaderRead(this, true);\n  }\n\n  releaseLock() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nclass ReadableStreamBYOBReader {\n  constructor(stream) {\n    if (!IsReadableStream(stream)) {\n      throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' +\n          'byte source');\n    }\n    if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n          'source');\n    }\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = [];\n  }\n\n  get closed() {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  cancel(reason) {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  read(view) {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('read from'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return Promise.reject(new TypeError('view must be an array buffer view'));\n    }\n\n    if (IsDetachedBuffer(view.buffer) === true) {\n      return Promise.reject(new TypeError('Cannot read into a view onto a detached ArrayBuffer'));\n    }\n\n    if (view.byteLength === 0) {\n      return Promise.reject(new TypeError('view must have non-zero byteLength'));\n    }\n\n    return ReadableStreamBYOBReaderRead(this, view, true);\n  }\n\n  releaseLock() {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\n// Abstract operations for the readers.\n\nfunction IsReadableStreamBYOBReader(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamDefaultReader(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamReaderGenericInitialize(reader, stream) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n    reader._closedPromise.catch(() => {});\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nfunction ReadableStreamReaderGenericCancel(reader, reason) {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nfunction ReadableStreamReaderGenericRelease(reader) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n        reader,\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n        reader,\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n  }\n  reader._closedPromise.catch(() => {});\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined;\n}\n\nfunction ReadableStreamBYOBReaderRead(reader, view, forAuthorCode = false) {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  // Controllers must implement this.\n  return ReadableByteStreamControllerPullInto(stream._readableStreamController, view, forAuthorCode);\n}\n\nfunction ReadableStreamDefaultReaderRead(reader, forAuthorCode = false) {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return Promise.resolve(ReadableStreamCreateReadResult(undefined, true, forAuthorCode));\n  }\n\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(stream._state === 'readable');\n\n  return stream._readableStreamController[PullSteps](forAuthorCode);\n}\n\n// Controllers\n\nclass ReadableStreamDefaultController {\n  constructor() {\n    throw new TypeError();\n  }\n\n  get desiredSize() {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  enqueue(chunk) {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  error(e) {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  [CancelSteps](reason) {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [PullSteps](forAuthorCode) {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested === true && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      return Promise.resolve(ReadableStreamCreateReadResult(chunk, false, forAuthorCode));\n    }\n\n    const pendingPromise = ReadableStreamAddReadRequest(stream, forAuthorCode);\n    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    return pendingPromise;\n  }\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (shouldPull === false) {\n    return undefined;\n  }\n\n  if (controller._pulling === true) {\n    controller._pullAgain = true;\n    return undefined;\n  }\n\n  assert(controller._pullAgain === false);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  pullPromise.then(\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n\n  return undefined;\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller) {\n  const stream = controller._controlledReadableStream;\n\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === false) {\n    return false;\n  }\n\n  if (controller._started === false) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller) {\n  controller._pullAlgorithm = undefined;\n  controller._cancelAlgorithm = undefined;\n  controller._strategySizeAlgorithm = undefined;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction ReadableStreamDefaultControllerClose(controller) {\n  const stream = controller._controlledReadableStream;\n\n  assert(ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === true);\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nfunction ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n  const stream = controller._controlledReadableStream;\n\n  assert(ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) === true);\n\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\n  return undefined;\n}\n\nfunction ReadableStreamDefaultControllerError(controller, e) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nfunction ReadableStreamDefaultControllerGetDesiredSize(controller) {\n  const stream = controller._controlledReadableStream;\n  const state = stream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nfunction ReadableStreamDefaultControllerHasBackpressure(controller) {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller) === true) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n  const state = controller._controlledReadableStream._state;\n\n  if (controller._closeRequested === false && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction SetUpReadableStreamDefaultController(\n  stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined;\n  controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  Promise.resolve(startResult).then(\n    () => {\n      controller._started = true;\n\n      assert(controller._pulling === false);\n      assert(controller._pullAgain === false);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark,\n                                                                  sizeAlgorithm) {\n  assert(underlyingSource !== undefined);\n\n  const controller = Object.create(ReadableStreamDefaultController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingSource, 'start', [controller]);\n  }\n\n  const pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'pull', 0, [controller]);\n  const cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingSource, 'cancel', 1, []);\n\n  SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm,\n                                       highWaterMark, sizeAlgorithm);\n}\n\nclass ReadableStreamBYOBRequest {\n  constructor() {\n    throw new TypeError('ReadableStreamBYOBRequest cannot be used directly');\n  }\n\n  get view() {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  respond(bytesWritten) {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('respond');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view.buffer) === true) {\n      throw new TypeError('The BYOB request\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  respondWithNewView(view) {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('respond');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (IsDetachedBuffer(view.buffer) === true) {\n      throw new TypeError('The supplied view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nclass ReadableByteStreamController {\n  constructor() {\n    throw new TypeError('ReadableByteStreamController constructor cannot be used directly');\n  }\n\n  get byobRequest() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n      const firstDescriptor = this._pendingPullIntos[0];\n      const view = new Uint8Array(firstDescriptor.buffer,\n                                  firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                  firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n      const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n      SetUpReadableStreamBYOBRequest(byobRequest, this, view);\n      this._byobRequest = byobRequest;\n    }\n\n    return this._byobRequest;\n  }\n\n  get desiredSize() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  enqueue(chunk) {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n    }\n\n    if (IsDetachedBuffer(chunk.buffer) === true) {\n      throw new TypeError('Cannot enqueue a view onto a detached ArrayBuffer');\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  error(e) {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  [CancelSteps](reason) {\n    if (this._pendingPullIntos.length > 0) {\n      const firstDescriptor = this._pendingPullIntos[0];\n      firstDescriptor.bytesFilled = 0;\n    }\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [PullSteps](forAuthorCode) {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream) === true);\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      const entry = this._queue.shift();\n      this._queueTotalSize -= entry.byteLength;\n\n      ReadableByteStreamControllerHandleQueueDrain(this);\n\n      let view;\n      try {\n        view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n      } catch (viewE) {\n        return Promise.reject(viewE);\n      }\n\n      return Promise.resolve(ReadableStreamCreateReadResult(view, false, forAuthorCode));\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        return Promise.reject(bufferE);\n      }\n\n      const pullIntoDescriptor = {\n        buffer,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        elementSize: 1,\n        ctor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    const promise = ReadableStreamAddReadRequest(stream, forAuthorCode);\n\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n\n    return promise;\n  }\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nfunction IsReadableByteStreamController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamBYOBRequest(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller) {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (shouldPull === false) {\n    return undefined;\n  }\n\n  if (controller._pulling === true) {\n    controller._pullAgain = true;\n    return undefined;\n  }\n\n  assert(controller._pullAgain === false);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  pullPromise.then(\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n\n  return undefined;\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = [];\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n  assert(stream._state !== 'errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.ctor(\n      pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue[0];\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (ready === false) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n  if (controller._byobRequest === undefined) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined;\n  controller._byobRequest._view = undefined;\n  controller._byobRequest = undefined;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n  assert(controller._closeRequested === false);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos[0];\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerPullInto(controller, view, forAuthorCode) {\n  const stream = controller._controlledReadableByteStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = view.constructor.BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor;\n\n  const buffer = TransferArrayBuffer(view.buffer);\n  const pullIntoDescriptor = {\n    buffer,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    return ReadableStreamAddReadIntoRequest(stream, forAuthorCode);\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    return Promise.resolve(ReadableStreamCreateReadResult(emptyView, true, forAuthorCode));\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      return Promise.resolve(ReadableStreamCreateReadResult(filledView, false, forAuthorCode));\n    }\n\n    if (controller._closeRequested === true) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      return Promise.reject(e);\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  const promise = ReadableStreamAddReadIntoRequest(stream, forAuthorCode);\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n\n  return promise;\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  assert(firstDescriptor.bytesFilled === 0);\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream) === true) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n  if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n    throw new RangeError('bytesWritten out of range');\n  }\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    // TODO: Figure out whether we should detach the buffer or not here.\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n  const firstDescriptor = controller._pendingPullIntos[0];\n\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(stream._state === 'readable');\n\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(controller) {\n  const descriptor = controller._pendingPullIntos.shift();\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested === true) {\n    return false;\n  }\n\n  if (controller._started === false) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller) {\n  controller._pullAlgorithm = undefined;\n  controller._cancelAlgorithm = undefined;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nfunction ReadableByteStreamControllerClose(controller) {\n  const stream = controller._controlledReadableByteStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos[0];\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nfunction ReadableByteStreamControllerEnqueue(controller, chunk) {\n  const stream = controller._controlledReadableByteStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (ReadableStreamHasDefaultReader(stream) === true) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream) === true) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(IsReadableStreamLocked(stream) === false);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerError(controller, e) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller) {\n  const stream = controller._controlledReadableByteStream;\n  const state = stream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction ReadableByteStreamControllerRespond(controller, bytesWritten) {\n  bytesWritten = Number(bytesWritten);\n  if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n    throw new RangeError('bytesWritten must be a finite');\n  }\n\n  assert(controller._pendingPullIntos.length > 0);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nfunction ReadableByteStreamControllerRespondWithNewView(controller, view) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos[0];\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.byteLength !== view.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n\n  firstDescriptor.buffer = view.buffer;\n\n  ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n}\n\nfunction SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm,\n                                           highWaterMark, autoAllocateChunkSize) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(Number.isInteger(autoAllocateChunkSize) === true);\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = [];\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  Promise.resolve(startResult).then(\n      () => {\n        controller._started = true;\n\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      },\n      r => {\n        ReadableByteStreamControllerError(controller, r);\n      }\n  )\n      .catch(rethrowAssertionErrorRejection);\n}\n\nfunction SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n  assert(underlyingByteSource !== undefined);\n\n  const controller = Object.create(ReadableByteStreamController.prototype);\n\n  function startAlgorithm() {\n    return InvokeOrNoop(underlyingByteSource, 'start', [controller]);\n  }\n\n  const pullAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'pull', 0, [controller]);\n  const cancelAlgorithm = CreateAlgorithmFromUnderlyingMethod(underlyingByteSource, 'cancel', 1, []);\n\n  let autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize !== undefined) {\n    autoAllocateChunkSize = Number(autoAllocateChunkSize);\n    if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n      throw new RangeError('autoAllocateChunkSize must be a positive integer');\n    }\n  }\n\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark,\n                                    autoAllocateChunkSize);\n}\n\nfunction SetUpReadableStreamBYOBRequest(request, controller, view) {\n  assert(IsReadableByteStreamController(controller) === true);\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view) === true);\n  assert(IsDetachedBuffer(view.buffer) === false);\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStream.\n\nfunction isAbortSignal(value) {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n\n  // Use the brand check to distinguish a real AbortSignal from a fake one.\n  const aborted = Object.getOwnPropertyDescriptor(AbortSignal.prototype, 'aborted').get;\n  try {\n    aborted.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n\n// Helper functions for the readers.\n\nfunction readerLockException(name) {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n\nfunction defaultReaderClosedPromiseInitialize(reader) {\n  reader._closedPromise = new Promise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nfunction defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n  reader._closedPromise = Promise.reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseInitializeAsResolved(reader) {\n  reader._closedPromise = Promise.resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseReject(reader, reason) {\n  assert(reader._closedPromise_resolve !== undefined);\n  assert(reader._closedPromise_reject !== undefined);\n\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseResetToRejected(reader, reason) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  reader._closedPromise = Promise.reject(reason);\n}\n\nfunction defaultReaderClosedPromiseResolve(reader) {\n  assert(reader._closedPromise_resolve !== undefined);\n  assert(reader._closedPromise_reject !== undefined);\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction byobReaderBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name) {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n","'use strict';\nconst { createDataProperty } = require('./helpers.js');\n\nmodule.exports = class ByteLengthQueuingStrategy {\n  constructor({ highWaterMark }) {\n    createDataProperty(this, 'highWaterMark', highWaterMark);\n  }\n\n  size(chunk) {\n    return chunk.byteLength;\n  }\n};\n","'use strict';\nconst { createDataProperty } = require('./helpers.js');\n\nmodule.exports = class CountQueuingStrategy {\n  constructor({ highWaterMark }) {\n    createDataProperty(this, 'highWaterMark', highWaterMark);\n  }\n\n  size() {\n    return 1;\n  }\n};\n","'use strict';\nconst assert = require('better-assert');\n\n// Calls to verbose() are purely for debugging the reference implementation and tests. They are not part of the standard\n// and do not appear in the standard text.\nconst verbose = require('debug')('streams:transform-stream:verbose');\nconst { InvokeOrNoop, CreateAlgorithmFromUnderlyingMethod, PromiseCall, typeIsObject,\n        ValidateAndNormalizeHighWaterMark, IsNonNegativeNumber,\n        MakeSizeAlgorithmFromSizeFunction } = require('./helpers.js');\nconst { CreateReadableStream, ReadableStreamDefaultControllerClose, ReadableStreamDefaultControllerEnqueue,\n        ReadableStreamDefaultControllerError, ReadableStreamDefaultControllerGetDesiredSize,\n        ReadableStreamDefaultControllerHasBackpressure,\n        ReadableStreamDefaultControllerCanCloseOrEnqueue } = require('./readable-stream.js');\nconst { CreateWritableStream, WritableStreamDefaultControllerErrorIfNeeded } = require('./writable-stream.js');\n\n// Class TransformStream\n\nclass TransformStream {\n  constructor(transformer = {}, writableStrategy = {}, readableStrategy = {}) {\n    const writableSizeFunction = writableStrategy.size;\n    let writableHighWaterMark = writableStrategy.highWaterMark;\n    const readableSizeFunction = readableStrategy.size;\n    let readableHighWaterMark = readableStrategy.highWaterMark;\n\n    const writableType = transformer.writableType;\n\n    if (writableType !== undefined) {\n      throw new RangeError('Invalid writable type specified');\n    }\n\n    const writableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(writableSizeFunction);\n    if (writableHighWaterMark === undefined) {\n      writableHighWaterMark = 1;\n    }\n    writableHighWaterMark = ValidateAndNormalizeHighWaterMark(writableHighWaterMark);\n\n    const readableType = transformer.readableType;\n\n    if (readableType !== undefined) {\n      throw new RangeError('Invalid readable type specified');\n    }\n\n    const readableSizeAlgorithm = MakeSizeAlgorithmFromSizeFunction(readableSizeFunction);\n    if (readableHighWaterMark === undefined) {\n      readableHighWaterMark = 0;\n    }\n    readableHighWaterMark = ValidateAndNormalizeHighWaterMark(readableHighWaterMark);\n\n    let startPromise_resolve;\n    const startPromise = new Promise(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                              readableSizeAlgorithm);\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    const startResult = InvokeOrNoop(transformer, 'start', [this._transformStreamController]);\n    startPromise_resolve(startResult);\n  }\n\n  get readable() {\n    if (IsTransformStream(this) === false) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  get writable() {\n    if (IsTransformStream(this) === false) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\n// Transform Stream Abstract Operations\n\nfunction CreateTransformStream(startAlgorithm, transformAlgorithm, flushAlgorithm, writableHighWaterMark = 1,\n                               writableSizeAlgorithm = () => 1, readableHighWaterMark = 0,\n                               readableSizeAlgorithm = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve;\n  const startPromise = new Promise(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm,\n                                   readableHighWaterMark, readableSizeAlgorithm) {\n  function startAlgorithm() {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk) {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason) {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm() {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm() {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason) {\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n    return Promise.resolve();\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined;\n  stream._backpressureChangePromise = undefined;\n  stream._backpressureChangePromise_resolve = undefined;\n  TransformStreamSetBackpressure(stream, true);\n\n  // Used by IsWritableStream() which is called by SetUpTransformStreamDefaultController().\n  stream._transformStreamController = undefined;\n}\n\nfunction IsTransformStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream, e) {\n  verbose('TransformStreamError()');\n\n  ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  if (stream._backpressure === true) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream, backpressure) {\n  verbose(`TransformStreamSetBackpressure() [backpressure = ${backpressure}]`);\n\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = new Promise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\nclass TransformStreamDefaultController {\n  constructor() {\n    throw new TypeError('TransformStreamDefaultController instances cannot be created directly');\n  }\n\n  get desiredSize() {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n  }\n\n  enqueue(chunk) {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  error(reason) {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  terminate() {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n  assert(IsTransformStream(stream) === true);\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n  assert(transformer !== undefined);\n\n  const controller = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm = chunk => {\n    try {\n      TransformStreamDefaultControllerEnqueue(controller, chunk);\n      return Promise.resolve();\n    } catch (transformResultE) {\n      return Promise.reject(transformResultE);\n    }\n  };\n  const transformMethod = transformer.transform;\n  if (transformMethod !== undefined) {\n    if (typeof transformMethod !== 'function') {\n      throw new TypeError('transform is not a method');\n    }\n    transformAlgorithm = chunk => PromiseCall(transformMethod, transformer, [chunk, controller]);\n  }\n\n  const flushAlgorithm = CreateAlgorithmFromUnderlyingMethod(transformer, 'flush', 0, [controller]);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller) {\n  controller._transformAlgorithm = undefined;\n  controller._flushAlgorithm = undefined;\n}\n\nfunction TransformStreamDefaultControllerEnqueue(controller, chunk) {\n  verbose('TransformStreamDefaultControllerEnqueue()');\n\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController;\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === false) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure === true);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller, e) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromise.catch(r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate(controller) {\n  verbose('TransformStreamDefaultControllerTerminate()');\n\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController;\n\n  if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\n    ReadableStreamDefaultControllerClose(readableController);\n  }\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n  verbose('TransformStreamDefaultSinkWriteAlgorithm()');\n\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure === true) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return backpressureChangePromise\n        .then(() => {\n          const writable = stream._writable;\n          const state = writable._state;\n          if (state === 'erroring') {\n            throw writable._storedError;\n          }\n          assert(state === 'writable');\n          return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n        });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n  // errored.\n  TransformStreamError(stream, reason);\n  return Promise.resolve();\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm(stream) {\n  verbose('TransformStreamDefaultSinkCloseAlgorithm()');\n\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  const controller = stream._transformStreamController;\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  // Return a promise that is fulfilled with undefined on success.\n  return flushPromise.then(() => {\n    if (readable._state === 'errored') {\n      throw readable._storedError;\n    }\n    const readableController = readable._readableStreamController;\n    if (ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController) === true) {\n      ReadableStreamDefaultControllerClose(readableController);\n    }\n  }).catch(r => {\n    TransformStreamError(stream, r);\n    throw readable._storedError;\n  });\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream) {\n  verbose('TransformStreamDefaultSourcePullAlgorithm()');\n\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure === true);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\nmodule.exports = { CreateTransformStream, TransformStream };\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name) {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n"],"names":["SymbolPolyfill","Symbol","iterator","description","NumberIsInteger","Number","isInteger","value","isFinite","Math","floor","noop","NumberIsNaN","isNaN","x","isFakeDetached","exports","o","p","v","Object","defineProperty","writable","enumerable","configurable","elements","slice","dest","destOffset","src","srcOffset","n","Uint8Array","set","IsNonNegativeNumber","Infinity","Number.isNaN","Call","F","V","args","TypeError","Function","prototype","apply","call","underlyingObject","methodName","algoArgCount","extraArgs","method","undefined","PromiseCall","arg","fullArgs","concat","Promise","resolve","O","P","reject","transferredIshVersion","get","highWaterMark","RangeError","size","chunk","promise","onFulfilled","onRejected","then","promises","successSteps","failureSteps","rejected","rejectionHandler","index","fulfilledCount","total","length","result","Array","promiseIndex","fulfillmentHandler","PerformPromiseThen","resolvePromise","rejectPromise","successStepsWrapper","results","stepsResult","e","failureStepsWrapper","reason","WaitForAll","TransferArrayBuffer","IsDetachedBuffer","assert","AssertionError","setTimeout","IsFiniteNonNegativeNumber","require$$0","container","pair","_queue","shift","_queueTotalSize","push","verbose","CreateAlgorithmFromUnderlyingMethod","require$$1","InvokeOrNoop","ValidateAndNormalizeHighWaterMark","MakeSizeAlgorithmFromSizeFunction","typeIsObject","rethrowAssertionErrorRejection","require$$2","DequeueValue","require$$3","EnqueueValueWithSize","PeekQueueValue","ResetQueue","AbortSteps","ErrorSteps","WritableStream","underlyingSink","strategy","InitializeWritableStream","type","sizeAlgorithm","SetUpWritableStreamDefaultControllerFromUnderlyingSink","abort","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","getWriter","AcquireWritableStreamDefaultWriter","CreateWritableStream","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamCloseQueuedOrInFlight","stream","WritableStreamDefaultWriter","startAlgorithm","writeAlgorithm","closeAlgorithm","abortAlgorithm","create","controller","WritableStreamDefaultController","SetUpWritableStreamDefaultController","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","hasOwnProperty","state","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamAddWriteRequest","writeRequest","WritableStreamDealWithRejection","error","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","_closedPromise","catch","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","_ownerWritableStream","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","_readyPromise","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","close","WritableStreamDefaultWriterClose","releaseLock","write","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerClose","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","chunkSize","WritableStreamDefaultControllerGetChunkSize","WritableStreamDefaultControllerWrite","IsWritableStreamDefaultController","_controlledWritableStream","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","_strategySizeAlgorithm","_strategyHWM","_writeAlgorithm","_closeAlgorithm","WritableStreamDefaultControllerGetBackpressure","startResult","startPromise","WritableStreamDefaultControllerAdvanceQueueIfNeeded","r","chunkSizeE","writeRecord","enqueueE","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","sinkClosePromise","sinkWritePromise","desiredSize","name","_closedPromise_resolve","_closedPromise_reject","_readyPromise_resolve","_readyPromise_reject","ArrayBufferCopy","createArrayFromList","WaitForAllPromise","CancelSteps","PullSteps","ReadableStream","underlyingSource","InitializeReadableStream","typeString","String","SetUpReadableByteStreamControllerFromUnderlyingSource","SetUpReadableStreamDefaultControllerFromUnderlyingSource","cancel","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","getReader","mode","AcquireReadableStreamDefaultReader","AcquireReadableStreamBYOBReader","pipeThrough","readable","preventClose","preventAbort","preventCancel","signal","Boolean","isAbortSignal","ReadableStreamPipeTo","pipeTo","tee","branches","ReadableStreamTee","CreateReadableByteStream","CreateReadableStream","IsReadableStreamDisturbed","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerHasBackpressure","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamBYOBReader","ReadableStreamDefaultReader","pullAlgorithm","cancelAlgorithm","ReadableStreamDefaultController","SetUpReadableStreamDefaultController","autoAllocateChunkSize","ReadableByteStreamController","SetUpReadableByteStreamController","_reader","_disturbed","source","reader","shuttingDown","currentWrite","DOMException","actions","shutdownWithAction","map","action","aborted","addEventListener","pipeLoop","resolveLoop","rejectLoop","next","done","pipeStep","ReadableStreamDefaultReaderRead","isOrBecomesErrored","shutdown","isOrBecomesClosed","destClosed","err","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","ReadableStreamReaderGenericRelease","removeEventListener","cloneForBranch2","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","branch2","resolveCancelPromise","cancelPromise","_readableStreamController","value1","value2","cancel1Algorithm","compositeReason","cancelResult","cancel2Algorithm","ReadableStreamAddReadIntoRequest","forAuthorCode","readIntoRequest","_forAuthorCode","_readIntoRequests","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamClose","sourceCancelPromise","IsReadableStreamDefaultReader","ReadableStreamCreateReadResult","defaultReaderClosedPromiseResolve","obj","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadIntoRequest","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","IsReadableStreamBYOBReader","ReadableStreamHasDefaultReader","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","read","IsReadableByteStreamController","byobReaderBrandCheckException","view","ArrayBuffer","isView","buffer","byteLength","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","ReadableByteStreamControllerPullInto","IsReadableStreamDefaultController","defaultControllerBrandCheckException","enqueue","_cancelAlgorithm","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","_closeRequested","ReadableStreamDefaultControllerCallPullIfNeeded","pendingPromise","shouldPull","ReadableStreamDefaultControllerShouldCallPull","_pulling","_pullAgain","pullPromise","_pullAlgorithm","ReadableStreamBYOBRequest","respond","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","_associatedReadableByteStreamController","_view","ReadableByteStreamControllerRespond","respondWithNewView","ReadableByteStreamControllerRespondWithNewView","byteStreamControllerBrandCheckException","_controlledReadableByteStream","ReadableByteStreamControllerClose","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","_pendingPullIntos","firstDescriptor","bytesFilled","ReadableByteStreamControllerClearAlgorithms","entry","ReadableByteStreamControllerHandleQueueDrain","byteOffset","viewE","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","elementSize","ctor","readerType","ReadableByteStreamControllerCallPullIfNeeded","_byobRequest","byobRequest","SetUpReadableStreamBYOBRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerClearPendingPullIntos","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","min","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","constructor","DataView","BYTES_PER_ELEMENT","emptyView","ReadableByteStreamControllerRespondInClosedState","ReadableByteStreamControllerRespondInReadableState","remainderSize","end","remainder","ReadableByteStreamControllerRespondInternal","descriptor","firstPendingPullInto","transferredBuffer","transferredView","underlyingByteSource","Number.isInteger","request","getOwnPropertyDescriptor","AbortSignal","createDataProperty","TransformStream","transformer","writableStrategy","readableStrategy","writableSizeFunction","writableHighWaterMark","readableSizeFunction","readableHighWaterMark","writableType","writableSizeAlgorithm","readableType","readableSizeAlgorithm","startPromise_resolve","InitializeTransformStream","SetUpTransformStreamDefaultControllerFromTransformer","_transformStreamController","IsTransformStream","_readable","_writable","CreateTransformStream","transformAlgorithm","flushAlgorithm","TransformStreamDefaultController","SetUpTransformStreamDefaultController","TransformStreamDefaultSinkWriteAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSourcePullAlgorithm","TransformStreamErrorWritableAndUnblockWrite","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamSetBackpressure","TransformStreamError","TransformStreamDefaultControllerClearAlgorithms","IsTransformStreamDefaultController","TransformStreamDefaultControllerEnqueue","TransformStreamDefaultControllerError","terminate","TransformStreamDefaultControllerTerminate","readableController","_controlledTransformStream","_transformAlgorithm","_flushAlgorithm","transformResultE","transformMethod","transform","TransformStreamDefaultControllerPerformTransform","transformPromise","backpressureChangePromise","flushPromise"],"mappings":"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"}