"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const type_1 = __importDefault(require("../../../../../test-run/commands/type"));
const observation_1 = require("../../../../../test-run/commands/observation");
const actions_1 = require("../../../../../test-run/commands/actions");
const assertion_1 = require("../../../../../test-run/commands/assertion");
const browser_manipulation_1 = require("../../../../../test-run/commands/browser-manipulation");
const COMMAND_CONSTRUCTORS = new Map([
    [type_1.default.executeSelector, observation_1.ExecuteSelectorCommand],
    [type_1.default.executeClientFunction, observation_1.ExecuteClientFunctionCommand],
    [type_1.default.wait, observation_1.WaitCommand],
    [type_1.default.click, actions_1.ClickCommand],
    [type_1.default.doubleClick, actions_1.DoubleClickCommand],
    [type_1.default.navigateTo, actions_1.NavigateToCommand],
    [type_1.default.typeText, actions_1.TypeTextCommand],
    [type_1.default.setNativeDialogHandler, actions_1.SetNativeDialogHandlerCommand],
    [type_1.default.switchToIframe, actions_1.SwitchToIframeCommand],
    [type_1.default.switchToMainWindow, actions_1.SwitchToMainWindowCommand],
    [type_1.default.getNativeDialogHistory, actions_1.GetNativeDialogHistoryCommand],
    [type_1.default.getBrowserConsoleMessages, actions_1.GetBrowserConsoleMessagesCommand],
    [type_1.default.setTestSpeed, actions_1.SetTestSpeedCommand],
    [type_1.default.setPageLoadTimeout, actions_1.SetPageLoadTimeoutCommand],
    [type_1.default.pressKey, actions_1.PressKeyCommand],
    [type_1.default.dragToElement, actions_1.DragToElementCommand],
    [type_1.default.selectEditableContent, actions_1.SelectEditableContentCommand],
    [type_1.default.hover, actions_1.HoverCommand],
    [type_1.default.assertion, assertion_1.AssertionCommand],
    [type_1.default.useRole, actions_1.UseRoleCommand],
    [type_1.default.executeExpression, actions_1.ExecuteExpressionCommand],
    [type_1.default.executeAsyncExpression, actions_1.ExecuteAsyncExpressionCommand],
    [type_1.default.drag, actions_1.DragCommand],
    [type_1.default.rightClick, actions_1.RightClickCommand],
    [type_1.default.selectText, actions_1.SelectTextCommand],
    [type_1.default.selectTextAreaContent, actions_1.SelectTextAreaContentCommand],
    [type_1.default.setFilesToUpload, actions_1.SetFilesToUploadCommand],
    [type_1.default.clearUpload, actions_1.ClearUploadCommand],
    [type_1.default.takeScreenshot, browser_manipulation_1.TakeScreenshotCommand],
    [type_1.default.takeElementScreenshot, browser_manipulation_1.TakeElementScreenshotCommand],
    [type_1.default.resizeWindow, browser_manipulation_1.ResizeWindowCommand],
    [type_1.default.resizeWindowToFitDevice, browser_manipulation_1.ResizeWindowToFitDeviceCommand],
    [type_1.default.maximizeWindow, browser_manipulation_1.MaximizeWindowCommand],
    [type_1.default.dispatchEvent, actions_1.DispatchEventCommand],
    [type_1.default.scroll, actions_1.ScrollCommand],
    [type_1.default.scrollBy, actions_1.ScrollByCommand],
    [type_1.default.scrollIntoView, actions_1.ScrollIntoViewCommand],
    [type_1.default.openWindow, actions_1.OpenWindowCommand],
    [type_1.default.closeWindow, actions_1.CloseWindowCommand],
    [type_1.default.getCurrentWindow, actions_1.GetCurrentWindowCommand],
    [type_1.default.switchToWindow, actions_1.SwitchToWindowCommand],
    [type_1.default.switchToWindowByPredicate, actions_1.SwitchToWindowByPredicateCommand],
    [type_1.default.switchToParentWindow, actions_1.SwitchToParentWindowCommand],
    [type_1.default.switchToPreviousWindow, actions_1.SwitchToPreviousWindowCommand],
    [type_1.default.getCookies, actions_1.GetCookiesCommand],
    [type_1.default.setCookies, actions_1.SetCookiesCommand],
    [type_1.default.deleteCookies, actions_1.DeleteCookiesCommand],
]);
exports.default = COMMAND_CONSTRUCTORS;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,