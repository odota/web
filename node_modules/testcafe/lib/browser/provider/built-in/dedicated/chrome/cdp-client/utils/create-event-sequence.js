"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const clientsManager = __importStar(require("../clients-manager"));
class ChromeCdpEventSequence {
    async run(currentElement, prevElement, options) {
        const { Input } = clientsManager.getClient();
        await Input.dispatchMouseEvent({
            type: 'mouseMoved',
            x: options.clientX,
            y: options.clientY,
        });
    }
}
function createEventSequence() {
    return new ChromeCdpEventSequence();
}
exports.default = createEventSequence;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWV2ZW50LXNlcXVlbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2Jyb3dzZXIvcHJvdmlkZXIvYnVpbHQtaW4vZGVkaWNhdGVkL2Nocm9tZS9jZHAtY2xpZW50L3V0aWxzL2NyZWF0ZS1ldmVudC1zZXF1ZW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxtRUFBcUQ7QUFPckQsTUFBTSxzQkFBc0I7SUFDakIsS0FBSyxDQUFDLEdBQUcsQ0FBRSxjQUEwQixFQUFFLFdBQXVCLEVBQUUsT0FBMkM7UUFDOUcsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLGNBQWMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUU3QyxNQUFNLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztZQUMzQixJQUFJLEVBQUUsWUFBWTtZQUNsQixDQUFDLEVBQUssT0FBTyxDQUFDLE9BQU87WUFDckIsQ0FBQyxFQUFLLE9BQU8sQ0FBQyxPQUFPO1NBQ3hCLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FDSjtBQUVELFNBQXdCLG1CQUFtQjtJQUN2QyxPQUFPLElBQUksc0JBQXNCLEVBQUUsQ0FBQztBQUN4QyxDQUFDO0FBRkQsc0NBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJ2ZXJOb2RlIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgY2xpZW50c01hbmFnZXIgZnJvbSAnLi4vY2xpZW50cy1tYW5hZ2VyJztcblxuaW50ZXJmYWNlIENocm9tZUNkcEV2ZW50U2VxdWVuY2VFdmVudE9wdGlvbnMge1xuICAgIGNsaWVudFg6IG51bWJlcjtcbiAgICBjbGllbnRZOiBudW1iZXI7XG59XG5cbmNsYXNzIENocm9tZUNkcEV2ZW50U2VxdWVuY2Uge1xuICAgIHB1YmxpYyBhc3luYyBydW4gKGN1cnJlbnRFbGVtZW50OiBTZXJ2ZXJOb2RlLCBwcmV2RWxlbWVudDogU2VydmVyTm9kZSwgb3B0aW9uczogQ2hyb21lQ2RwRXZlbnRTZXF1ZW5jZUV2ZW50T3B0aW9ucyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBjb25zdCB7IElucHV0IH0gPSBjbGllbnRzTWFuYWdlci5nZXRDbGllbnQoKTtcblxuICAgICAgICBhd2FpdCBJbnB1dC5kaXNwYXRjaE1vdXNlRXZlbnQoe1xuICAgICAgICAgICAgdHlwZTogJ21vdXNlTW92ZWQnLFxuICAgICAgICAgICAgeDogICAgb3B0aW9ucy5jbGllbnRYLFxuICAgICAgICAgICAgeTogICAgb3B0aW9ucy5jbGllbnRZLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUV2ZW50U2VxdWVuY2UgKCk6IENocm9tZUNkcEV2ZW50U2VxdWVuY2Uge1xuICAgIHJldHVybiBuZXcgQ2hyb21lQ2RwRXZlbnRTZXF1ZW5jZSgpO1xufVxuIl19