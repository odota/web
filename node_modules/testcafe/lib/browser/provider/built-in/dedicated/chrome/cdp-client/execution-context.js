"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const EMPTY_CONTEXT = -1;
class ExecutionContext {
    constructor(parent, frameId = '', ctxId = EMPTY_CONTEXT) {
        this.children = [];
        this.ctxId = ctxId;
        this.frameId = frameId;
        this.parent = parent !== null && parent !== void 0 ? parent : this;
    }
    _is(frameOrCtxId) {
        return (typeof frameOrCtxId === 'string' ? this.frameId : this.ctxId) === frameOrCtxId;
    }
    find(frameOrCtxId) {
        if (this._is(frameOrCtxId))
            return this;
        const children = Array.from(this.children);
        let index = 0;
        while (children[index]) {
            const child = children[index];
            if (child._is(frameOrCtxId))
                return child;
            if (child.children.length)
                children.push(...child.children);
            ++index;
        }
        return ExecutionContext.top;
    }
    _add(frameId) {
        const newCtx = new ExecutionContext(this, frameId);
        this.children.push(newCtx);
        return newCtx;
    }
    _remove() {
        if (this === ExecutionContext.current)
            ExecutionContext.current = ExecutionContext.top;
        for (const child of this.children)
            child._remove();
        if (!this.parent || this.parent === this)
            return;
        this.parent.children.splice(this.parent.children.indexOf(this), 1);
        this.parent = null;
    }
    _setContext(ctx) {
        this.ctxId = ctx;
    }
    _deleteContext() {
        this.ctxId = EMPTY_CONTEXT;
    }
    _clearAll() {
        ExecutionContext.current = ExecutionContext.top;
        this.frameId = '';
        this.ctxId = EMPTY_CONTEXT;
        this._remove();
    }
    static initialize({ Runtime, Page }) {
        Page.on('frameAttached', ({ frameId, parentFrameId }) => {
            ExecutionContext.top.find(parentFrameId)._add(frameId);
        });
        Page.on('frameDetached', ({ frameId }) => ExecutionContext.top.find(frameId)._remove());
        Runtime.on('executionContextsCleared', () => ExecutionContext.top._clearAll());
        Runtime.on('executionContextDestroyed', ({ executionContextId }) => ExecutionContext.top.find(executionContextId)._deleteContext());
        Runtime.on('executionContextCreated', ({ context }) => {
            if (!context.auxData || !context.auxData.frameId || !context.auxData.isDefault)
                return;
            if (!ExecutionContext.top.frameId)
                ExecutionContext.top.frameId = context.auxData.frameId;
            ExecutionContext.top.find(context.auxData.frameId)._setContext(context.id);
        });
    }
    static getCurrentContextId() {
        return ExecutionContext.current.ctxId;
    }
    static switchToIframe(frameId) {
        ExecutionContext.current = ExecutionContext.top.find(frameId);
    }
    static switchToMainWindow() {
        ExecutionContext.current = ExecutionContext.top;
    }
}
exports.default = ExecutionContext;
ExecutionContext.current = new ExecutionContext();
ExecutionContext.top = ExecutionContext.current;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,