"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.initTestFileCompilers = exports.getTestFileCompilers = void 0;
const testcafe_hammerhead_1 = __importDefault(require("testcafe-hammerhead"));
const testcafe_legacy_api_1 = require("testcafe-legacy-api");
const compiler_1 = __importDefault(require("./test-file/formats/es-next/compiler"));
const compiler_2 = __importDefault(require("./test-file/formats/typescript/compiler"));
const compiler_3 = __importDefault(require("./test-file/formats/coffeescript/compiler"));
const raw_1 = __importDefault(require("./test-file/formats/raw"));
const customizable_compilers_1 = __importDefault(require("../configuration/customizable-compilers"));
function createTestFileCompilers(options = {}, isCompilerServiceMode) {
    return [
        new testcafe_legacy_api_1.Compiler(testcafe_hammerhead_1.default.processScript),
        new compiler_1.default(isCompilerServiceMode),
        new compiler_2.default(options[customizable_compilers_1.default.typescript], isCompilerServiceMode),
        new compiler_3.default(),
        new raw_1.default(),
    ];
}
let testFileCompilers = [];
function getTestFileCompilers() {
    if (!testFileCompilers.length)
        initTestFileCompilers();
    return testFileCompilers;
}
exports.getTestFileCompilers = getTestFileCompilers;
function initTestFileCompilers(options, isCompilerServiceMode) {
    testFileCompilers = createTestFileCompilers(options, isCompilerServiceMode);
}
exports.initTestFileCompilers = initTestFileCompilers;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbXBpbGVyL2NvbXBpbGVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSw4RUFBNkM7QUFDN0MsNkRBQXlFO0FBQ3pFLG9GQUEwRTtBQUMxRSx1RkFBaUY7QUFDakYseUZBQXFGO0FBQ3JGLGtFQUEwRDtBQUMxRCxxR0FBNEU7QUFFNUUsU0FBUyx1QkFBdUIsQ0FBRSxPQUFPLEdBQUcsRUFBRSxFQUFFLHFCQUFxQjtJQUNqRSxPQUFPO1FBQ0gsSUFBSSw4QkFBc0IsQ0FBQyw2QkFBVSxDQUFDLGFBQWEsQ0FBQztRQUNwRCxJQUFJLGtCQUFzQixDQUFDLHFCQUFxQixDQUFDO1FBQ2pELElBQUksa0JBQTBCLENBQUMsT0FBTyxDQUFDLGdDQUFxQixDQUFDLFVBQVUsQ0FBQyxFQUFFLHFCQUFxQixDQUFDO1FBQ2hHLElBQUksa0JBQTRCLEVBQUU7UUFDbEMsSUFBSSxhQUFtQixFQUFFO0tBQzVCLENBQUM7QUFDTixDQUFDO0FBRUQsSUFBSSxpQkFBaUIsR0FBRyxFQUFFLENBQUM7QUFFM0IsU0FBZ0Isb0JBQW9CO0lBQ2hDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNO1FBQ3pCLHFCQUFxQixFQUFFLENBQUM7SUFFNUIsT0FBTyxpQkFBaUIsQ0FBQztBQUM3QixDQUFDO0FBTEQsb0RBS0M7QUFFRCxTQUFnQixxQkFBcUIsQ0FBRSxPQUFPLEVBQUUscUJBQXFCO0lBQ2pFLGlCQUFpQixHQUFHLHVCQUF1QixDQUFDLE9BQU8sRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO0FBQ2hGLENBQUM7QUFGRCxzREFFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBoYW1tZXJoZWFkIGZyb20gJ3Rlc3RjYWZlLWhhbW1lcmhlYWQnO1xuaW1wb3J0IHsgQ29tcGlsZXIgYXMgTGVnYWN5VGVzdEZpbGVDb21waWxlciB9IGZyb20gJ3Rlc3RjYWZlLWxlZ2FjeS1hcGknO1xuaW1wb3J0IEVzTmV4dFRlc3RGaWxlQ29tcGlsZXIgZnJvbSAnLi90ZXN0LWZpbGUvZm9ybWF0cy9lcy1uZXh0L2NvbXBpbGVyJztcbmltcG9ydCBUeXBlU2NyaXB0VGVzdEZpbGVDb21waWxlciBmcm9tICcuL3Rlc3QtZmlsZS9mb3JtYXRzL3R5cGVzY3JpcHQvY29tcGlsZXInO1xuaW1wb3J0IENvZmZlZVNjcmlwdFRlc3RGaWxlQ29tcGlsZXIgZnJvbSAnLi90ZXN0LWZpbGUvZm9ybWF0cy9jb2ZmZWVzY3JpcHQvY29tcGlsZXInO1xuaW1wb3J0IFJhd1Rlc3RGaWxlQ29tcGlsZXIgZnJvbSAnLi90ZXN0LWZpbGUvZm9ybWF0cy9yYXcnO1xuaW1wb3J0IEN1c3RvbWl6YWJsZUNvbXBpbGVycyBmcm9tICcuLi9jb25maWd1cmF0aW9uL2N1c3RvbWl6YWJsZS1jb21waWxlcnMnO1xuXG5mdW5jdGlvbiBjcmVhdGVUZXN0RmlsZUNvbXBpbGVycyAob3B0aW9ucyA9IHt9LCBpc0NvbXBpbGVyU2VydmljZU1vZGUpIHtcbiAgICByZXR1cm4gW1xuICAgICAgICBuZXcgTGVnYWN5VGVzdEZpbGVDb21waWxlcihoYW1tZXJoZWFkLnByb2Nlc3NTY3JpcHQpLFxuICAgICAgICBuZXcgRXNOZXh0VGVzdEZpbGVDb21waWxlcihpc0NvbXBpbGVyU2VydmljZU1vZGUpLFxuICAgICAgICBuZXcgVHlwZVNjcmlwdFRlc3RGaWxlQ29tcGlsZXIob3B0aW9uc1tDdXN0b21pemFibGVDb21waWxlcnMudHlwZXNjcmlwdF0sIGlzQ29tcGlsZXJTZXJ2aWNlTW9kZSksXG4gICAgICAgIG5ldyBDb2ZmZWVTY3JpcHRUZXN0RmlsZUNvbXBpbGVyKCksXG4gICAgICAgIG5ldyBSYXdUZXN0RmlsZUNvbXBpbGVyKCksXG4gICAgXTtcbn1cblxubGV0IHRlc3RGaWxlQ29tcGlsZXJzID0gW107XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRUZXN0RmlsZUNvbXBpbGVycyAoKSB7XG4gICAgaWYgKCF0ZXN0RmlsZUNvbXBpbGVycy5sZW5ndGgpXG4gICAgICAgIGluaXRUZXN0RmlsZUNvbXBpbGVycygpO1xuXG4gICAgcmV0dXJuIHRlc3RGaWxlQ29tcGlsZXJzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdFRlc3RGaWxlQ29tcGlsZXJzIChvcHRpb25zLCBpc0NvbXBpbGVyU2VydmljZU1vZGUpIHtcbiAgICB0ZXN0RmlsZUNvbXBpbGVycyA9IGNyZWF0ZVRlc3RGaWxlQ29tcGlsZXJzKG9wdGlvbnMsIGlzQ29tcGlsZXJTZXJ2aWNlTW9kZSk7XG59XG4iXX0=