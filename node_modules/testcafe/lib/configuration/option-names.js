"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var OptionNames;
(function (OptionNames) {
    OptionNames["src"] = "src";
    OptionNames["browsers"] = "browsers";
    OptionNames["concurrency"] = "concurrency";
    OptionNames["filter"] = "filter";
    OptionNames["filterTestGrep"] = "filter.testGrep";
    OptionNames["filterFixtureGrep"] = "filter.fixtureGrep";
    OptionNames["reporter"] = "reporter";
    OptionNames["ssl"] = "ssl";
    OptionNames["speed"] = "speed";
    OptionNames["screenshots"] = "screenshots";
    OptionNames["screenshotPath"] = "screenshotPath";
    OptionNames["screenshotPathPattern"] = "screenshotPathPattern";
    OptionNames["takeScreenshotsOnFails"] = "takeScreenshotsOnFails";
    OptionNames["proxyBypass"] = "proxyBypass";
    OptionNames["appCommand"] = "appCommand";
    OptionNames["appInitDelay"] = "appInitDelay";
    OptionNames["skipJsErrors"] = "skipJsErrors";
    OptionNames["quarantineMode"] = "quarantineMode";
    OptionNames["debugMode"] = "debugMode";
    OptionNames["debugOnFail"] = "debugOnFail";
    OptionNames["skipUncaughtErrors"] = "skipUncaughtErrors";
    OptionNames["stopOnFirstFail"] = "stopOnFirstFail";
    OptionNames["selectorTimeout"] = "selectorTimeout";
    OptionNames["assertionTimeout"] = "assertionTimeout";
    OptionNames["pageLoadTimeout"] = "pageLoadTimeout";
    OptionNames["browserInitTimeout"] = "browserInitTimeout";
    OptionNames["testExecutionTimeout"] = "testExecutionTimeout";
    OptionNames["runExecutionTimeout"] = "runExecutionTimeout";
    OptionNames["videoPath"] = "videoPath";
    OptionNames["videoOptions"] = "videoOptions";
    OptionNames["videoEncodingOptions"] = "videoEncodingOptions";
    OptionNames["tsConfigPath"] = "tsConfigPath";
    OptionNames["clientScripts"] = "clientScripts";
    OptionNames["requestHooks"] = "requestHooks";
    OptionNames["retryTestPages"] = "retryTestPages";
    OptionNames["hostname"] = "hostname";
    OptionNames["port1"] = "port1";
    OptionNames["port2"] = "port2";
    OptionNames["developmentMode"] = "developmentMode";
    OptionNames["disablePageReloads"] = "disablePageReloads";
    OptionNames["disablePageCaching"] = "disablePageCaching";
    OptionNames["disableScreenshots"] = "disableScreenshots";
    OptionNames["debugLogger"] = "debugLogger";
    OptionNames["disableMultipleWindows"] = "disableMultipleWindows";
    OptionNames["disableHttp2"] = "disableHttp2";
    OptionNames["proxyless"] = "proxyless";
    OptionNames["experimentalDebug"] = "experimentalDebug";
    OptionNames["compilerOptions"] = "compilerOptions";
    OptionNames["pageRequestTimeout"] = "pageRequestTimeout";
    OptionNames["ajaxRequestTimeout"] = "ajaxRequestTimeout";
    OptionNames["cache"] = "cache";
    OptionNames["userVariables"] = "userVariables";
    OptionNames["v8Flags"] = "v8Flags";
    OptionNames["hooks"] = "hooks";
    OptionNames["dashboard"] = "dashboard";
})(OptionNames || (OptionNames = {}));
exports.default = OptionNames;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLW5hbWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZ3VyYXRpb24vb3B0aW9uLW5hbWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSyxXQXdESjtBQXhERCxXQUFLLFdBQVc7SUFDWiwwQkFBVyxDQUFBO0lBQ1gsb0NBQXFCLENBQUE7SUFDckIsMENBQTJCLENBQUE7SUFDM0IsZ0NBQWlCLENBQUE7SUFDakIsaURBQWtDLENBQUE7SUFDbEMsdURBQXdDLENBQUE7SUFDeEMsb0NBQXFCLENBQUE7SUFDckIsMEJBQVcsQ0FBQTtJQUNYLDhCQUFlLENBQUE7SUFDZiwwQ0FBMkIsQ0FBQTtJQUMzQixnREFBaUMsQ0FBQTtJQUNqQyw4REFBK0MsQ0FBQTtJQUMvQyxnRUFBaUQsQ0FBQTtJQUNqRCwwQ0FBMkIsQ0FBQTtJQUMzQix3Q0FBeUIsQ0FBQTtJQUN6Qiw0Q0FBNkIsQ0FBQTtJQUM3Qiw0Q0FBNkIsQ0FBQTtJQUM3QixnREFBaUMsQ0FBQTtJQUNqQyxzQ0FBdUIsQ0FBQTtJQUN2QiwwQ0FBMkIsQ0FBQTtJQUMzQix3REFBeUMsQ0FBQTtJQUN6QyxrREFBbUMsQ0FBQTtJQUNuQyxrREFBbUMsQ0FBQTtJQUNuQyxvREFBcUMsQ0FBQTtJQUNyQyxrREFBbUMsQ0FBQTtJQUNuQyx3REFBeUMsQ0FBQTtJQUN6Qyw0REFBNkMsQ0FBQTtJQUM3QywwREFBMkMsQ0FBQTtJQUMzQyxzQ0FBdUIsQ0FBQTtJQUN2Qiw0Q0FBNkIsQ0FBQTtJQUM3Qiw0REFBNkMsQ0FBQTtJQUM3Qyw0Q0FBNkIsQ0FBQTtJQUM3Qiw4Q0FBK0IsQ0FBQTtJQUMvQiw0Q0FBNkIsQ0FBQTtJQUM3QixnREFBaUMsQ0FBQTtJQUNqQyxvQ0FBcUIsQ0FBQTtJQUNyQiw4QkFBZSxDQUFBO0lBQ2YsOEJBQWUsQ0FBQTtJQUNmLGtEQUFtQyxDQUFBO0lBQ25DLHdEQUF5QyxDQUFBO0lBQ3pDLHdEQUF5QyxDQUFBO0lBQ3pDLHdEQUF5QyxDQUFBO0lBQ3pDLDBDQUEyQixDQUFBO0lBQzNCLGdFQUFpRCxDQUFBO0lBQ2pELDRDQUE2QixDQUFBO0lBQzdCLHNDQUF1QixDQUFBO0lBQ3ZCLHNEQUF1QyxDQUFBO0lBQ3ZDLGtEQUFtQyxDQUFBO0lBQ25DLHdEQUF5QyxDQUFBO0lBQ3pDLHdEQUF5QyxDQUFBO0lBQ3pDLDhCQUFlLENBQUE7SUFDZiw4Q0FBK0IsQ0FBQTtJQUMvQixrQ0FBbUIsQ0FBQTtJQUNuQiw4QkFBZSxDQUFBO0lBQ2Ysc0NBQXVCLENBQUE7QUFDM0IsQ0FBQyxFQXhESSxXQUFXLEtBQVgsV0FBVyxRQXdEZjtBQUVELGtCQUFlLFdBQVcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImVudW0gT3B0aW9uTmFtZXMge1xuICAgIHNyYyA9ICdzcmMnLFxuICAgIGJyb3dzZXJzID0gJ2Jyb3dzZXJzJyxcbiAgICBjb25jdXJyZW5jeSA9ICdjb25jdXJyZW5jeScsXG4gICAgZmlsdGVyID0gJ2ZpbHRlcicsXG4gICAgZmlsdGVyVGVzdEdyZXAgPSAnZmlsdGVyLnRlc3RHcmVwJyxcbiAgICBmaWx0ZXJGaXh0dXJlR3JlcCA9ICdmaWx0ZXIuZml4dHVyZUdyZXAnLFxuICAgIHJlcG9ydGVyID0gJ3JlcG9ydGVyJyxcbiAgICBzc2wgPSAnc3NsJyxcbiAgICBzcGVlZCA9ICdzcGVlZCcsXG4gICAgc2NyZWVuc2hvdHMgPSAnc2NyZWVuc2hvdHMnLFxuICAgIHNjcmVlbnNob3RQYXRoID0gJ3NjcmVlbnNob3RQYXRoJyxcbiAgICBzY3JlZW5zaG90UGF0aFBhdHRlcm4gPSAnc2NyZWVuc2hvdFBhdGhQYXR0ZXJuJyxcbiAgICB0YWtlU2NyZWVuc2hvdHNPbkZhaWxzID0gJ3Rha2VTY3JlZW5zaG90c09uRmFpbHMnLFxuICAgIHByb3h5QnlwYXNzID0gJ3Byb3h5QnlwYXNzJyxcbiAgICBhcHBDb21tYW5kID0gJ2FwcENvbW1hbmQnLFxuICAgIGFwcEluaXREZWxheSA9ICdhcHBJbml0RGVsYXknLFxuICAgIHNraXBKc0Vycm9ycyA9ICdza2lwSnNFcnJvcnMnLFxuICAgIHF1YXJhbnRpbmVNb2RlID0gJ3F1YXJhbnRpbmVNb2RlJyxcbiAgICBkZWJ1Z01vZGUgPSAnZGVidWdNb2RlJyxcbiAgICBkZWJ1Z09uRmFpbCA9ICdkZWJ1Z09uRmFpbCcsXG4gICAgc2tpcFVuY2F1Z2h0RXJyb3JzID0gJ3NraXBVbmNhdWdodEVycm9ycycsXG4gICAgc3RvcE9uRmlyc3RGYWlsID0gJ3N0b3BPbkZpcnN0RmFpbCcsXG4gICAgc2VsZWN0b3JUaW1lb3V0ID0gJ3NlbGVjdG9yVGltZW91dCcsXG4gICAgYXNzZXJ0aW9uVGltZW91dCA9ICdhc3NlcnRpb25UaW1lb3V0JyxcbiAgICBwYWdlTG9hZFRpbWVvdXQgPSAncGFnZUxvYWRUaW1lb3V0JyxcbiAgICBicm93c2VySW5pdFRpbWVvdXQgPSAnYnJvd3NlckluaXRUaW1lb3V0JyxcbiAgICB0ZXN0RXhlY3V0aW9uVGltZW91dCA9ICd0ZXN0RXhlY3V0aW9uVGltZW91dCcsXG4gICAgcnVuRXhlY3V0aW9uVGltZW91dCA9ICdydW5FeGVjdXRpb25UaW1lb3V0JyxcbiAgICB2aWRlb1BhdGggPSAndmlkZW9QYXRoJyxcbiAgICB2aWRlb09wdGlvbnMgPSAndmlkZW9PcHRpb25zJyxcbiAgICB2aWRlb0VuY29kaW5nT3B0aW9ucyA9ICd2aWRlb0VuY29kaW5nT3B0aW9ucycsXG4gICAgdHNDb25maWdQYXRoID0gJ3RzQ29uZmlnUGF0aCcsXG4gICAgY2xpZW50U2NyaXB0cyA9ICdjbGllbnRTY3JpcHRzJyxcbiAgICByZXF1ZXN0SG9va3MgPSAncmVxdWVzdEhvb2tzJyxcbiAgICByZXRyeVRlc3RQYWdlcyA9ICdyZXRyeVRlc3RQYWdlcycsXG4gICAgaG9zdG5hbWUgPSAnaG9zdG5hbWUnLFxuICAgIHBvcnQxID0gJ3BvcnQxJyxcbiAgICBwb3J0MiA9ICdwb3J0MicsXG4gICAgZGV2ZWxvcG1lbnRNb2RlID0gJ2RldmVsb3BtZW50TW9kZScsXG4gICAgZGlzYWJsZVBhZ2VSZWxvYWRzID0gJ2Rpc2FibGVQYWdlUmVsb2FkcycsXG4gICAgZGlzYWJsZVBhZ2VDYWNoaW5nID0gJ2Rpc2FibGVQYWdlQ2FjaGluZycsXG4gICAgZGlzYWJsZVNjcmVlbnNob3RzID0gJ2Rpc2FibGVTY3JlZW5zaG90cycsXG4gICAgZGVidWdMb2dnZXIgPSAnZGVidWdMb2dnZXInLFxuICAgIGRpc2FibGVNdWx0aXBsZVdpbmRvd3MgPSAnZGlzYWJsZU11bHRpcGxlV2luZG93cycsXG4gICAgZGlzYWJsZUh0dHAyID0gJ2Rpc2FibGVIdHRwMicsXG4gICAgcHJveHlsZXNzID0gJ3Byb3h5bGVzcycsXG4gICAgZXhwZXJpbWVudGFsRGVidWcgPSAnZXhwZXJpbWVudGFsRGVidWcnLFxuICAgIGNvbXBpbGVyT3B0aW9ucyA9ICdjb21waWxlck9wdGlvbnMnLFxuICAgIHBhZ2VSZXF1ZXN0VGltZW91dCA9ICdwYWdlUmVxdWVzdFRpbWVvdXQnLFxuICAgIGFqYXhSZXF1ZXN0VGltZW91dCA9ICdhamF4UmVxdWVzdFRpbWVvdXQnLFxuICAgIGNhY2hlID0gJ2NhY2hlJyxcbiAgICB1c2VyVmFyaWFibGVzID0gJ3VzZXJWYXJpYWJsZXMnLFxuICAgIHY4RmxhZ3MgPSAndjhGbGFncycsXG4gICAgaG9va3MgPSAnaG9va3MnLFxuICAgIGRhc2hib2FyZCA9ICdkYXNoYm9hcmQnLFxufVxuXG5leHBvcnQgZGVmYXVsdCBPcHRpb25OYW1lcztcbiJdfQ==