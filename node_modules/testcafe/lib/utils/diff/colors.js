"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setColors = exports.colorLines = exports.DIFF_COLORS = void 0;
const lodash_1 = require("lodash");
exports.DIFF_COLORS = {
    DIFF_ADDED: 'diff-added',
    DIFF_REMOVED: 'diff-removed',
    DIFF_NOT_MODIFIED: 'diff-not-modified',
};
function color(name, str) {
    return `<span class="${name}">${lodash_1.escape(str)}</span>`;
}
function colorLines(name, str) {
    return str
        .split('\n')
        .map((line) => {
        return color(name, line);
    })
        .join('\n');
}
exports.colorLines = colorLines;
function setColors(line) {
    if (line[0] === '+')
        return colorLines(exports.DIFF_COLORS.DIFF_ADDED, line);
    if (line[0] === '-')
        return colorLines(exports.DIFF_COLORS.DIFF_REMOVED, line);
    return colorLines(exports.DIFF_COLORS.DIFF_NOT_MODIFIED, line);
}
exports.setColors = setColors;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2RpZmYvY29sb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG1DQUE4QztBQUVqQyxRQUFBLFdBQVcsR0FBRztJQUN2QixVQUFVLEVBQVMsWUFBWTtJQUMvQixZQUFZLEVBQU8sY0FBYztJQUNqQyxpQkFBaUIsRUFBRSxtQkFBbUI7Q0FDekMsQ0FBQztBQUVGLFNBQVMsS0FBSyxDQUFFLElBQVksRUFBRSxHQUFXO0lBQ3JDLE9BQU8sZ0JBQWdCLElBQUksS0FBSyxlQUFVLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUM3RCxDQUFDO0FBRUQsU0FBZ0IsVUFBVSxDQUFFLElBQVksRUFBRSxHQUFXO0lBQ2pELE9BQU8sR0FBRztTQUNMLEtBQUssQ0FBQyxJQUFJLENBQUM7U0FDWCxHQUFHLENBQUMsQ0FBQyxJQUFZLEVBQVUsRUFBRTtRQUMxQixPQUFPLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQyxDQUFDO1NBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3BCLENBQUM7QUFQRCxnQ0FPQztBQUVELFNBQWdCLFNBQVMsQ0FBRSxJQUFZO0lBQ25DLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUc7UUFDZixPQUFPLFVBQVUsQ0FBQyxtQkFBVyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUVwRCxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHO1FBQ2YsT0FBTyxVQUFVLENBQUMsbUJBQVcsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFdEQsT0FBTyxVQUFVLENBQUMsbUJBQVcsQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzRCxDQUFDO0FBUkQsOEJBUUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlc2NhcGUgYXMgZXNjYXBlSFRNTCB9IGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjb25zdCBESUZGX0NPTE9SUyA9IHtcbiAgICBESUZGX0FEREVEOiAgICAgICAgJ2RpZmYtYWRkZWQnLFxuICAgIERJRkZfUkVNT1ZFRDogICAgICAnZGlmZi1yZW1vdmVkJyxcbiAgICBESUZGX05PVF9NT0RJRklFRDogJ2RpZmYtbm90LW1vZGlmaWVkJyxcbn07XG5cbmZ1bmN0aW9uIGNvbG9yIChuYW1lOiBzdHJpbmcsIHN0cjogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYDxzcGFuIGNsYXNzPVwiJHtuYW1lfVwiPiR7ZXNjYXBlSFRNTChzdHIpfTwvc3Bhbj5gO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29sb3JMaW5lcyAobmFtZTogc3RyaW5nLCBzdHI6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAuc3BsaXQoJ1xcbicpXG4gICAgICAgIC5tYXAoKGxpbmU6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gICAgICAgICAgICByZXR1cm4gY29sb3IobmFtZSwgbGluZSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5qb2luKCdcXG4nKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldENvbG9ycyAobGluZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBpZiAobGluZVswXSA9PT0gJysnKVxuICAgICAgICByZXR1cm4gY29sb3JMaW5lcyhESUZGX0NPTE9SUy5ESUZGX0FEREVELCBsaW5lKTtcblxuICAgIGlmIChsaW5lWzBdID09PSAnLScpXG4gICAgICAgIHJldHVybiBjb2xvckxpbmVzKERJRkZfQ09MT1JTLkRJRkZfUkVNT1ZFRCwgbGluZSk7XG5cbiAgICByZXR1cm4gY29sb3JMaW5lcyhESUZGX0NPTE9SUy5ESUZGX05PVF9NT0RJRklFRCwgbGluZSk7XG59XG4iXX0=