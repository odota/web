"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.processReporterName = exports.isReporterPluginFactory = exports.getPluginFactory = exports.requireReporterPluginFactory = void 0;
const runtime_1 = require("../errors/runtime");
const types_1 = require("../errors/types");
function requireReporterPluginFactory(reporterName) {
    try {
        return require('testcafe-reporter-' + reporterName);
    }
    catch (err) {
        throw new runtime_1.GeneralError(types_1.RUNTIME_ERRORS.cannotFindReporterForAlias, reporterName);
    }
}
exports.requireReporterPluginFactory = requireReporterPluginFactory;
function getPluginFactory(reporterFactorySource) {
    if (!isReporterPluginFactory(reporterFactorySource))
        return requireReporterPluginFactory(reporterFactorySource);
    return reporterFactorySource;
}
exports.getPluginFactory = getPluginFactory;
function isReporterPluginFactory(value) {
    return typeof value === 'function';
}
exports.isReporterPluginFactory = isReporterPluginFactory;
function processReporterName(value) {
    if (isReporterPluginFactory(value))
        return value.name || 'function () {}';
    return value;
}
exports.processReporterName = processReporterName;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvcmVwb3J0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsK0NBQWlEO0FBQ2pELDJDQUFpRDtBQUVqRCxTQUFnQiw0QkFBNEIsQ0FBRSxZQUFvQjtJQUM5RCxJQUFJO1FBQ0EsT0FBTyxPQUFPLENBQUMsb0JBQW9CLEdBQUcsWUFBWSxDQUFDLENBQUM7S0FDdkQ7SUFDRCxPQUFPLEdBQUcsRUFBRTtRQUNSLE1BQU0sSUFBSSxzQkFBWSxDQUFDLHNCQUFjLENBQUMsMEJBQTBCLEVBQUUsWUFBWSxDQUFDLENBQUM7S0FDbkY7QUFDTCxDQUFDO0FBUEQsb0VBT0M7QUFFRCxTQUFnQixnQkFBZ0IsQ0FBRSxxQkFBcUQ7SUFDbkYsSUFBSSxDQUFDLHVCQUF1QixDQUFDLHFCQUFxQixDQUFDO1FBQy9DLE9BQU8sNEJBQTRCLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUUvRCxPQUFPLHFCQUFxQixDQUFDO0FBQ2pDLENBQUM7QUFMRCw0Q0FLQztBQUVELFNBQWdCLHVCQUF1QixDQUFFLEtBQXdCO0lBQzdELE9BQU8sT0FBTyxLQUFLLEtBQUssVUFBVSxDQUFDO0FBQ3ZDLENBQUM7QUFGRCwwREFFQztBQUVELFNBQWdCLG1CQUFtQixDQUFFLEtBQXFDO0lBQ3RFLElBQUksdUJBQXVCLENBQUMsS0FBSyxDQUFDO1FBQzlCLE9BQU8sS0FBSyxDQUFDLElBQUksSUFBSSxnQkFBZ0IsQ0FBQztJQUUxQyxPQUFPLEtBQUssQ0FBQztBQUNqQixDQUFDO0FBTEQsa0RBS0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXBvcnRlclBsdWdpbkZhY3RvcnkgfSBmcm9tICcuLi9yZXBvcnRlci9pbnRlcmZhY2VzJztcbmltcG9ydCB7IEdlbmVyYWxFcnJvciB9IGZyb20gJy4uL2Vycm9ycy9ydW50aW1lJztcbmltcG9ydCB7IFJVTlRJTUVfRVJST1JTIH0gZnJvbSAnLi4vZXJyb3JzL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVSZXBvcnRlclBsdWdpbkZhY3RvcnkgKHJlcG9ydGVyTmFtZTogc3RyaW5nKTogUmVwb3J0ZXJQbHVnaW5GYWN0b3J5IHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZSgndGVzdGNhZmUtcmVwb3J0ZXItJyArIHJlcG9ydGVyTmFtZSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEdlbmVyYWxFcnJvcihSVU5USU1FX0VSUk9SUy5jYW5ub3RGaW5kUmVwb3J0ZXJGb3JBbGlhcywgcmVwb3J0ZXJOYW1lKTtcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQbHVnaW5GYWN0b3J5IChyZXBvcnRlckZhY3RvcnlTb3VyY2U6IHN0cmluZyB8IFJlcG9ydGVyUGx1Z2luRmFjdG9yeSk6IFJlcG9ydGVyUGx1Z2luRmFjdG9yeSB7XG4gICAgaWYgKCFpc1JlcG9ydGVyUGx1Z2luRmFjdG9yeShyZXBvcnRlckZhY3RvcnlTb3VyY2UpKVxuICAgICAgICByZXR1cm4gcmVxdWlyZVJlcG9ydGVyUGx1Z2luRmFjdG9yeShyZXBvcnRlckZhY3RvcnlTb3VyY2UpO1xuXG4gICAgcmV0dXJuIHJlcG9ydGVyRmFjdG9yeVNvdXJjZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVwb3J0ZXJQbHVnaW5GYWN0b3J5ICh2YWx1ZTogc3RyaW5nIHwgRnVuY3Rpb24pOiB2YWx1ZSBpcyBSZXBvcnRlclBsdWdpbkZhY3Rvcnkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbic7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzUmVwb3J0ZXJOYW1lICh2YWx1ZTogc3RyaW5nIHwgUmVwb3J0ZXJQbHVnaW5GYWN0b3J5KTogc3RyaW5nIHtcbiAgICBpZiAoaXNSZXBvcnRlclBsdWdpbkZhY3RvcnkodmFsdWUpKVxuICAgICAgICByZXR1cm4gdmFsdWUubmFtZSB8fCAnZnVuY3Rpb24gKCkge30nO1xuXG4gICAgcmV0dXJuIHZhbHVlO1xufVxuIl19