"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isArrayOfNodes = exports.castToArray = exports.isNodeCollection = exports.visible = void 0;
const index_1 = __importDefault(require("..//adapter/index"));
function visible(el) {
    if (!index_1.default.isDomElement(el) && !index_1.default.isTextNode(el))
        return false;
    if (index_1.default.isOptionElement(el) || index_1.default.getTagName(el) === 'optgroup')
        return index_1.default.isOptionElementVisible(el);
    return index_1.default.isElementVisible(el);
}
exports.visible = visible;
function isNodeCollection(obj) {
    return obj instanceof index_1.default.nativeMethods.HTMLCollection || obj instanceof index_1.default.nativeMethods.NodeList;
}
exports.isNodeCollection = isNodeCollection;
function castToArray(list) {
    const length = list.length;
    const result = [];
    for (let i = 0; i < length; i++)
        result.push(list[i]);
    return result;
}
exports.castToArray = castToArray;
function isArrayOfNodes(obj) {
    if (!index_1.default.nativeMethods.isArray(obj))
        return false;
    for (let i = 0; i < obj.length; i++) {
        if (!(obj[i] instanceof index_1.default.nativeMethods.Node))
            return false;
    }
    return true;
}
exports.isArrayOfNodes = isArrayOfNodes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvY2xpZW50L2RyaXZlci9jb21tYW5kLWV4ZWN1dG9ycy9jbGllbnQtZnVuY3Rpb25zL3NlbGVjdG9yLWV4ZWN1dG9yL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDhEQUF3QztBQUd4QyxTQUFnQixPQUFPLENBQUUsRUFBUTtJQUM3QixJQUFJLENBQUMsZUFBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQU8sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDO1FBQ3BELE9BQU8sS0FBSyxDQUFDO0lBRWpCLElBQUksZUFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsSUFBSSxlQUFPLENBQUMsVUFBVSxDQUFDLEVBQWEsQ0FBQyxLQUFLLFVBQVU7UUFDL0UsT0FBTyxlQUFPLENBQUMsc0JBQXNCLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFOUMsT0FBTyxlQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDeEMsQ0FBQztBQVJELDBCQVFDO0FBRUQsU0FBZ0IsZ0JBQWdCLENBQUUsR0FBWTtJQUMxQyxPQUFPLEdBQUcsWUFBWSxlQUFPLENBQUMsYUFBYSxDQUFDLGNBQWMsSUFBSSxHQUFHLFlBQVksZUFBTyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUM7QUFDaEgsQ0FBQztBQUZELDRDQUVDO0FBRUQsU0FBZ0IsV0FBVyxDQUFFLElBQStCO0lBQ3hELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDM0IsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBRWxCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLEVBQUUsQ0FBQyxFQUFFO1FBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFekIsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQztBQVJELGtDQVFDO0FBRUQsU0FBZ0IsY0FBYyxDQUFFLEdBQVk7SUFDeEMsSUFBSSxDQUFDLGVBQU8sQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUNuQyxPQUFPLEtBQUssQ0FBQztJQUVqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNqQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLFlBQVksZUFBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUM7WUFDL0MsT0FBTyxLQUFLLENBQUM7S0FDcEI7SUFFRCxPQUFPLElBQUksQ0FBQztBQUNoQixDQUFDO0FBVkQsd0NBVUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWRhcHRlciBmcm9tICcuLi8vYWRhcHRlci9pbmRleCc7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIHZpc2libGUgKGVsOiBOb2RlKTogYm9vbGVhbiB7XG4gICAgaWYgKCFhZGFwdGVyLmlzRG9tRWxlbWVudChlbCkgJiYgIWFkYXB0ZXIuaXNUZXh0Tm9kZShlbCkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcblxuICAgIGlmIChhZGFwdGVyLmlzT3B0aW9uRWxlbWVudChlbCkgfHwgYWRhcHRlci5nZXRUYWdOYW1lKGVsIGFzIEVsZW1lbnQpID09PSAnb3B0Z3JvdXAnKVxuICAgICAgICByZXR1cm4gYWRhcHRlci5pc09wdGlvbkVsZW1lbnRWaXNpYmxlKGVsKTtcblxuICAgIHJldHVybiBhZGFwdGVyLmlzRWxlbWVudFZpc2libGUoZWwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNOb2RlQ29sbGVjdGlvbiAob2JqOiB1bmtub3duKTogb2JqIGlzIEhUTUxDb2xsZWN0aW9uIHwgTm9kZUxpc3Qge1xuICAgIHJldHVybiBvYmogaW5zdGFuY2VvZiBhZGFwdGVyLm5hdGl2ZU1ldGhvZHMuSFRNTENvbGxlY3Rpb24gfHwgb2JqIGluc3RhbmNlb2YgYWRhcHRlci5uYXRpdmVNZXRob2RzLk5vZGVMaXN0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FzdFRvQXJyYXkgKGxpc3Q6IEhUTUxDb2xsZWN0aW9uIHwgTm9kZUxpc3QpOiBOb2RlW10ge1xuICAgIGNvbnN0IGxlbmd0aCA9IGxpc3QubGVuZ3RoO1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKylcbiAgICAgICAgcmVzdWx0LnB1c2gobGlzdFtpXSk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheU9mTm9kZXMgKG9iajogdW5rbm93bik6IG9iaiBpcyBOb2RlW10ge1xuICAgIGlmICghYWRhcHRlci5uYXRpdmVNZXRob2RzLmlzQXJyYXkob2JqKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvYmoubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKCEob2JqW2ldIGluc3RhbmNlb2YgYWRhcHRlci5uYXRpdmVNZXRob2RzLk5vZGUpKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xufVxuIl19