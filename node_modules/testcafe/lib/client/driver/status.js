"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assignable_1 = __importDefault(require("../../utils/assignable"));
const generate_id_1 = __importDefault(require("./generate-id"));
class DriverStatus extends assignable_1.default {
    constructor(obj) {
        super(obj);
        this.id = generate_id_1.default();
        this.isCommandResult = false;
        this.executionError = null;
        this.pageError = null;
        this.resent = false;
        this.result = null;
        this.consoleMessages = null;
        this.isPendingWindowSwitching = false;
        this.isObservingFileDownloadingInNewWindow = false;
        this.isFirstRequestAfterWindowSwitching = false;
        this.debug = '';
        this._assignFrom(obj, true);
    }
    _getAssignableProperties() {
        return [
            { name: 'isCommandResult' },
            { name: 'executionError' },
            { name: 'pageError' },
            { name: 'result' },
            { name: 'consoleMessages' },
            { name: 'isPendingWindowSwitching' },
            { name: 'isObservingFileDownloadingInNewWindow' },
            { name: 'isFirstRequestAfterWindowSwitching' },
        ];
    }
}
exports.default = DriverStatus;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdHVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NsaWVudC9kcml2ZXIvc3RhdHVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsd0VBQWdEO0FBQ2hELGdFQUF1QztBQUd2QyxNQUFxQixZQUFhLFNBQVEsb0JBQVU7SUFDaEQsWUFBYSxHQUFHO1FBQ1osS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRVgsSUFBSSxDQUFDLEVBQUUsR0FBc0MscUJBQVUsRUFBRSxDQUFDO1FBQzFELElBQUksQ0FBQyxlQUFlLEdBQXlCLEtBQUssQ0FBQztRQUNuRCxJQUFJLENBQUMsY0FBYyxHQUEwQixJQUFJLENBQUM7UUFDbEQsSUFBSSxDQUFDLFNBQVMsR0FBK0IsSUFBSSxDQUFDO1FBQ2xELElBQUksQ0FBQyxNQUFNLEdBQWtDLEtBQUssQ0FBQztRQUNuRCxJQUFJLENBQUMsTUFBTSxHQUFrQyxJQUFJLENBQUM7UUFDbEQsSUFBSSxDQUFDLGVBQWUsR0FBeUIsSUFBSSxDQUFDO1FBQ2xELElBQUksQ0FBQyx3QkFBd0IsR0FBZ0IsS0FBSyxDQUFDO1FBQ25ELElBQUksQ0FBQyxxQ0FBcUMsR0FBRyxLQUFLLENBQUM7UUFDbkQsSUFBSSxDQUFDLGtDQUFrQyxHQUFNLEtBQUssQ0FBQztRQUNuRCxJQUFJLENBQUMsS0FBSyxHQUFtQyxFQUFFLENBQUM7UUFFaEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELHdCQUF3QjtRQUNwQixPQUFPO1lBQ0gsRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUU7WUFDM0IsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUU7WUFDMUIsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFO1lBQ3JCLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRTtZQUNsQixFQUFFLElBQUksRUFBRSxpQkFBaUIsRUFBRTtZQUMzQixFQUFFLElBQUksRUFBRSwwQkFBMEIsRUFBRTtZQUNwQyxFQUFFLElBQUksRUFBRSx1Q0FBdUMsRUFBRTtZQUNqRCxFQUFFLElBQUksRUFBRSxvQ0FBb0MsRUFBRTtTQUNqRCxDQUFDO0lBQ04sQ0FBQztDQUNKO0FBL0JELCtCQStCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBc3NpZ25hYmxlIGZyb20gJy4uLy4uL3V0aWxzL2Fzc2lnbmFibGUnO1xuaW1wb3J0IGdlbmVyYXRlSWQgZnJvbSAnLi9nZW5lcmF0ZS1pZCc7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHJpdmVyU3RhdHVzIGV4dGVuZHMgQXNzaWduYWJsZSB7XG4gICAgY29uc3RydWN0b3IgKG9iaikge1xuICAgICAgICBzdXBlcihvYmopO1xuXG4gICAgICAgIHRoaXMuaWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9IGdlbmVyYXRlSWQoKTtcbiAgICAgICAgdGhpcy5pc0NvbW1hbmRSZXN1bHQgICAgICAgICAgICAgICAgICAgICAgID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZXhlY3V0aW9uRXJyb3IgICAgICAgICAgICAgICAgICAgICAgICA9IG51bGw7XG4gICAgICAgIHRoaXMucGFnZUVycm9yICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9IG51bGw7XG4gICAgICAgIHRoaXMucmVzZW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9IGZhbHNlO1xuICAgICAgICB0aGlzLnJlc3VsdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSBudWxsO1xuICAgICAgICB0aGlzLmNvbnNvbGVNZXNzYWdlcyAgICAgICAgICAgICAgICAgICAgICAgPSBudWxsO1xuICAgICAgICB0aGlzLmlzUGVuZGluZ1dpbmRvd1N3aXRjaGluZyAgICAgICAgICAgICAgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pc09ic2VydmluZ0ZpbGVEb3dubG9hZGluZ0luTmV3V2luZG93ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNGaXJzdFJlcXVlc3RBZnRlcldpbmRvd1N3aXRjaGluZyAgICA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRlYnVnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPSAnJztcblxuICAgICAgICB0aGlzLl9hc3NpZ25Gcm9tKG9iaiwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgX2dldEFzc2lnbmFibGVQcm9wZXJ0aWVzICgpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHsgbmFtZTogJ2lzQ29tbWFuZFJlc3VsdCcgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ2V4ZWN1dGlvbkVycm9yJyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAncGFnZUVycm9yJyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAncmVzdWx0JyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnY29uc29sZU1lc3NhZ2VzJyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnaXNQZW5kaW5nV2luZG93U3dpdGNoaW5nJyB9LFxuICAgICAgICAgICAgeyBuYW1lOiAnaXNPYnNlcnZpbmdGaWxlRG93bmxvYWRpbmdJbk5ld1dpbmRvdycgfSxcbiAgICAgICAgICAgIHsgbmFtZTogJ2lzRmlyc3RSZXF1ZXN0QWZ0ZXJXaW5kb3dTd2l0Y2hpbmcnIH0sXG4gICAgICAgIF07XG4gICAgfVxufVxuIl19