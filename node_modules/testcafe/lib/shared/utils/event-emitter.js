"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const adapter_1 = require("../adapter");
class EventEmitter {
    constructor() {
        this._eventsListeners = {};
    }
    on(evt, listener) {
        if (!this._eventsListeners[evt])
            this._eventsListeners[evt] = [];
        this._eventsListeners[evt].push(listener);
    }
    once(evt, listener) {
        this.on(evt, (...args) => {
            this.off(evt, listener);
            return listener(...args);
        });
    }
    off(evt, listener) {
        const listeners = this._eventsListeners[evt];
        if (listeners)
            this._eventsListeners[evt] = adapter_1.adapter.nativeMethods.arrayFilter.call(listeners, item => item !== listener);
    }
    offAll(evt) {
        if (evt)
            this._eventsListeners[evt] = [];
        else
            this._eventsListeners = {};
    }
    emit(evt, ...args) {
        const listeners = this._eventsListeners[evt];
        if (!listeners)
            return;
        for (let i = 0; i < listeners.length; i++) {
            try {
                listeners[i].apply(this, args);
            }
            catch (e) {
                // Hack for IE: after document.write calling IFrameSandbox event handlers
                // rises 'Can't execute code from a freed script' exception because document has been
                // recreated
                if (e.message && e.message.indexOf('freed script') > -1)
                    this.off(evt, listeners[i]);
                else
                    throw e;
            }
        }
    }
}
exports.default = EventEmitter;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQtZW1pdHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaGFyZWQvdXRpbHMvZXZlbnQtZW1pdHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdDQUFxQztBQU1yQyxNQUFxQixZQUFZO0lBRzdCO1FBQ0ksSUFBSSxDQUFDLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRU0sRUFBRSxDQUFFLEdBQVcsRUFBRSxRQUFrQjtRQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQztZQUMzQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBRXBDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVNLElBQUksQ0FBRSxHQUFXLEVBQUUsUUFBa0I7UUFDeEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBRXhCLE9BQU8sUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU0sR0FBRyxDQUFFLEdBQVcsRUFBRSxRQUFrQjtRQUN2QyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFN0MsSUFBSSxTQUFTO1lBQ1QsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxHQUFHLGlCQUFPLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDO0lBQ2xILENBQUM7SUFFTSxNQUFNLENBQUUsR0FBWTtRQUN2QixJQUFJLEdBQUc7WUFDSCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDOztZQUVoQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0lBQ25DLENBQUM7SUFFTSxJQUFJLENBQUUsR0FBVyxFQUFFLEdBQUcsSUFBUztRQUNsQyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFN0MsSUFBSSxDQUFDLFNBQVM7WUFDVixPQUFPO1FBRVgsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDdkMsSUFBSTtnQkFDQSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQzthQUNsQztZQUNELE9BQU8sQ0FBQyxFQUFFO2dCQUNOLHlFQUF5RTtnQkFDekUscUZBQXFGO2dCQUNyRixZQUFZO2dCQUNaLElBQUksQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBQ25ELElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDOztvQkFFNUIsTUFBTSxDQUFDLENBQUM7YUFDZjtTQUNKO0lBQ0wsQ0FBQztDQUNKO0FBekRELCtCQXlEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkYXB0ZXIgfSBmcm9tICcuLi9hZGFwdGVyJztcbmltcG9ydCB7IERpY3Rpb25hcnkgfSBmcm9tICcuLi8uLi9jb25maWd1cmF0aW9uL2ludGVyZmFjZXMnO1xuXG5cbnR5cGUgTGlzdGVuZXIgPSAoLi4uYXJnczogYW55W10pID0+IHZvaWQ7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV2ZW50RW1pdHRlciB7XG4gICAgcHJpdmF0ZSBfZXZlbnRzTGlzdGVuZXJzOiBEaWN0aW9uYXJ5PExpc3RlbmVyW10+O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yICgpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRzTGlzdGVuZXJzID0ge307XG4gICAgfVxuXG4gICAgcHVibGljIG9uIChldnQ6IHN0cmluZywgbGlzdGVuZXI6IExpc3RlbmVyKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5fZXZlbnRzTGlzdGVuZXJzW2V2dF0pXG4gICAgICAgICAgICB0aGlzLl9ldmVudHNMaXN0ZW5lcnNbZXZ0XSA9IFtdO1xuXG4gICAgICAgIHRoaXMuX2V2ZW50c0xpc3RlbmVyc1tldnRdLnB1c2gobGlzdGVuZXIpO1xuICAgIH1cblxuICAgIHB1YmxpYyBvbmNlIChldnQ6IHN0cmluZywgbGlzdGVuZXI6IExpc3RlbmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMub24oZXZ0LCAoLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgdGhpcy5vZmYoZXZ0LCBsaXN0ZW5lcik7XG5cbiAgICAgICAgICAgIHJldHVybiBsaXN0ZW5lciguLi5hcmdzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIG9mZiAoZXZ0OiBzdHJpbmcsIGxpc3RlbmVyOiBMaXN0ZW5lcik6IHZvaWQge1xuICAgICAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHNMaXN0ZW5lcnNbZXZ0XTtcblxuICAgICAgICBpZiAobGlzdGVuZXJzKVxuICAgICAgICAgICAgdGhpcy5fZXZlbnRzTGlzdGVuZXJzW2V2dF0gPSBhZGFwdGVyLm5hdGl2ZU1ldGhvZHMuYXJyYXlGaWx0ZXIuY2FsbChsaXN0ZW5lcnMsIGl0ZW0gPT4gaXRlbSAhPT0gbGlzdGVuZXIpO1xuICAgIH1cblxuICAgIHB1YmxpYyBvZmZBbGwgKGV2dD86IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBpZiAoZXZ0KVxuICAgICAgICAgICAgdGhpcy5fZXZlbnRzTGlzdGVuZXJzW2V2dF0gPSBbXTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgdGhpcy5fZXZlbnRzTGlzdGVuZXJzID0ge307XG4gICAgfVxuXG4gICAgcHVibGljIGVtaXQgKGV2dDogc3RyaW5nLCAuLi5hcmdzOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRzTGlzdGVuZXJzW2V2dF07XG5cbiAgICAgICAgaWYgKCFsaXN0ZW5lcnMpXG4gICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAvLyBIYWNrIGZvciBJRTogYWZ0ZXIgZG9jdW1lbnQud3JpdGUgY2FsbGluZyBJRnJhbWVTYW5kYm94IGV2ZW50IGhhbmRsZXJzXG4gICAgICAgICAgICAgICAgLy8gcmlzZXMgJ0Nhbid0IGV4ZWN1dGUgY29kZSBmcm9tIGEgZnJlZWQgc2NyaXB0JyBleGNlcHRpb24gYmVjYXVzZSBkb2N1bWVudCBoYXMgYmVlblxuICAgICAgICAgICAgICAgIC8vIHJlY3JlYXRlZFxuICAgICAgICAgICAgICAgIGlmIChlLm1lc3NhZ2UgJiYgZS5tZXNzYWdlLmluZGV4T2YoJ2ZyZWVkIHNjcmlwdCcpID4gLTEpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub2ZmKGV2dCwgbGlzdGVuZXJzW2ldKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=