"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class AxisValues {
    constructor(x, y) {
        this.x = x;
        this.y = y;
    }
    static create(a) {
        if ('left' in a)
            return new AxisValues(a.left, a.top);
        else if ('right' in a)
            return new AxisValues(a.right, a.bottom);
        return new AxisValues(a.x, a.y);
    }
    add(p) {
        this.x += p.x;
        this.y += p.y;
        return this;
    }
    sub(p) {
        this.x -= p.x;
        this.y -= p.y;
        return this;
    }
    round(fn = Math.round) {
        this.x = fn(this.x);
        this.y = fn(this.y);
        return this;
    }
    eql(p) {
        return this.x === p.x && this.y === p.y;
    }
    mul(n) {
        this.x *= n;
        this.y *= n;
        return this;
    }
    distance(p) {
        return Math.sqrt(Math.pow(this.x - p.x, 2) + Math.pow(this.y - p.y, 2));
    }
}
exports.default = AxisValues;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXhpcy12YWx1ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvc2hhcmVkL3V0aWxzL3ZhbHVlcy9heGlzLXZhbHVlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQWVBLE1BQXFCLFVBQVU7SUFJM0IsWUFBb0IsQ0FBSSxFQUFFLENBQUk7UUFDMUIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNmLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFLLENBQThEO1FBQ25GLElBQUksTUFBTSxJQUFJLENBQUM7WUFDWCxPQUFPLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ3BDLElBQUksT0FBTyxJQUFJLENBQUM7WUFDakIsT0FBTyxJQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUU3QyxPQUFPLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFTSxHQUFHLENBQTRCLENBQXlCO1FBQzNELElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVkLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxHQUFHLENBQTRCLENBQXlCO1FBQzNELElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVkLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxLQUFLLENBQTRCLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSztRQUNuRCxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXBCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxHQUFHLENBQUUsQ0FBb0I7UUFDNUIsT0FBTyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFTSxHQUFHLENBQTRCLENBQVM7UUFDM0MsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVaLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxRQUFRLENBQTRCLENBQXlCO1FBQ2hFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVFLENBQUM7Q0FDSjtBQXJERCw2QkFxREMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEF4aXNWYWx1ZXNEYXRhPFQ+IHtcbiAgICB4OiBUO1xuICAgIHk6IFQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGVmdFRvcFZhbHVlczxUPiB7XG4gICAgbGVmdDogVDtcbiAgICB0b3A6IFQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmlnaHRCb3R0b21WYWx1ZXM8VD4ge1xuICAgIHJpZ2h0OiBUO1xuICAgIGJvdHRvbTogVDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXhpc1ZhbHVlczxUPiBpbXBsZW1lbnRzIEF4aXNWYWx1ZXNEYXRhPFQ+IHtcbiAgICBwdWJsaWMgeDogVDtcbiAgICBwdWJsaWMgeTogVDtcblxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvciAoeDogVCwgeTogVCkge1xuICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICB0aGlzLnkgPSB5O1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlPFQ+IChhOiBBeGlzVmFsdWVzRGF0YTxUPiB8IExlZnRUb3BWYWx1ZXM8VD4gfCBSaWdodEJvdHRvbVZhbHVlczxUPik6IEF4aXNWYWx1ZXM8VD4ge1xuICAgICAgICBpZiAoJ2xlZnQnIGluIGEpXG4gICAgICAgICAgICByZXR1cm4gbmV3IEF4aXNWYWx1ZXMoYS5sZWZ0LCBhLnRvcCk7XG4gICAgICAgIGVsc2UgaWYgKCdyaWdodCcgaW4gYSlcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXhpc1ZhbHVlcyhhLnJpZ2h0LCBhLmJvdHRvbSk7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBBeGlzVmFsdWVzKGEueCwgYS55KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkICh0aGlzOiBBeGlzVmFsdWVzPG51bWJlcj4sIHA6IEF4aXNWYWx1ZXNEYXRhPG51bWJlcj4pOiBBeGlzVmFsdWVzPG51bWJlcj4ge1xuICAgICAgICB0aGlzLnggKz0gcC54O1xuICAgICAgICB0aGlzLnkgKz0gcC55O1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdWIgKHRoaXM6IEF4aXNWYWx1ZXM8bnVtYmVyPiwgcDogQXhpc1ZhbHVlc0RhdGE8bnVtYmVyPik6IEF4aXNWYWx1ZXM8bnVtYmVyPiB7XG4gICAgICAgIHRoaXMueCAtPSBwLng7XG4gICAgICAgIHRoaXMueSAtPSBwLnk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIHJvdW5kICh0aGlzOiBBeGlzVmFsdWVzPG51bWJlcj4sIGZuID0gTWF0aC5yb3VuZCk6IEF4aXNWYWx1ZXM8bnVtYmVyPiB7XG4gICAgICAgIHRoaXMueCA9IGZuKHRoaXMueCk7XG4gICAgICAgIHRoaXMueSA9IGZuKHRoaXMueSk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGVxbCAocDogQXhpc1ZhbHVlc0RhdGE8VD4pOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMueCA9PT0gcC54ICYmIHRoaXMueSA9PT0gcC55O1xuICAgIH1cblxuICAgIHB1YmxpYyBtdWwgKHRoaXM6IEF4aXNWYWx1ZXM8bnVtYmVyPiwgbjogbnVtYmVyKTogQXhpc1ZhbHVlczxudW1iZXI+IHtcbiAgICAgICAgdGhpcy54ICo9IG47XG4gICAgICAgIHRoaXMueSAqPSBuO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBkaXN0YW5jZSAodGhpczogQXhpc1ZhbHVlczxudW1iZXI+LCBwOiBBeGlzVmFsdWVzRGF0YTxudW1iZXI+KTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyh0aGlzLnggLSBwLngsIDIpICsgTWF0aC5wb3codGhpcy55IC0gcC55LCAyKSk7XG4gICAgfVxufVxuIl19