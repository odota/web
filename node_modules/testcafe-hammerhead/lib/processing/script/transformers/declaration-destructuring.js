"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const node_builder_1 = require("../node-builder");
const esotope_hammerhead_1 = require("esotope-hammerhead");
const destructuring_1 = __importDefault(require("../destructuring"));
// Transform:
// var { location: loc } = window,
//     [{ location }, item] = [window, 6],
// -->
// var _hh$temp0 = window,
//     loc = _hh$temp0.location,
//     _hh$temp1 = [window, 6],
//     _hh$temp1$0 = _hh$temp1[0],
//     location = _hh$temp1$0.location,
//     item = _hh$temp1[1];
// var [a, b] = c;
// -->
// var _hh$temp0 = __arrayFrom$(c),
//     a = _hh$temp0[0],
//     b = _hh$temp0[1];
const transformer = {
    nodeReplacementRequireTransform: true,
    nodeTypes: esotope_hammerhead_1.Syntax.VariableDeclaration,
    // @ts-ignore
    condition: (node, parent) => {
        // Skip: for (let { x } in some);
        if ((parent === null || parent === void 0 ? void 0 : parent.type) === esotope_hammerhead_1.Syntax.ForInStatement)
            return false;
        for (const declarator of node.declarations) {
            if (declarator.id.type === esotope_hammerhead_1.Syntax.ObjectPattern || declarator.id.type === esotope_hammerhead_1.Syntax.ArrayPattern)
                return true;
        }
        return false;
    },
    run: (node) => {
        const declarations = [];
        for (const declarator of node.declarations) {
            destructuring_1.default(declarator.id, declarator.init || null, (pattern, value) => declarations.push(node_builder_1.createVariableDeclarator(pattern, value)));
        }
        return node_builder_1.createVariableDeclaration(node.kind, declarations);
    },
};
exports.default = transformer;module.exports = exports.default;

