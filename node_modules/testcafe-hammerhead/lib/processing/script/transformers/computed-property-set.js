"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
const node_builder_1 = require("../node-builder");
const esotope_hammerhead_1 = require("esotope-hammerhead");
const instrumented_1 = require("../instrumented");
// Transform:
// obj[prop] = value -->
// __set$(object, prop, value)
const transformer = {
    nodeReplacementRequireTransform: true,
    nodeTypes: esotope_hammerhead_1.Syntax.AssignmentExpression,
    condition: node => {
        const left = node.left;
        // super[prop] = value
        if (left.type === esotope_hammerhead_1.Syntax.MemberExpression && left.object.type === esotope_hammerhead_1.Syntax.Super)
            return false;
        if (node.operator === '=' && left.type === esotope_hammerhead_1.Syntax.MemberExpression && left.computed)
            return left.property.type === esotope_hammerhead_1.Syntax.Literal ? instrumented_1.shouldInstrumentProperty(left.property.value) : true;
        return false;
    },
    run: node => {
        const memberExpression = node.left;
        return node_builder_1.createComputedPropertySetWrapper(memberExpression.property, memberExpression.object, node.right);
    },
};
exports.default = transformer;module.exports = exports.default;

