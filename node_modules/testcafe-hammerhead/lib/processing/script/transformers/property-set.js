"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
const node_builder_1 = require("../node-builder");
const esotope_hammerhead_1 = require("esotope-hammerhead");
const instrumented_1 = require("../instrumented");
// Transform:
// obj.<wrappable-property> = value -->
// __set$(obj, '<wrappable-property>', value)
const transformer = {
    nodeReplacementRequireTransform: true,
    nodeTypes: esotope_hammerhead_1.Syntax.AssignmentExpression,
    condition: node => {
        // super.prop = value
        if (node.left.type === esotope_hammerhead_1.Syntax.MemberExpression && node.left.object.type === esotope_hammerhead_1.Syntax.Super)
            return false;
        return node.operator === '=' &&
            node.left.type === esotope_hammerhead_1.Syntax.MemberExpression && !node.left.computed &&
            node.left.property.type === esotope_hammerhead_1.Syntax.Identifier &&
            instrumented_1.shouldInstrumentProperty(node.left.property.name);
    },
    run: node => {
        const memberExpression = node.left;
        const identifier = memberExpression.property;
        return node_builder_1.createPropertySetWrapper(identifier.name, memberExpression.object, node.right);
    },
};
exports.default = transformer;module.exports = exports.default;

