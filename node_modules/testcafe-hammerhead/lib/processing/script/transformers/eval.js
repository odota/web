"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const node_builder_1 = require("../node-builder");
const replace_node_1 = __importDefault(require("./replace-node"));
const esotope_hammerhead_1 = require("esotope-hammerhead");
// Transform:
// eval(script); --> eval(__proc$Script(script));
const transformer = {
    nodeReplacementRequireTransform: false,
    nodeTypes: esotope_hammerhead_1.Syntax.CallExpression,
    condition: node => {
        if (!node.arguments.length)
            return false;
        const callee = node.callee;
        // eval()
        if (callee.type === esotope_hammerhead_1.Syntax.Identifier && callee.name === 'eval')
            return true;
        // obj.eval(), obj['eval'](),
        return callee.type === esotope_hammerhead_1.Syntax.MemberExpression &&
            (callee.property.type === esotope_hammerhead_1.Syntax.Identifier && callee.property.name ||
                callee.property.type === esotope_hammerhead_1.Syntax.Literal && callee.property.value) === 'eval';
    },
    run: node => {
        const newArgs = node_builder_1.createProcessScriptMethodCall(node.arguments[0]);
        replace_node_1.default(node.arguments[0], newArgs, node, 'arguments');
        return null;
    },
};
exports.default = transformer;module.exports = exports.default;

