"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const node_builder_1 = require("../node-builder");
const esotope_hammerhead_1 = require("esotope-hammerhead");
const replace_node_1 = __importDefault(require("./replace-node"));
// Transform:
// foo = eval.bind(...); -->
// foo = __get$Eval(eval).bind(...);
const transformer = {
    nodeReplacementRequireTransform: false,
    nodeTypes: esotope_hammerhead_1.Syntax.CallExpression,
    condition: node => {
        if (node.callee.type === esotope_hammerhead_1.Syntax.MemberExpression && node.callee.property.type === esotope_hammerhead_1.Syntax.Identifier &&
            node.callee.property.name === 'bind') {
            const obj = node.callee.object;
            // obj.eval.bind(), obj[eval].bind()
            if (obj.type === esotope_hammerhead_1.Syntax.MemberExpression &&
                (obj.property.type === esotope_hammerhead_1.Syntax.Identifier && obj.property.name ||
                    obj.property.type === esotope_hammerhead_1.Syntax.Literal && obj.property.value) === 'eval')
                return true;
            // eval.bind()
            if (obj.type === esotope_hammerhead_1.Syntax.Identifier && obj.name === 'eval')
                return true;
        }
        return false;
    },
    run: node => {
        const callee = node.callee;
        const getEvalNode = node_builder_1.createGetEvalMethodCall(callee.object);
        replace_node_1.default(callee.object, getEvalNode, callee, 'object');
        return null;
    },
};
exports.default = transformer;module.exports = exports.default;

