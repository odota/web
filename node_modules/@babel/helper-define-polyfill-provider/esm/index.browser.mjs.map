{"version":3,"file":"index.browser.mjs","sources":["../src/utils.ts","../src/imports-cache.ts","../src/debug-utils.ts","../src/normalize-options.ts","../src/visitors/usage.ts","../src/visitors/entry.ts","../src/browser/dependencies.ts","../src/meta-resolver.ts","../src/index.ts"],"sourcesContent":["import { types as t, template } from \"@babel/core\";\nimport type { NodePath } from \"@babel/traverse\";\nimport type { Utils } from \"./types\";\nimport type ImportsCache from \"./imports-cache\";\n\nexport function intersection<T>(a: Set<T>, b: Set<T>): Set<T> {\n  const result = new Set<T>();\n  a.forEach(v => b.has(v) && result.add(v));\n  return result;\n}\n\nexport function has(object: any, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction getType(target: any): string {\n  return Object.prototype.toString.call(target).slice(8, -1);\n}\n\nfunction resolveId(path): string {\n  if (\n    path.isIdentifier() &&\n    !path.scope.hasBinding(path.node.name, /* noGlobals */ true)\n  ) {\n    return path.node.name;\n  }\n\n  if (path.isPure()) {\n    const { deopt } = path.evaluate();\n    if (deopt && deopt.isIdentifier()) {\n      return deopt.node.name;\n    }\n  }\n}\n\nexport function resolveKey(\n  path: NodePath<t.Expression | t.PrivateName>,\n  computed: boolean = false,\n) {\n  const { scope } = path;\n  if (path.isStringLiteral()) return path.node.value;\n  const isIdentifier = path.isIdentifier();\n  if (\n    isIdentifier &&\n    !(computed || (path.parent as t.MemberExpression).computed)\n  ) {\n    return path.node.name;\n  }\n\n  if (\n    computed &&\n    path.isMemberExpression() &&\n    path.get(\"object\").isIdentifier({ name: \"Symbol\" }) &&\n    !scope.hasBinding(\"Symbol\", /* noGlobals */ true)\n  ) {\n    const sym = resolveKey(path.get(\"property\"), path.node.computed);\n    if (sym) return \"Symbol.\" + sym;\n  }\n\n  if (\n    isIdentifier\n      ? scope.hasBinding(path.node.name, /* noGlobals */ true)\n      : path.isPure()\n  ) {\n    const { value } = path.evaluate();\n    if (typeof value === \"string\") return value;\n  }\n}\n\nexport function resolveSource(obj: NodePath): {\n  id: string | null;\n  placement: \"prototype\" | \"static\" | null;\n} {\n  if (\n    obj.isMemberExpression() &&\n    obj.get(\"property\").isIdentifier({ name: \"prototype\" })\n  ) {\n    const id = resolveId(obj.get(\"object\"));\n\n    if (id) {\n      return { id, placement: \"prototype\" };\n    }\n    return { id: null, placement: null };\n  }\n\n  const id = resolveId(obj);\n  if (id) {\n    return { id, placement: \"static\" };\n  }\n\n  if (obj.isRegExpLiteral()) {\n    return { id: \"RegExp\", placement: \"prototype\" };\n  } else if (obj.isFunction()) {\n    return { id: \"Function\", placement: \"prototype\" };\n  } else if (obj.isPure()) {\n    const { value } = obj.evaluate();\n    if (value !== undefined) {\n      return { id: getType(value), placement: \"prototype\" };\n    }\n  }\n\n  return { id: null, placement: null };\n}\n\nexport function getImportSource({ node }: NodePath<t.ImportDeclaration>) {\n  if (node.specifiers.length === 0) return node.source.value;\n}\n\nexport function getRequireSource({ node }: NodePath<t.Statement>) {\n  if (!t.isExpressionStatement(node)) return;\n  const { expression } = node;\n  if (\n    t.isCallExpression(expression) &&\n    t.isIdentifier(expression.callee) &&\n    expression.callee.name === \"require\" &&\n    expression.arguments.length === 1 &&\n    t.isStringLiteral(expression.arguments[0])\n  ) {\n    return expression.arguments[0].value;\n  }\n}\n\nfunction hoist(node: t.Node) {\n  // @ts-expect-error\n  node._blockHoist = 3;\n  return node;\n}\n\nexport function createUtilsGetter(cache: ImportsCache) {\n  return (path: NodePath): Utils => {\n    const prog = path.findParent(p => p.isProgram()) as NodePath<t.Program>;\n\n    return {\n      injectGlobalImport(url) {\n        cache.storeAnonymous(prog, url, (isScript, source) => {\n          return isScript\n            ? template.statement.ast`require(${source})`\n            : t.importDeclaration([], source);\n        });\n      },\n      injectNamedImport(url, name, hint = name) {\n        return cache.storeNamed(prog, url, name, (isScript, source, name) => {\n          const id = prog.scope.generateUidIdentifier(hint);\n          return {\n            node: isScript\n              ? hoist(template.statement.ast`\n                  var ${id} = require(${source}).${name}\n                `)\n              : t.importDeclaration([t.importSpecifier(id, name)], source),\n            name: id.name,\n          };\n        });\n      },\n      injectDefaultImport(url, hint = url) {\n        return cache.storeNamed(prog, url, \"default\", (isScript, source) => {\n          const id = prog.scope.generateUidIdentifier(hint);\n          return {\n            node: isScript\n              ? hoist(template.statement.ast`var ${id} = require(${source})`)\n              : t.importDeclaration([t.importDefaultSpecifier(id)], source),\n            name: id.name,\n          };\n        });\n      },\n    };\n  };\n}\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\n\ntype StrMap<K> = Map<string, K>;\n\nexport default class ImportsCache {\n  _imports: WeakMap<NodePath<t.Program>, StrMap<string>>;\n  _anonymousImports: WeakMap<NodePath<t.Program>, Set<string>>;\n  _lastImports: WeakMap<NodePath<t.Program>, NodePath<t.Node>>;\n  _resolver: (url: string) => string;\n\n  constructor(resolver: (url: string) => string) {\n    this._imports = new WeakMap();\n    this._anonymousImports = new WeakMap();\n    this._lastImports = new WeakMap();\n    this._resolver = resolver;\n  }\n\n  storeAnonymous(\n    programPath: NodePath<t.Program>,\n    url: string,\n    // eslint-disable-next-line no-undef\n    getVal: (isScript: boolean, source: t.StringLiteral) => t.Node,\n  ) {\n    const key = this._normalizeKey(programPath, url);\n    const imports = this._ensure<Set<string>>(\n      this._anonymousImports,\n      programPath,\n      Set,\n    );\n\n    if (imports.has(key)) return;\n\n    const node = getVal(\n      programPath.node.sourceType === \"script\",\n      t.stringLiteral(this._resolver(url)),\n    );\n    imports.add(key);\n    this._injectImport(programPath, node);\n  }\n\n  storeNamed(\n    programPath: NodePath<t.Program>,\n    url: string,\n    name: string,\n    getVal: (\n      isScript: boolean,\n      // eslint-disable-next-line no-undef\n      source: t.StringLiteral,\n      // eslint-disable-next-line no-undef\n      name: t.Identifier,\n    ) => { node: t.Node; name: string },\n  ) {\n    const key = this._normalizeKey(programPath, url, name);\n    const imports = this._ensure<Map<string, any>>(\n      this._imports,\n      programPath,\n      Map,\n    );\n\n    if (!imports.has(key)) {\n      const { node, name: id } = getVal(\n        programPath.node.sourceType === \"script\",\n        t.stringLiteral(this._resolver(url)),\n        t.identifier(name),\n      );\n      imports.set(key, id);\n      this._injectImport(programPath, node);\n    }\n\n    return t.identifier(imports.get(key));\n  }\n\n  _injectImport(programPath: NodePath<t.Program>, node: t.Node) {\n    const lastImport = this._lastImports.get(programPath);\n    let newNodes: [NodePath];\n    if (\n      lastImport &&\n      lastImport.node &&\n      // Sometimes the AST is modified and the \"last import\"\n      // we have has been replaced\n      lastImport.parent === programPath.node &&\n      lastImport.container === programPath.node.body\n    ) {\n      newNodes = lastImport.insertAfter(node);\n    } else {\n      newNodes = programPath.unshiftContainer(\"body\", node);\n    }\n    const newNode = newNodes[newNodes.length - 1];\n    this._lastImports.set(programPath, newNode);\n\n    /*\n    let lastImport;\n\n    programPath.get(\"body\").forEach(path => {\n      if (path.isImportDeclaration()) lastImport = path;\n      if (\n        path.isExpressionStatement() &&\n        isRequireCall(path.get(\"expression\"))\n      ) {\n        lastImport = path;\n      }\n      if (\n        path.isVariableDeclaration() &&\n        path.get(\"declarations\").length === 1 &&\n        (isRequireCall(path.get(\"declarations.0.init\")) ||\n          (path.get(\"declarations.0.init\").isMemberExpression() &&\n            isRequireCall(path.get(\"declarations.0.init.object\"))))\n      ) {\n        lastImport = path;\n      }\n    });*/\n  }\n\n  _ensure<C extends Map<string, any> | Set<string>>(\n    map: WeakMap<NodePath<t.Program>, C>,\n    programPath: NodePath<t.Program>,\n    Collection: { new (...args: any): C },\n  ): C {\n    let collection = map.get(programPath);\n    if (!collection) {\n      collection = new Collection();\n      map.set(programPath, collection);\n    }\n    return collection;\n  }\n\n  _normalizeKey(\n    programPath: NodePath<t.Program>,\n    url: string,\n    name: string = \"\",\n  ): string {\n    const { sourceType } = programPath.node;\n\n    // If we rely on the imported binding (the \"name\" parameter), we also need to cache\n    // based on the sourceType. This is because the module transforms change the names\n    // of the import variables.\n    return `${name && sourceType}::${url}::${name}`;\n  }\n}\n","import { prettifyTargets } from \"@babel/helper-compilation-targets\";\n\nimport type { Targets } from \"./types\";\n\nexport const presetEnvSilentDebugHeader =\n  \"#__secret_key__@babel/preset-env__don't_log_debug_header_and_resolved_targets\";\n\nexport function stringifyTargetsMultiline(targets: Targets): string {\n  return JSON.stringify(prettifyTargets(targets), null, 2);\n}\n\nexport function stringifyTargets(targets: Targets): string {\n  return JSON.stringify(targets)\n    .replace(/,/g, \", \")\n    .replace(/^\\{\"/, '{ \"')\n    .replace(/\"\\}$/, '\" }');\n}\n","import { intersection } from \"./utils\";\nimport type {\n  Pattern,\n  PluginOptions,\n  MissingDependenciesOption,\n} from \"./types\";\n\nfunction patternToRegExp(pattern: Pattern): RegExp | null {\n  if (pattern instanceof RegExp) return pattern;\n\n  try {\n    return new RegExp(`^${pattern}$`);\n  } catch {\n    return null;\n  }\n}\n\nfunction buildUnusedError(label, unused) {\n  if (!unused.length) return \"\";\n  return (\n    `  - The following \"${label}\" patterns didn't match any polyfill:\\n` +\n    unused.map(original => `    ${String(original)}\\n`).join(\"\")\n  );\n}\n\nfunction buldDuplicatesError(duplicates) {\n  if (!duplicates.size) return \"\";\n  return (\n    `  - The following polyfills were matched both by \"include\" and \"exclude\" patterns:\\n` +\n    Array.from(duplicates, name => `    ${name}\\n`).join(\"\")\n  );\n}\n\nexport function validateIncludeExclude(\n  provider: string,\n  polyfills: Set<string>,\n  includePatterns: Pattern[],\n  excludePatterns: Pattern[],\n) {\n  let current;\n  const filter = pattern => {\n    const regexp = patternToRegExp(pattern);\n    if (!regexp) return false;\n\n    let matched = false;\n    for (const polyfill of polyfills) {\n      if (regexp.test(polyfill)) {\n        matched = true;\n        current.add(polyfill);\n      }\n    }\n    return !matched;\n  };\n\n  // prettier-ignore\n  const include = current = new Set<string> ();\n  const unusedInclude = Array.from(includePatterns).filter(filter);\n\n  // prettier-ignore\n  const exclude = current = new Set<string> ();\n  const unusedExclude = Array.from(excludePatterns).filter(filter);\n\n  const duplicates = intersection(include, exclude);\n\n  if (\n    duplicates.size > 0 ||\n    unusedInclude.length > 0 ||\n    unusedExclude.length > 0\n  ) {\n    throw new Error(\n      `Error while validating the \"${provider}\" provider options:\\n` +\n        buildUnusedError(\"include\", unusedInclude) +\n        buildUnusedError(\"exclude\", unusedExclude) +\n        buldDuplicatesError(duplicates),\n    );\n  }\n\n  return { include, exclude };\n}\n\nexport function applyMissingDependenciesDefaults(\n  options: PluginOptions,\n  babelApi: any,\n): MissingDependenciesOption {\n  const { missingDependencies = {} } = options;\n  if (missingDependencies === false) return false;\n\n  const caller = babelApi.caller(caller => caller?.name);\n\n  const {\n    log = \"deferred\",\n    inject = caller === \"rollup-plugin-babel\" ? \"throw\" : \"import\",\n    all = false,\n  } = missingDependencies;\n\n  return { log, inject, all };\n}\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\nimport type { MetaDescriptor } from \"../types\";\n\nimport { resolveKey, resolveSource } from \"../utils\";\n\nexport default (\n  callProvider: (payload: MetaDescriptor, path: NodePath) => void,\n) => {\n  function property(object, key, placement, path) {\n    return callProvider({ kind: \"property\", object, key, placement }, path);\n  }\n\n  return {\n    // Symbol(), new Promise\n    ReferencedIdentifier(path: NodePath<t.Identifier>) {\n      const {\n        node: { name },\n        scope,\n      } = path;\n      if (scope.getBindingIdentifier(name)) return;\n\n      callProvider({ kind: \"global\", name }, path);\n    },\n\n    MemberExpression(path: NodePath<t.MemberExpression>) {\n      const key = resolveKey(path.get(\"property\"), path.node.computed);\n      if (!key || key === \"prototype\") return;\n\n      const object = path.get(\"object\");\n      if (object.isIdentifier()) {\n        const binding = object.scope.getBinding(object.node.name);\n        if (binding && binding.path.isImportNamespaceSpecifier()) return;\n      }\n\n      const source = resolveSource(object);\n      return property(source.id, key, source.placement, path);\n    },\n\n    ObjectPattern(path: NodePath<t.ObjectPattern>) {\n      const { parentPath, parent } = path;\n      let obj;\n\n      // const { keys, values } = Object\n      if (parentPath.isVariableDeclarator()) {\n        obj = parentPath.get(\"init\");\n        // ({ keys, values } = Object)\n      } else if (parentPath.isAssignmentExpression()) {\n        obj = parentPath.get(\"right\");\n        // !function ({ keys, values }) {...} (Object)\n        // resolution does not work after properties transform :-(\n      } else if (parentPath.isFunction()) {\n        const grand = parentPath.parentPath;\n        if (grand.isCallExpression() || grand.isNewExpression()) {\n          if (grand.node.callee === parent) {\n            obj = grand.get(\"arguments\")[path.key];\n          }\n        }\n      }\n\n      let id = null;\n      let placement = null;\n      if (obj) ({ id, placement } = resolveSource(obj));\n\n      for (const prop of path.get(\"properties\")) {\n        if (prop.isObjectProperty()) {\n          const key = resolveKey(prop.get(\"key\"));\n          if (key) property(id, key, placement, prop);\n        }\n      }\n    },\n\n    BinaryExpression(path: NodePath<t.BinaryExpression>) {\n      if (path.node.operator !== \"in\") return;\n\n      const source = resolveSource(path.get(\"right\"));\n      const key = resolveKey(path.get(\"left\"), true);\n\n      if (!key) return;\n\n      callProvider(\n        {\n          kind: \"in\",\n          object: source.id,\n          key,\n          placement: source.placement,\n        },\n        path,\n      );\n    },\n  };\n};\n","import type { NodePath } from \"@babel/traverse\";\nimport { types as t } from \"@babel/core\";\nimport type { MetaDescriptor } from \"../types\";\n\nimport { getImportSource, getRequireSource } from \"../utils\";\n\nexport default (\n  callProvider: (payload: MetaDescriptor, path: NodePath) => void,\n) => ({\n  ImportDeclaration(path: NodePath<t.ImportDeclaration>) {\n    const source = getImportSource(path);\n    if (!source) return;\n    callProvider({ kind: \"import\", source }, path);\n  },\n  Program(path: NodePath<t.Program>) {\n    path.get(\"body\").forEach(bodyPath => {\n      const source = getRequireSource(bodyPath);\n      if (!source) return;\n      callProvider({ kind: \"import\", source }, bodyPath);\n    });\n  },\n});\n","export function resolve(\n  dirname: string,\n  moduleName: string,\n  absoluteImports: boolean | string,\n): string {\n  if (absoluteImports === false) return moduleName;\n\n  throw new Error(\n    `\"absoluteImports\" is not supported in bundles prepared for the browser.`,\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function has(basedir: string, name: string) {\n  return true;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function logMissing(missingDeps: Set<string>) {}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function laterLogMissing(missingDeps: Set<string>) {}\n","import type {\n  MetaDescriptor,\n  ResolverPolyfills,\n  ResolvedPolyfill,\n} from \"./types\";\n\nimport { has } from \"./utils\";\n\ntype ResolverFn<T> = (meta: MetaDescriptor) => void | ResolvedPolyfill<T>;\n\nconst PossibleGlobalObjects = new Set<string>([\n  \"global\",\n  \"globalThis\",\n  \"self\",\n  \"window\",\n]);\n\nexport default function createMetaResolver<T>(\n  polyfills: ResolverPolyfills<T>,\n): ResolverFn<T> {\n  const { static: staticP, instance: instanceP, global: globalP } = polyfills;\n\n  return meta => {\n    if (meta.kind === \"global\" && globalP && has(globalP, meta.name)) {\n      return { kind: \"global\", desc: globalP[meta.name], name: meta.name };\n    }\n\n    if (meta.kind === \"property\" || meta.kind === \"in\") {\n      const { placement, object, key } = meta;\n\n      if (object && placement === \"static\") {\n        if (globalP && PossibleGlobalObjects.has(object) && has(globalP, key)) {\n          return { kind: \"global\", desc: globalP[key], name: key };\n        }\n\n        if (staticP && has(staticP, object) && has(staticP[object], key)) {\n          return {\n            kind: \"static\",\n            desc: staticP[object][key],\n            name: `${object}$${key}`,\n          };\n        }\n      }\n\n      if (instanceP && has(instanceP, key)) {\n        return { kind: \"instance\", desc: instanceP[key], name: `${key}` };\n      }\n    }\n  };\n}\n","import { declare } from \"@babel/helper-plugin-utils\";\nimport type { NodePath } from \"@babel/traverse\";\n\nimport _getTargets, {\n  isRequired,\n  getInclusionReasons,\n} from \"@babel/helper-compilation-targets\";\nconst getTargets = _getTargets.default || _getTargets;\n\nimport { createUtilsGetter } from \"./utils\";\nimport ImportsCache from \"./imports-cache\";\nimport {\n  stringifyTargetsMultiline,\n  presetEnvSilentDebugHeader,\n} from \"./debug-utils\";\nimport {\n  validateIncludeExclude,\n  applyMissingDependenciesDefaults,\n} from \"./normalize-options\";\n\nimport type {\n  ProviderApi,\n  MethodString,\n  Targets,\n  MetaDescriptor,\n  PolyfillProvider,\n  PluginOptions,\n  ProviderOptions,\n} from \"./types\";\n\nimport * as v from \"./visitors\";\nimport * as deps from \"./node/dependencies\";\n\nimport createMetaResolver from \"./meta-resolver\";\n\nexport type { PolyfillProvider, MetaDescriptor, Utils, Targets } from \"./types\";\n\nfunction resolveOptions<Options>(\n  options: PluginOptions,\n  babelApi,\n): {\n  method: MethodString;\n  methodName: \"usageGlobal\" | \"entryGlobal\" | \"usagePure\";\n  targets: Targets;\n  debug: boolean | typeof presetEnvSilentDebugHeader;\n  shouldInjectPolyfill:\n    | ((name: string, shouldInject: boolean) => boolean)\n    | undefined;\n  providerOptions: ProviderOptions<Options>;\n  absoluteImports: string | boolean;\n} {\n  const {\n    method,\n    targets: targetsOption,\n    ignoreBrowserslistConfig,\n    configPath,\n    debug,\n    shouldInjectPolyfill,\n    absoluteImports,\n    ...providerOptions\n  } = options;\n\n  if (isEmpty(options)) {\n    throw new Error(\n      `\\\nThis plugin requires options, for example:\n    {\n      \"plugins\": [\n        [\"<plugin name>\", { method: \"usage-pure\" }]\n      ]\n    }\n\nSee more options at https://github.com/babel/babel-polyfills/blob/main/docs/usage.md`,\n    );\n  }\n\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";\n  else if (method === \"entry-global\") methodName = \"entryGlobal\";\n  else if (method === \"usage-pure\") methodName = \"usagePure\";\n  else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(\n      `.method must be one of \"entry-global\", \"usage-global\"` +\n        ` or \"usage-pure\" (received ${JSON.stringify(method)})`,\n    );\n  }\n\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(\n        `.include and .exclude are not supported when using the` +\n          ` .shouldInjectPolyfill function.`,\n      );\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(\n      `.shouldInjectPolyfill must be a function, or undefined` +\n        ` (received ${JSON.stringify(shouldInjectPolyfill)})`,\n    );\n  }\n\n  if (\n    absoluteImports != null &&\n    typeof absoluteImports !== \"boolean\" &&\n    typeof absoluteImports !== \"string\"\n  ) {\n    throw new Error(\n      `.absoluteImports must be a boolean, a string, or undefined` +\n        ` (received ${JSON.stringify(absoluteImports)})`,\n    );\n  }\n\n  let targets;\n\n  if (\n    // If any browserslist-related option is specified, fallback to the old\n    // behavior of not using the targets specified in the top-level options.\n    targetsOption ||\n    configPath ||\n    ignoreBrowserslistConfig\n  ) {\n    const targetsObj =\n      typeof targetsOption === \"string\" || Array.isArray(targetsOption)\n        ? { browsers: targetsOption }\n        : targetsOption;\n\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath,\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports ?? false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: providerOptions as any as ProviderOptions<Options>,\n  };\n}\n\nfunction instantiateProvider<Options>(\n  factory: PolyfillProvider<Options>,\n  options: PluginOptions,\n  missingDependencies,\n  dirname,\n  debugLog,\n  babelApi,\n) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports,\n  } = resolveOptions<Options>(options, babelApi);\n\n  const getUtils = createUtilsGetter(\n    new ImportsCache(moduleName =>\n      deps.resolve(dirname, moduleName, absoluteImports),\n    ),\n  );\n\n  // eslint-disable-next-line prefer-const\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames;\n  let filterPolyfills;\n\n  const depsCache = new Map();\n\n  const api: ProviderApi = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver,\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(\n          `Internal error in the ${factory.name} provider: ` +\n            `shouldInjectPolyfill() can't be called during initialization.`,\n        );\n      }\n      if (!polyfillsNames.has(name)) {\n        console.warn(\n          `Internal error in the ${providerName} provider: ` +\n            `unknown polyfill \"${name}\".`,\n        );\n      }\n\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n\n      let shouldInject = isRequired(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude,\n      });\n\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n\n      return shouldInject;\n    },\n    debug(name) {\n      debugLog().found = true;\n\n      if (!debug || !name) return;\n\n      if (debugLog().polyfills.has(providerName)) return;\n      debugLog().polyfills.add(name);\n      debugLog().polyfillsSupport ??= polyfillsSupport;\n    },\n    assertDependency(name, version = \"*\") {\n      if (missingDependencies === false) return;\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n\n      const found = missingDependencies.all\n        ? false\n        : mapGetOr(depsCache, `${name} :: ${dirname}`, () =>\n            deps.has(dirname, name),\n          );\n\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    },\n  };\n\n  const provider = factory(api, providerOptions, dirname);\n  const providerName = provider.name || factory.name;\n\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(\n      `The \"${providerName}\" provider doesn't support the \"${method}\" polyfilling method.`,\n    );\n  }\n\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Set(provider.polyfills);\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Set(Object.keys(provider.polyfills));\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Set();\n  }\n\n  ({ include, exclude } = validateIncludeExclude(\n    providerName,\n    polyfillsNames,\n    providerOptions.include || [],\n    providerOptions.exclude || [],\n  ));\n\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n    providerName,\n    callProvider(payload: MetaDescriptor, path: NodePath) {\n      const utils = getUtils(path);\n      provider[methodName](payload, utils, path);\n    },\n  };\n}\n\nexport default function definePolyfillProvider<Options>(\n  factory: PolyfillProvider<Options>,\n) {\n  return declare((babelApi, options: PluginOptions, dirname: string) => {\n    babelApi.assertVersion(\"^7.0.0 || ^8.0.0-alpha.0\");\n    const { traverse } = babelApi;\n\n    let debugLog;\n\n    const missingDependencies = applyMissingDependenciesDefaults(\n      options,\n      babelApi,\n    );\n\n    const { debug, method, targets, provider, providerName, callProvider } =\n      instantiateProvider<Options>(\n        factory,\n        options,\n        missingDependencies,\n        dirname,\n        () => debugLog,\n        babelApi,\n      );\n\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n\n    const visitor = provider.visitor\n      ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor])\n      : createVisitor(callProvider);\n\n    if (debug && debug !== presetEnvSilentDebugHeader) {\n      console.log(`${providerName}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${stringifyTargetsMultiline(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n\n    const { runtimeName } = provider;\n\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n\n      pre(file) {\n        if (runtimeName) {\n          if (\n            file.get(\"runtimeHelpersModuleName\") &&\n            file.get(\"runtimeHelpersModuleName\") !== runtimeName\n          ) {\n            console.warn(\n              `Two different polyfill providers` +\n                ` (${file.get(\"runtimeHelpersModuleProvider\")}` +\n                ` and ${providerName}) are trying to define two` +\n                ` conflicting @babel/runtime alternatives:` +\n                ` ${file.get(\"runtimeHelpersModuleName\")} and ${runtimeName}.` +\n                ` The second one will be ignored.`,\n            );\n          } else {\n            file.set(\"runtimeHelpersModuleName\", runtimeName);\n            file.set(\"runtimeHelpersModuleProvider\", providerName);\n          }\n        }\n\n        debugLog = {\n          polyfills: new Set(),\n          polyfillsSupport: undefined,\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set(),\n        };\n\n        provider.pre?.apply(this, arguments);\n      },\n      post() {\n        provider.post?.apply(this, arguments);\n\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n\n        if (!debug) return;\n\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n\n        if (debugLog.polyfills.size === 0) {\n          console.log(\n            method === \"entry-global\"\n              ? debugLog.found\n                ? `Based on your targets, the ${providerName} polyfill did not add any polyfill.`\n                : `The entry point for the ${providerName} polyfill has not been found.`\n              : `Based on your code and targets, the ${providerName} polyfill did not add any polyfill.`,\n          );\n\n          return;\n        }\n\n        if (method === \"entry-global\") {\n          console.log(\n            `The ${providerName} polyfill entry has been replaced with ` +\n              `the following polyfills:`,\n          );\n        } else {\n          console.log(\n            `The ${providerName} polyfill added the following polyfills:`,\n          );\n        }\n\n        for (const name of debugLog.polyfills) {\n          if (debugLog.polyfillsSupport?.[name]) {\n            const filteredTargets = getInclusionReasons(\n              name,\n              targets,\n              debugLog.polyfillsSupport,\n            );\n\n            const formattedTargets = JSON.stringify(filteredTargets)\n              .replace(/,/g, \", \")\n              .replace(/^\\{\"/, '{ \"')\n              .replace(/\"\\}$/, '\" }');\n\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      },\n    };\n  });\n}\n\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n  return val;\n}\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n"],"names":["types","t","template","_babel","default","intersection","a","b","result","Set","forEach","v","has","add","object","key","Object","prototype","hasOwnProperty","call","getType","target","toString","slice","resolveId","path","isIdentifier","scope","hasBinding","node","name","isPure","deopt","evaluate","resolveKey","computed","isStringLiteral","value","parent","isMemberExpression","get","sym","resolveSource","obj","id","placement","isRegExpLiteral","isFunction","undefined","getImportSource","specifiers","length","source","getRequireSource","isExpressionStatement","expression","isCallExpression","callee","arguments","hoist","_blockHoist","createUtilsGetter","cache","prog","findParent","p","isProgram","injectGlobalImport","url","storeAnonymous","isScript","statement","ast","importDeclaration","injectNamedImport","hint","storeNamed","generateUidIdentifier","importSpecifier","injectDefaultImport","importDefaultSpecifier","ImportsCache","constructor","resolver","_imports","WeakMap","_anonymousImports","_lastImports","_resolver","programPath","getVal","_normalizeKey","imports","_ensure","sourceType","stringLiteral","_injectImport","Map","identifier","set","lastImport","newNodes","container","body","insertAfter","unshiftContainer","newNode","map","Collection","collection","presetEnvSilentDebugHeader","stringifyTargetsMultiline","targets","JSON","stringify","prettifyTargets","patternToRegExp","pattern","RegExp","buildUnusedError","label","unused","original","String","join","buldDuplicatesError","duplicates","size","Array","from","validateIncludeExclude","provider","polyfills","includePatterns","excludePatterns","current","filter","regexp","matched","polyfill","test","include","unusedInclude","exclude","unusedExclude","Error","applyMissingDependenciesDefaults","options","babelApi","missingDependencies","caller","log","inject","all","callProvider","property","kind","ReferencedIdentifier","getBindingIdentifier","MemberExpression","binding","getBinding","isImportNamespaceSpecifier","ObjectPattern","parentPath","isVariableDeclarator","isAssignmentExpression","grand","isNewExpression","prop","isObjectProperty","BinaryExpression","operator","ImportDeclaration","Program","bodyPath","resolve","dirname","moduleName","absoluteImports","basedir","logMissing","missingDeps","laterLogMissing","PossibleGlobalObjects","createMetaResolver","static","staticP","instance","instanceP","global","globalP","meta","desc","getTargets","_getTargets","resolveOptions","method","targetsOption","ignoreBrowserslistConfig","configPath","debug","shouldInjectPolyfill","providerOptions","isEmpty","methodName","targetsObj","isArray","browsers","instantiateProvider","factory","debugLog","getUtils","deps","polyfillsSupport","polyfillsNames","filterPolyfills","depsCache","api","babel","console","warn","providerName","shouldInject","isRequired","compatData","includes","excludes","_debugLog","_debugLog$polyfillsSu","found","assertDependency","version","dep","mapGetOr","keys","payload","utils","definePolyfillProvider","declare","assertVersion","traverse","createVisitor","visitor","visitors","merge","runtimeName","pre","file","_provider$pre","providers","apply","post","_provider$post","filename","_debugLog$polyfillsSu2","filteredTargets","getInclusionReasons","formattedTargets","replace","getDefault","val"],"mappings":"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"}